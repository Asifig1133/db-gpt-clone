2024-08-01 12:16:01 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x1684c92a0>
2024-08-01 12:16:01 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x1684c92a0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1764f0550>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1764f0550>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1764f3ca0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1764f3ca0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1682eaad0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1682eaad0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x176634ee0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x176634ee0>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x176635240>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x176635240>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1752ea380>
2024-08-01 12:16:03 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1752ea380>
2024-08-01 12:16:03 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 12:16:03 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 12:16:03 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 12:16:07 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 12:16:07 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x176602aa0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x176602aa0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x32fe45c00>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x32fe45c00>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x32fe9f100>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x32fe9f100>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x32fe9f250>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x32fe9f250>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x32fe47ca0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x32fe47ca0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x32fe47c40>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x32fe47c40>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x32fe46fe0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x32fe46fe0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x32fe47250>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x32fe47250>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x32fe47010>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x32fe47010>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x32fff23b0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x32fff23b0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x32fff2440>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x32fff2440>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x32fff3a00>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x32fff3a00>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x318f56890>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x318f56890>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x32fff3af0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x32fff3af0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x318f56aa0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x318f56aa0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x318f569e0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x318f569e0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x3192d1ff0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x3192d1ff0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x3192d1fc0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x3192d1fc0>
2024-08-01 12:16:09 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:16:09 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

5125424024bb (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:16:09 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 5125424024bb, latest revision: 5125424024bb
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:16:09 | INFO | alembic.autogenerate.compare | Detected added column 'knowledge_space.domain_type'
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:16:09 | INFO | alembic.runtime.migration | Running upgrade 5125424024bb -> 6b279d6f1476, New migration
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x3193c20b0>
2024-08-01 12:16:09 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x3193c20b0>
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:16:09 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31adceec0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:16:09 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31adceec0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:16:09 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:16:09 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:16:09 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:16:09 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:09 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=7e090934-7adb-4601-a2bc-38a94fd44746)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=7e090934-7adb-4601-a2bc-38a94fd44746)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abade10>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abade10>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abade10>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=99dc6bd8-6646-4a78-8290-c6bd4d905a46)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=99dc6bd8-6646-4a78-8290-c6bd4d905a46)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abef1c0>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abef1c0>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abef1c0>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bbc15a12-9f5a-4ba6-b031-427fafd86d38)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bbc15a12-9f5a-4ba6-b031-427fafd86d38)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abec5e0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abec5e0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abec5e0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9d6700e6-9093-46f5-a80c-f48e36a9632e)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9d6700e6-9093-46f5-a80c-f48e36a9632e)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31abf53f0>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31abf53f0>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31abf53f0>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d5aa836b-b631-4422-b42e-430736905b71)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d5aa836b-b631-4422-b42e-430736905b71)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abee5f0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abee5f0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abee5f0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a95c9571-65cc-4b5c-bd0a-c58e16c2127b)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a95c9571-65cc-4b5c-bd0a-c58e16c2127b)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abadcf0>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abadcf0>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abadcf0>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4e689660-1abe-4051-859b-4d53702d6476)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4e689660-1abe-4051-859b-4d53702d6476)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf6560>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf6560>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf6560>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3229399b-4927-4684-88ff-644c841aab7f)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3229399b-4927-4684-88ff-644c841aab7f)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf7520>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf7520>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf7520>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=90b6b77d-a920-4a8b-ade4-1c8528250403)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=90b6b77d-a920-4a8b-ade4-1c8528250403)
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf4b80>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf4b80>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31abf4b80>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fe9f190> to prefix path /api/v1/awel/trigger
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x3210ae9e0>
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x3210ae9e0>
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: https://ml-qa-01-stcyu.centralus.inference.ml.azure.com/v1/chat/completions
proxy_api_key: e******7
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:16:11 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: https://ml-qa-01-stcyu.centralus.inference.ml.azure.com/v1/chat/completions
proxy_api_key: e******7
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:16:11 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: https://ml-qa-01-stcyu.centralus.inference.ml.azure.com/v1/chat/completions
proxy_api_key: e******7
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 12:16:13 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:16:13 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:16:14 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x323256620>
2024-08-01 12:16:14 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:16:15 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 12:16:15 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 12:16:15 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 12:16:15 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x3290aa320>
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x3290aa320>
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:16:45 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:16:46 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:16:46 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:16:46 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:16:46 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:17:14 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x112f48430>
2024-08-01 12:17:14 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x112f48430>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x147a41690>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x147a41690>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x147aeaa70>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x147aeaa70>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x112cc5e10>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x112cc5e10>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x147c38040>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x147c38040>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x147c38f40>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x147c38f40>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1461f6020>
2024-08-01 12:17:15 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1461f6020>
2024-08-01 12:17:15 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 12:17:15 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 12:17:15 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 12:17:16 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 12:17:16 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x147af6740>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x147af6740>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x17a655990>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x17a655990>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x17a6548e0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x17a6548e0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x17a6561a0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x17a6561a0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x17a6562f0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x17a6562f0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x17a656350>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x17a656350>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x17a6c4a00>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x17a6c4a00>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x17a6c4880>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x17a6c4880>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x17a6c4b80>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x17a6c4b80>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x30f36e0e0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x30f36e0e0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x30f36dfc0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x30f36dfc0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x30f34ab00>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x30f34ab00>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x30fbe2920>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x30fbe2920>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x30f34ab90>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x30f34ab90>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x30fbe2b30>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x30fbe2b30>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x30fbe2a70>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x30fbe2a70>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x17b4ddf30>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x17b4ddf30>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x17b4dde70>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x17b4dde70>
2024-08-01 12:17:17 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:17:17 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

6b279d6f1476 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:17:17 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 6b279d6f1476, latest revision: 6b279d6f1476
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:17:17 | INFO | alembic.runtime.migration | Running upgrade 6b279d6f1476 -> 27d02737b3e2, New migration
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x17c6057e0>
2024-08-01 12:17:17 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x17c6057e0>
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:17:17 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x17c734940>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:17:17 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x17c734940>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:17:17 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:17:17 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:17:17 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:17:17 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:17 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=abd71c22-a29c-40b9-b79c-836ce03205ea)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=abd71c22-a29c-40b9-b79c-836ce03205ea)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=262ef306-fb96-4ee1-a72d-413f5f87507f)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=262ef306-fb96-4ee1-a72d-413f5f87507f)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=82efed61-43ed-4fd9-aa5e-25952ddd0602)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=82efed61-43ed-4fd9-aa5e-25952ddd0602)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30298f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c40e7ce7-167a-4062-a6d9-ed43e7f7f81c)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c40e7ce7-167a-4062-a6d9-ed43e7f7f81c)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x30298fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x30298fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x30298fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1209b445-1041-494f-82c9-5c9a81120f72)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1209b445-1041-494f-82c9-5c9a81120f72)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=559b51c1-76f7-49a8-8ca8-275490526abb)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=559b51c1-76f7-49a8-8ca8-275490526abb)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b19120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b19120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b19120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=51e6ad15-a867-4ff5-b3c8-59b57675e4a0)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=51e6ad15-a867-4ff5-b3c8-59b57675e4a0)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a0e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a0e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a0e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bfda76ce-fdcb-4c33-94cb-ec9497794a28)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bfda76ce-fdcb-4c33-94cb-ec9497794a28)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1b490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1b490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1b490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3bf5229a-1848-4249-9f55-865125f5b573)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3bf5229a-1848-4249-9f55-865125f5b573)
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a3b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a3b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x302b1a3b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17a6560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x302cf0940>
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x302cf0940>
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:17:18 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:17:18 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: None
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 12:17:20 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:20 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:17:22 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x30501f940>
2024-08-01 12:17:22 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:17:22 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 12:17:22 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 12:17:22 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 12:17:22 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 12:17:45 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 12:17:45 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 12:17:45 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 12:18:31 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 12:18:31 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='0e422eaa-4fd2-11ef-ad27-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:18:31 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x30b37fdc0>
2024-08-01 12:18:31 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:18:31 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9b3f30ff-de1d-43b8-a4d9-589bed8ec613, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9b3f30ff-de1d-43b8-a4d9-589bed8ec613, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9b3f30ff-de1d-43b8-a4d9-589bed8ec613, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: eac068be-26e8-4b8d-87e3-b6808d792aaf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: eac068be-26e8-4b8d-87e3-b6808d792aaf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: eac068be-26e8-4b8d-87e3-b6808d792aaf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'providers(Id, ORGANIZATION, NAME, GENDER, SPECIALITY, ADDRESS, CITY, STATE, ZIP, LAT, LON, UTILIZATION)\', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Hi\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='dd248114317e97ebe040e0de78203082:640467165b40fe73', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='dd248114317e97ebe040e0de78203082:640467165b40fe73', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d5b407a4-1e71-4f4f-8839-edbe69157516, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d5b407a4-1e71-4f4f-8839-edbe69157516, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d5b407a4-1e71-4f4f-8839-edbe69157516, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2dc351a2-67db-42cb-9829-9d2149d49e9a
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2dc351a2-67db-42cb-9829-9d2149d49e9a
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2dc351a2-67db-42cb-9829-9d2149d49e9a
2024-08-01 12:18:35 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:18:35 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Run operator <class 'dbgpt.storage.cache.operators.ModelSaveCacheOperator'>(87a2773f-d245-4cc6-b909-a8d67ff820e9) error, error message: Traceback (most recent call last):
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/runner/local_runner.py", line 183, in _execute_node
    await node._run(dag_ctx, task_ctx.log_id)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/base.py", line 202, in _run
    return await self._do_run(dag_ctx)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/common_operator.py", line 173, in _do_run
    input_ctx: InputContext = await curr_task_ctx.task_input.map(map_function)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 538, in map
    new_outputs, results = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 533, in _apply_func
    results = await asyncio.gather(*map_tasks)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 126, in map
    out = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 112, in _apply_func
    out = await func(self._data)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/operators.py", line 231, in map
    llm_cache_value: LLMCacheValue = self._client.new_value(output=input_value)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 194, in new_value
    value = LLMCacheValue(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 126, in __init__
    self.value = LLMCacheValueData.from_dict(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 42, in from_dict
    raise ValueError("Can't new LLMCacheValueData object, output is None")
ValueError: Can't new LLMCacheValueData object, output is None

2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Run operator <class 'dbgpt.storage.cache.operators.ModelSaveCacheOperator'>(87a2773f-d245-4cc6-b909-a8d67ff820e9) error, error message: Traceback (most recent call last):
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/runner/local_runner.py", line 183, in _execute_node
    await node._run(dag_ctx, task_ctx.log_id)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/base.py", line 202, in _run
    return await self._do_run(dag_ctx)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/common_operator.py", line 173, in _do_run
    input_ctx: InputContext = await curr_task_ctx.task_input.map(map_function)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 538, in map
    new_outputs, results = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 533, in _apply_func
    results = await asyncio.gather(*map_tasks)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 126, in map
    out = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 112, in _apply_func
    out = await func(self._data)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/operators.py", line 231, in map
    llm_cache_value: LLMCacheValue = self._client.new_value(output=input_value)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 194, in new_value
    value = LLMCacheValue(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 126, in __init__
    self.value = LLMCacheValueData.from_dict(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 42, in from_dict
    raise ValueError("Can't new LLMCacheValueData object, output is None")
ValueError: Can't new LLMCacheValueData object, output is None

2024-08-01 12:18:35 | INFO | dbgpt.core.awel.runner.local_runner | Run operator <class 'dbgpt.storage.cache.operators.ModelSaveCacheOperator'>(87a2773f-d245-4cc6-b909-a8d67ff820e9) error, error message: Traceback (most recent call last):
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/runner/local_runner.py", line 183, in _execute_node
    await node._run(dag_ctx, task_ctx.log_id)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/base.py", line 202, in _run
    return await self._do_run(dag_ctx)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/operators/common_operator.py", line 173, in _do_run
    input_ctx: InputContext = await curr_task_ctx.task_input.map(map_function)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 538, in map
    new_outputs, results = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 533, in _apply_func
    results = await asyncio.gather(*map_tasks)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 126, in map
    out = await self._apply_func(map_func)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/core/awel/task/task_impl.py", line 112, in _apply_func
    out = await func(self._data)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/operators.py", line 231, in map
    llm_cache_value: LLMCacheValue = self._client.new_value(output=input_value)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 194, in new_value
    value = LLMCacheValue(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 126, in __init__
    self.value = LLMCacheValueData.from_dict(**kwargs)
  File "/Users/asif/Desktop/DB-GPT/dbgpt/storage/cache/llm_cache.py", line 42, in from_dict
    raise ValueError("Can't new LLMCacheValueData object, output is None")
ValueError: Can't new LLMCacheValueData object, output is None

2024-08-01 12:18:35 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: ValueError, Can't new LLMCacheValueData object, output is None
2024-08-01 12:18:35 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 12:19:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,test,ollama_proxyllm
2024-08-01 12:19:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='37556b04-4fd2-11ef-ad27-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_normal' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6df4a43a-b5c0-43cf-abc1-dc035949fa21, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6df4a43a-b5c0-43cf-abc1-dc035949fa21, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6df4a43a-b5c0-43cf-abc1-dc035949fa21, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 581d6ce4-1f19-4a3d-a681-69b20a1c9a36, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 581d6ce4-1f19-4a3d-a681-69b20a1c9a36, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 581d6ce4-1f19-4a3d-a681-69b20a1c9a36, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='c58b11ed2a9780518311261cf881eaa7:3c83cf737b170ef1', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='c58b11ed2a9780518311261cf881eaa7:3c83cf737b170ef1', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 881c1c6e-a038-49ca-b760-417ff71e1792, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 881c1c6e-a038-49ca-b760-417ff71e1792, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 881c1c6e-a038-49ca-b760-417ff71e1792, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17a6561d0>
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b81511a6-3292-4fb9-9baa-a6a050499cfb
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b81511a6-3292-4fb9-9baa-a6a050499cfb
2024-08-01 12:19:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b81511a6-3292-4fb9-9baa-a6a050499cfb
2024-08-01 12:19:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:19:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:19:36 | ERROR | dbgpt.app.scene.base_chat | model response parse failed！local variable 'msg' referenced before assignment
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x317cfe560>
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x317cfe560>
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:26:17 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:26:17 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:26:17 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:26:17 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:26:17 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 12:26:34 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127b48460>
2024-08-01 12:26:34 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127b48460>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x161e41690>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x161e41690>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x161eeaa70>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x161eeaa70>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1277c5e40>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1277c5e40>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x162038040>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x162038040>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x162038f40>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x162038f40>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1605f6020>
2024-08-01 12:26:35 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1605f6020>
2024-08-01 12:26:35 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 12:26:35 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 12:26:35 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 12:26:36 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 12:26:36 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x161ef6740>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x161ef6740>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16e955990>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16e955990>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16e9548e0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16e9548e0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16e9561a0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16e9561a0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16e9562f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16e9562f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16e956350>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16e956350>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16e9d81f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16e9d81f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16e9d84f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16e9d84f0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16e9d8070>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16e9d8070>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x170b4a0e0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x170b4a0e0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x170b49fc0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x170b49fc0>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x170b16b00>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x170b16b00>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16ca3a920>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16ca3a920>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x170b16b90>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x170b16b90>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16ca3ab30>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16ca3ab30>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16ca3aa70>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16ca3aa70>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x16cdd5f30>
2024-08-01 12:26:37 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x16cdd5f30>
2024-08-01 12:26:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x16cdd5e70>
2024-08-01 12:26:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x16cdd5e70>
2024-08-01 12:26:38 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:26:38 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

27d02737b3e2 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:26:38 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 27d02737b3e2, latest revision: 27d02737b3e2
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 12:26:38 | INFO | alembic.runtime.migration | Running upgrade 27d02737b3e2 -> 108b26ba5abd, New migration
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 12:26:38 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16df2d900>
2024-08-01 12:26:38 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16df2d900>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 12:26:38 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x16e05d1b0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:26:38 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x16e05d1b0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 12:26:38 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:26:38 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 12:26:38 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=83de3c6b-18b2-4cce-8faa-8e461653d756)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=83de3c6b-18b2-4cce-8faa-8e461653d756)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300595f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300595f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300595f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3bd2e9a7-f04d-472e-b3d7-b33aa9ec6610)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3bd2e9a7-f04d-472e-b3d7-b33aa9ec6610)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300596c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300596c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300596c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=046cd2b2-bc99-4a55-beff-41f491f5183a)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=046cd2b2-bc99-4a55-beff-41f491f5183a)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3005975b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3005975b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3005975b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b3efcd43-f3e1-4eb7-87db-9582986d55b7)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b3efcd43-f3e1-4eb7-87db-9582986d55b7)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x300597d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x300597d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x300597d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a9421170-62e3-451c-acd6-24d58675f837)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a9421170-62e3-451c-acd6-24d58675f837)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3006188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3006188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3006188b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=49f76c73-00c7-4777-9b34-8c20af9d5be2)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=49f76c73-00c7-4777-9b34-8c20af9d5be2)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=baaccd97-048c-4d88-aab0-a419c6e62711)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=baaccd97-048c-4d88-aab0-a419c6e62711)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x300619900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e7136ba5-147a-4493-8dc4-115e83ff31e8)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e7136ba5-147a-4493-8dc4-115e83ff31e8)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=673a817a-f7bc-449d-a486-5a9a4d94ddf8)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=673a817a-f7bc-449d-a486-5a9a4d94ddf8)
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x30061a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9560e0> to prefix path /api/v1/awel/trigger
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x300793eb0>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x300793eb0>
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:26:38 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 12:26:38 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 12:26:40 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:40 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:42 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:42 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:42 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:42 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 12:26:42 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x30233ada0>
2024-08-01 12:26:42 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:26:43 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 12:26:43 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 12:26:43 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 12:26:43 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 12:28:44 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 12:28:44 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 12:28:44 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 12:28:47 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,,ollama_proxyllm
2024-08-01 12:28:47 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='37556b04-4fd2-11ef-ad27-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_normal' select_param='' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5ebc0012-3937-4dca-88c3-1ed11d520050, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5ebc0012-3937-4dca-88c3-1ed11d520050, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5ebc0012-3937-4dca-88c3-1ed11d520050, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7987e6c6-0d5f-455f-a137-2436e8e8b33e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7987e6c6-0d5f-455f-a137-2436e8e8b33e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7987e6c6-0d5f-455f-a137-2436e8e8b33e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=1), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='facca4f8f646f40099846d2b07f00dcd:15830cbff3e1f9c7', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='facca4f8f646f40099846d2b07f00dcd:15830cbff3e1f9c7', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: caed937c-00ba-4507-b003-e11cfa0cf203, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: caed937c-00ba-4507-b003-e11cfa0cf203, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: caed937c-00ba-4507-b003-e11cfa0cf203, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ac4e8d3c-ce35-4e69-8a99-f9334297eb2c
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ac4e8d3c-ce35-4e69-8a99-f9334297eb2c
2024-08-01 12:28:47 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ac4e8d3c-ce35-4e69-8a99-f9334297eb2c
2024-08-01 12:28:47 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:28:47 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:28:51 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:28:51 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:29:04 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,,ollama_proxyllm
2024-08-01 12:29:04 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='37556b04-4fd2-11ef-ad27-0a065cd3fd91' user_input='can you code snake game in python' user_name=None chat_mode='chat_normal' select_param='' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6c23eb9e-34f1-4b2f-b3ba-dc794d46dd41, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6c23eb9e-34f1-4b2f-b3ba-dc794d46dd41, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6c23eb9e-34f1-4b2f-b3ba-dc794d46dd41, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 218d4cb5-0e66-4fd8-a38a-2404c567b0c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 218d4cb5-0e66-4fd8-a38a-2404c567b0c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 218d4cb5-0e66-4fd8-a38a-2404c567b0c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=1), ModelMessage(role='human', content='Hi', round_index=2), ModelMessage(role='ai', content='Hello! How can I assist you today?', round_index=2), ModelMessage(role='human', content='can you code snake game in python', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='75139e5ec04a090a98891090fa2f0e82:73c228d968b400e5', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='75139e5ec04a090a98891090fa2f0e82:73c228d968b400e5', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce2c15dc-4602-4f8b-8f31-45717d237778, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce2c15dc-4602-4f8b-8f31-45717d237778, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce2c15dc-4602-4f8b-8f31-45717d237778, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5e1eaf6e-7a07-4545-8011-f1af96a6f6c2
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5e1eaf6e-7a07-4545-8011-f1af96a6f6c2
2024-08-01 12:29:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5e1eaf6e-7a07-4545-8011-f1af96a6f6c2
2024-08-01 12:29:04 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:29:04 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:29:07 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:29:07 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:31:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 12:31:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:31:36 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3078e32e0>
2024-08-01 12:31:36 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:31:36 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87263316-6836-448b-b539-637a39dedf1c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87263316-6836-448b-b539-637a39dedf1c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87263316-6836-448b-b539-637a39dedf1c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7c15577-4f43-44f2-8674-c5f9e66b4f6a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7c15577-4f43-44f2-8674-c5f9e66b4f6a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7c15577-4f43-44f2-8674-c5f9e66b4f6a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'organizations(Id, NAME, ADDRESS, CITY, STATE, ZIP, LAT, LON, PHONE, REVENUE, UTILIZATION), and index keys: sqlite_autoindex_organizations_1(`Id`) \', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you tell me about this database\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='143cf623f524954247cd12b00639affb:8b8cd5eab847f1c6', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='143cf623f524954247cd12b00639affb:8b8cd5eab847f1c6', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a880c0e2-fb2c-4c33-a922-733e859cc2f0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a880c0e2-fb2c-4c33-a922-733e859cc2f0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a880c0e2-fb2c-4c33-a922-733e859cc2f0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id df8245f5-6f77-4d70-b703-0d5c62731d01
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id df8245f5-6f77-4d70-b703-0d5c62731d01
2024-08-01 12:31:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id df8245f5-6f77-4d70-b703-0d5c62731d01
2024-08-01 12:31:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:31:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:31:51 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:31:51 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:32:03 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "The test database contains information related to encounters, payers, claims transactions, organizations, and care plans. Encounters involve details such as patient, organization, provider, payer, encounter class, code, description, cost, etc., while payers have their own information including amounts covered/uncovered, revenue, and number of unique customers. Claims transactions contain detailed financial records with various codes, procedures, diagnosis references, and fees. Organizations include details about the business such as address, phone, and revenue. Care plans provide information on patient care plans related to encounters.",     "sql": "SELECT 'Encounters', COUNT(*) FROM encounters UNION ALL SELECT 'Payers', COUNT(*) FROM payers UNION ALL SELECT 'Claims Transactions', COUNT(*) FROM claims_transactions UNION ALL SELECT 'Organizations', COUNT(*) FROM organizations UNION ALL SELECT 'Care Plans', COUNT(*) FROM careplans;",     "display_type": "response_table" }
2024-08-01 12:32:03 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT 'Encounters', COUNT(*) FROM encounters UNION ALL SELECT 'Payers', COUNT(*) FROM payers UNION ALL SELECT 'Claims Transactions', COUNT(*) FROM claims_transactions UNION ALL SELECT 'Organizations', COUNT(*) FROM organizations UNION ALL SELECT 'Care Plans', COUNT(*) FROM careplans;
2024-08-01 12:32:03 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT 'Encounters', COUNT(*) FROM encounters UNION ALL SELECT 'Payers', COUNT(*) FROM payers UNION ALL SELECT 'Claims Transactions', COUNT(*) FROM claims_transactions UNION ALL SELECT 'Organizations', COUNT(*) FROM organizations UNION ALL SELECT 'Care Plans', COUNT(*) FROM careplans;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 12:32:03 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT 'Encounters', COUNT(*) FROM encounters UNION ALL SELECT 'Payers', COUNT(*) FROM payers UNION ALL SELECT 'Claims Transactions', COUNT(*) FROM claims_transactions UNION ALL SELECT 'Organizations', COUNT(*) FROM organizations UNION ALL SELECT 'Care Plans', COUNT(*) FROM careplans;]
2024-08-01 12:35:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 12:35:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 12:35:38 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x307a79d80>
2024-08-01 12:35:39 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 12:35:39 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2dfe82c-df1c-44a7-bf3d-f918db3895f9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2dfe82c-df1c-44a7-bf3d-f918db3895f9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2dfe82c-df1c-44a7-bf3d-f918db3895f9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9edf5ca2-1421-4737-9521-f397b52a197f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9edf5ca2-1421-4737-9521-f397b52a197f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9edf5ca2-1421-4737-9521-f397b52a197f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='b662ea343978cccae173d358538f8fd4:f54e8eb493ac620b', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='b662ea343978cccae173d358538f8fd4:f54e8eb493ac620b', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: da1c450e-0bcf-4671-ad77-92dbff91e8a1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: da1c450e-0bcf-4671-ad77-92dbff91e8a1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: da1c450e-0bcf-4671-ad77-92dbff91e8a1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 1a103e9e-178f-4fd2-9305-516af3f3b385
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 1a103e9e-178f-4fd2-9305-516af3f3b385
2024-08-01 12:35:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 1a103e9e-178f-4fd2-9305-516af3f3b385
2024-08-01 12:35:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:35:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 12:35:52 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:35:52 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 12:36:00 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find out which providers are seeing the most patients, we need to group the claims_transactions table by the PROVIDERID column. Then, count the number of unique PATIENTID for each provider and sort it in descending order. We can limit the results to 50 to meet the user's requirement.",     "sql": "SELECT PROVIDERID, COUNT(DISTINCT PATIENTID) AS patient_count FROM claims_transactions GROUP BY PROVIDERID ORDER BY patient_count DESC LIMIT 50",     "display_type": "response_bar_chart" }
2024-08-01 12:36:00 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROVIDERID, COUNT(DISTINCT PATIENTID) AS patient_count FROM claims_transactions GROUP BY PROVIDERID ORDER BY patient_count DESC LIMIT 50
2024-08-01 12:36:00 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROVIDERID, COUNT(DISTINCT PATIENTID) AS patient_count FROM claims_transactions GROUP BY PROVIDERID ORDER BY patient_count DESC LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 12:36:00 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT PROVIDERID, COUNT(DISTINCT PATIENTID) AS patient_count FROM claims_transactions GROUP BY PROVIDERID ORDER BY patient_count DESC LIMIT 50]
2024-08-01 12:37:19 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 12:37:19 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 12:37:19 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 14:19:14 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,test,ollama_proxyllm
2024-08-01 14:19:14 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='37556b04-4fd2-11ef-ad27-0a065cd3fd91' user_input='How many unique patients are present in the database?' user_name=None chat_mode='chat_normal' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 234cb90f-717d-4a61-a5ae-97d62fb9db37, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 234cb90f-717d-4a61-a5ae-97d62fb9db37, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 234cb90f-717d-4a61-a5ae-97d62fb9db37, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 955b608a-4022-425b-9cb6-7d72a3c7f7c7, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 955b608a-4022-425b-9cb6-7d72a3c7f7c7, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 955b608a-4022-425b-9cb6-7d72a3c7f7c7, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=1), ModelMessage(role='human', content='Hi', round_index=2), ModelMessage(role='ai', content='Hello! How can I assist you today?', round_index=2), ModelMessage(role='human', content='can you code snake game in python', round_index=3), ModelMessage(role='ai', content='Creating a simple Snake game in Python can be done using the Pygame library, which is widely used for creating video games and animations. Below is a basic implementation of a Snake game that you can run on your own computer.\n\nFirst, ensure you have Pygame installed. You can install it via pip if you haven\'t already:\n\n```bash\npip install pygame\n```\n\nHere\'s a simple version of the Snake game:\n\n```python\nimport pygame\nimport time\nimport random\n\npygame.init()\n\n# Screen dimensions\nwidth, height = 800, 600\nscreen = pygame.display.set_mode((width, height))\npygame.display.set_caption(\'Snake Game\')\n\nsnake_block = 10\nsnake_speed = 15\n\nclock = pygame.time.Clock()\nfont_style = pygame.font.SysFont(None, 50)\n\ndef our_snake(snake_block, snake_list):\n    for x in snake_list:\n        pygame.draw.rect(screen, (0, 255, 0), [x[0], x[1], snake_block, snake_block])\n\ndef message(msg, color):\n    mesg = font_style.render(msg, True, color)\n    screen.blit(mesg, [width / 6, height / 3])\n\ndef gameLoop():\n    game_over = False\n    game_close = False\n\n    x1 = width / 2\n    y1 = height / 2\n\n    x1_change = 0\n    y1_change = 0\n\n    snake_List = []\n    Length_of_snake = 1\n\n    foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0\n    foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0\n\n    while not game_over:\n\n        while game_close:\n            screen.fill((255, 255, 255))\n            message("You lost! Press Q-Quit or C-Play Again", (255, 0, 0))\n            pygame.display.update()\n\n            for event in pygame.event.get():\n                if event.type == pygame.KEYDOWN:\n                    if event.key == pygame.K_q:\n                        game_over = True\n                        game_close = False\n                    if event.key == pygame.K_c:\n                        gameLoop()\n\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                game_over = True\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_LEFT:\n                    x1_change = -snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_RIGHT:\n                    x1_change = snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_UP:\n                    y1_change = -snake_block\n                    x1_change = 0\n                elif event.key == pygame.K_DOWN:\n                    y1_change = snake_block\n                    x1_change = 0\n\n        if x1 >= width or x1 < 0 or y1 >= height or y1 < 0:\n            game_close = True\n        x1 += x1_change\n        y1 += y1_change\n        screen.fill((255, 255, 255))\n        pygame.draw.rect(screen, (0, 0, 255), [foodx, foody, snake_block, snake_block])\n        snake_Head = []\n        snake_Head.append(x1)\n        snake_Head.append(y1)\n        snake_List.append(snake_Head)\n        if len(snake_List) > Length_of_snake:\n            del snake_List[0]\n\n        for x in snake_List[:-1]:\n            if x == snake_Head:\n                game_close = True\n\n        our_snake(snake_block, snake_List)\n\n        pygame.display.update()\n\n        if x1 == foodx and y1 == foody:\n            foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0\n            foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0\n            Length_of_snake += 1\n\n        clock.tick(snake_speed)\n\n    pygame.quit()\n\ngameLoop()\n```\n\nThis code will create a simple window where you can move a snake around to eat apples and grow longer. The game ends if the snake hits the edge of the screen or runs into itself.\n\nTo run this, simply copy the code into a Python file (e.g., `snake.py`) and execute it with your Python interpreter. You might need to adjust the window size and speeds based on your preference and testing results.', round_index=3), ModelMessage(role='human', content='How many unique patients are present in the database?', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='16ecece73c97b5b138a526921ab62fb9:6082bac4f5ff59b5', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='16ecece73c97b5b138a526921ab62fb9:6082bac4f5ff59b5', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: df511c45-17ef-4775-a4b4-19d897390d56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: df511c45-17ef-4775-a4b4-19d897390d56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: df511c45-17ef-4775-a4b4-19d897390d56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcb29d6b-d45c-4472-959b-f4944d690d46
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcb29d6b-d45c-4472-959b-f4944d690d46
2024-08-01 14:19:14 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcb29d6b-d45c-4472-959b-f4944d690d46
2024-08-01 14:19:14 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:19:14 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:19:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:19:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:20:15 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 14:20:15 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='How many unique patients are present in the database?\n' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:20:15 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x16dee9060>
2024-08-01 14:20:15 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 14:20:15 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bc63dcce-ae3d-4b07-add9-ad09e9933d77, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bc63dcce-ae3d-4b07-add9-ad09e9933d77, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bc63dcce-ae3d-4b07-add9-ad09e9933d77, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4928b3b5-f3ad-4215-aef0-d8d1423892c0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4928b3b5-f3ad-4215-aef0-d8d1423892c0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4928b3b5-f3ad-4215-aef0-d8d1423892c0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How many unique patients are present in the database?\n\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How many unique patients are present in the database?\n', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='a7db6724b903a34f50d698db34281586:fcd8bbb61f3c3022', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='a7db6724b903a34f50d698db34281586:fcd8bbb61f3c3022', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce3ac56b-863b-46f9-99d2-c6ac7cd62ecf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce3ac56b-863b-46f9-99d2-c6ac7cd62ecf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ce3ac56b-863b-46f9-99d2-c6ac7cd62ecf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8f05c7b-c2b8-4f70-b2f3-1e17f72cf7cb
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8f05c7b-c2b8-4f70-b2f3-1e17f72cf7cb
2024-08-01 14:20:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8f05c7b-c2b8-4f70-b2f3-1e17f72cf7cb
2024-08-01 14:20:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:20:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:20:30 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:20:30 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:20:34 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the number of unique patients, we need to count distinct patient identifiers from the encounters table.",     "sql": "SELECT COUNT(DISTINCT PATIENT) FROM encounters;",     "display_type": "response_table" }
2024-08-01 14:20:34 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) FROM encounters;
2024-08-01 14:20:34 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) FROM encounters;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 14:20:34 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT COUNT(DISTINCT PATIENT) FROM encounters;]
2024-08-01 14:21:43 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 14:21:43 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='What are the top 10 most common reasons for patient encounters?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:21:43 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x16dff0460>
2024-08-01 14:21:43 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 14:21:43 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72cbbc19-ca92-4d42-a122-ac4769f7ca59, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72cbbc19-ca92-4d42-a122-ac4769f7ca59, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72cbbc19-ca92-4d42-a122-ac4769f7ca59, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7322ef7-475d-4645-8969-5a0935df016a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7322ef7-475d-4645-8969-5a0935df016a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7322ef7-475d-4645-8969-5a0935df016a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most common reasons for patient encounters?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most common reasons for patient encounters?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='25ec9f91d9289c3d90fc90a233dc3431:c19e12bde04070e0', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='25ec9f91d9289c3d90fc90a233dc3431:c19e12bde04070e0', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97093faa-4a15-4bfd-90d4-1f1224bd661c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97093faa-4a15-4bfd-90d4-1f1224bd661c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97093faa-4a15-4bfd-90d4-1f1224bd661c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f4ee29ca-d483-411d-9426-da23dfe7f81b
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f4ee29ca-d483-411d-9426-da23dfe7f81b
2024-08-01 14:21:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f4ee29ca-d483-411d-9426-da23dfe7f81b
2024-08-01 14:21:46 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:21:46 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:21:57 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:21:57 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:22:04 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the top 10 most common reasons for patient encounters, we will group the encounters table by the REASONCODE column and then count the number of occurrences. We will order the results by this count in descending order to get the most frequent reasons and limit the output to the top 10.",     "sql": "SELECT REASONCODE, COUNT(*) as reason_count FROM encounters GROUP BY REASONCODE ORDER BY reason_count DESC LIMIT 10;",     "display_type": "response_table" }
2024-08-01 14:22:04 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONCODE, COUNT(*) as reason_count FROM encounters GROUP BY REASONCODE ORDER BY reason_count DESC LIMIT 10;
2024-08-01 14:22:04 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONCODE, COUNT(*) as reason_count FROM encounters GROUP BY REASONCODE ORDER BY reason_count DESC LIMIT 10;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 14:22:04 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT REASONCODE, COUNT(*) as reason_count FROM encounters GROUP BY REASONCODE ORDER BY reason_count DESC LIMIT 10;]
2024-08-01 14:50:58 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 14:50:58 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='plot it' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:50:58 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x321c7af80>
2024-08-01 14:50:59 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 14:50:59 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 700df1b8-f147-4102-a5b0-9e873320e433, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 700df1b8-f147-4102-a5b0-9e873320e433, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 700df1b8-f147-4102-a5b0-9e873320e433, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b00d30df-b603-4f4d-b115-3e7df0086e22, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b00d30df-b603-4f4d-b115-3e7df0086e22, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b00d30df-b603-4f4d-b115-3e7df0086e22, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'allergies(START, STOP, PATIENT, ENCOUNTER, CODE, SYSTEM, DESCRIPTION, TYPE, CATEGORY, REACTION1, DESCRIPTION1, SEVERITY1, REACTION2, DESCRIPTION2, SEVERITY2)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'procedures(START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot it\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot it', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='71ac77354ed90deec5eaa9a2b057cfd6:17c991e16a1af2b0', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='71ac77354ed90deec5eaa9a2b057cfd6:17c991e16a1af2b0', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 37c204bb-1ca2-4a19-9723-0f684c4cde2a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 37c204bb-1ca2-4a19-9723-0f684c4cde2a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 37c204bb-1ca2-4a19-9723-0f684c4cde2a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f653a06f-8d0d-485c-96bf-463cb1cafc01
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f653a06f-8d0d-485c-96bf-463cb1cafc01
2024-08-01 14:51:03 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f653a06f-8d0d-485c-96bf-463cb1cafc01
2024-08-01 14:51:03 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:51:03 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:51:22 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:51:22 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:51:27 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "The user wants to plot data from the database. However, the table structure information does not provide sufficient details about which tables or columns to use for plotting. Additionally, no specific question was provided that would enable us to select a particular set of data to visualize.",     "sql": "",     "display_type": "" }
2024-08-01 14:51:27 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 14:51:27 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 14:51:27 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 14:52:32 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 14:52:32 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='plot the top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:52:32 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3078a16c0>
2024-08-01 14:52:32 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 14:52:32 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2d03363a-c824-4261-baa6-4792fe51744a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2d03363a-c824-4261-baa6-4792fe51744a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2d03363a-c824-4261-baa6-4792fe51744a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 39538e06-b50a-4dc1-8654-7cd96f874d7d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 39538e06-b50a-4dc1-8654-7cd96f874d7d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 39538e06-b50a-4dc1-8654-7cd96f874d7d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot the top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot the top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='516efa9b97127adb330db88da5a16d60:0325dbcea36df341', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='516efa9b97127adb330db88da5a16d60:0325dbcea36df341', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5abbca14-efb7-4838-b079-f3b0d5fcdff8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5abbca14-efb7-4838-b079-f3b0d5fcdff8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5abbca14-efb7-4838-b079-f3b0d5fcdff8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d6cb7efc-1b7c-420b-882f-ba209948ef08
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d6cb7efc-1b7c-420b-882f-ba209948ef08
2024-08-01 14:52:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d6cb7efc-1b7c-420b-882f-ba209948ef08
2024-08-01 14:52:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:52:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:52:47 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:52:47 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:52:57 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To plot the top 10 most common reasons for patient encounters along with their descriptions, we need to query the `encounters` table using the `REASONCODE` and `REASONDESCRIPTION` columns. We will group the results by `REASONCODE` and `REASONDESCRIPTION`, count the occurrences of each reason, and then order the results in descending order based on the count. Finally, we'll limit the results to the top 10.",     "sql": "SELECT REASONCODE, REASONDESCRIPTION, COUNT(*) AS reason_count FROM encounters GROUP BY REASONCODE, REASONDESCRIPTION ORDER BY reason_count DESC LIMIT 10",     "display_type": "response_pie_chart" }
2024-08-01 14:52:57 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONCODE, REASONDESCRIPTION, COUNT(*) AS reason_count FROM encounters GROUP BY REASONCODE, REASONDESCRIPTION ORDER BY reason_count DESC LIMIT 10
2024-08-01 14:52:57 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONCODE, REASONDESCRIPTION, COUNT(*) AS reason_count FROM encounters GROUP BY REASONCODE, REASONDESCRIPTION ORDER BY reason_count DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 14:52:57 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT REASONCODE, REASONDESCRIPTION, COUNT(*) AS reason_count FROM encounters GROUP BY REASONCODE, REASONDESCRIPTION ORDER BY reason_count DESC LIMIT 10]
2024-08-01 14:58:40 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 14:58:40 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 14:58:40 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3078e3d60>
2024-08-01 14:58:40 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 14:58:40 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13f8c9c7-db78-4065-8c05-b91ce5c264fe, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13f8c9c7-db78-4065-8c05-b91ce5c264fe, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13f8c9c7-db78-4065-8c05-b91ce5c264fe, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4de55e54-64ab-425e-baa6-26f52912a393, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4de55e54-64ab-425e-baa6-26f52912a393, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4de55e54-64ab-425e-baa6-26f52912a393, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='00e6a6da7ec7c8a99da3d74c3557d26e:ff9f4fb6ce1aa4db', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='00e6a6da7ec7c8a99da3d74c3557d26e:ff9f4fb6ce1aa4db', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bd5947de-c2b6-4b0c-ae58-f45f97062431, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bd5947de-c2b6-4b0c-ae58-f45f97062431, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: bd5947de-c2b6-4b0c-ae58-f45f97062431, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c6e6f5b3-7f39-4ed9-bb34-22e06a153bb9
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c6e6f5b3-7f39-4ed9-bb34-22e06a153bb9
2024-08-01 14:58:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c6e6f5b3-7f39-4ed9-bb34-22e06a153bb9
2024-08-01 14:58:42 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:58:42 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 14:58:58 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:58:58 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 14:59:06 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To analyze the total healthcare expenses for each patient, we need to sum up the amounts from the claims_transactions table where the TYPE indicates charges related to healthcare. We will join this with the patients table using PATIENTID as a common key.",     "sql": "SELECT p.*, SUM(c.amount) AS total_healthcare_expenses FROM patients p JOIN claims_transactions c ON p.Id = c.PATIENTID WHERE c.TYPE IN ('healthcare', 'medication', 'procedure') GROUP BY p.Id LIMIT 50;",     "display_type": "response_table" }
2024-08-01 14:59:06 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT p.*, SUM(c.amount) AS total_healthcare_expenses FROM patients p JOIN claims_transactions c ON p.Id = c.PATIENTID WHERE c.TYPE IN ('healthcare', 'medication', 'procedure') GROUP BY p.Id LIMIT 50;
2024-08-01 14:59:06 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT p.*, SUM(c.amount) AS total_healthcare_expenses FROM patients p JOIN claims_transactions c ON p.Id = c.PATIENTID WHERE c.TYPE IN ('healthcare', 'medication', 'procedure') GROUP BY p.Id LIMIT 50;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 14:59:06 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT p.*, SUM(c.amount) AS total_healthcare_expenses FROM patients p JOIN claims_transactions c ON p.Id = c.PATIENTID WHERE c.TYPE IN ('healthcare', 'medication', 'procedure') GROUP BY p.Id LIMIT 50;]
2024-08-01 15:01:25 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:01:25 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='for the above question can you correct the answer there is no claims_transactions table' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:01:25 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3215edfc0>
2024-08-01 15:01:25 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:01:25 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d0336795-917c-4294-93fe-8b718eba09c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d0336795-917c-4294-93fe-8b718eba09c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d0336795-917c-4294-93fe-8b718eba09c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59b07445-de4d-4fae-9c16-2fd41d7fcf49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59b07445-de4d-4fae-9c16-2fd41d7fcf49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59b07445-de4d-4fae-9c16-2fd41d7fcf49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\', \'procedures(START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST, REASONCODE, REASONDESCRIPTION)\', \'medications(START, STOP, PATIENT, PAYER, ENCOUNTER, CODE, DESCRIPTION, BASE_COST, PAYER_COVERAGE, DISPENSES, TOTALCOST, REASONCODE, REASONDESCRIPTION)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    for the above question can you correct the answer there is no claims_transactions table\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='for the above question can you correct the answer there is no claims_transactions table', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='9392b41e92a61be67abd8731784f451c:c20012b0c4779db5', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='9392b41e92a61be67abd8731784f451c:c20012b0c4779db5', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 31e38b0c-02f4-4218-80b7-6fdb405529e2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 31e38b0c-02f4-4218-80b7-6fdb405529e2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 31e38b0c-02f4-4218-80b7-6fdb405529e2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c66af9c7-3f6f-430d-96c4-12414b843a1e
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c66af9c7-3f6f-430d-96c4-12414b843a1e
2024-08-01 15:01:29 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c66af9c7-3f6f-430d-96c4-12414b843a1e
2024-08-01 15:01:29 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:01:29 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:01:40 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:01:40 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:01:44 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "The user's question seems to ask about correcting an error related to a non-existent 'claims_transactions' table in the database. Since the provided table structure definition does not include this table, I will respond accordingly.",     "sql": "",     "display_type": "Table" }
2024-08-01 15:01:44 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 15:01:44 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 15:01:44 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 15:02:13 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:02:13 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='deb889ca-4fd3-11ef-83f6-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:02:13 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x16dee9180>
2024-08-01 15:02:13 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:02:13 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c52cdb70-a891-482b-8f0e-89de74448473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c52cdb70-a891-482b-8f0e-89de74448473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c52cdb70-a891-482b-8f0e-89de74448473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a504802f-dd23-4b0f-9c3a-27d7322da20f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a504802f-dd23-4b0f-9c3a-27d7322da20f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a504802f-dd23-4b0f-9c3a-27d7322da20f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='f088d6ce6da54fdf6aed65708096a4e4:b00bb1d07b7552de', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='f088d6ce6da54fdf6aed65708096a4e4:b00bb1d07b7552de', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: baa43f21-cdb8-4eb7-8d66-62eb56e4e46b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: baa43f21-cdb8-4eb7-8d66-62eb56e4e46b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: baa43f21-cdb8-4eb7-8d66-62eb56e4e46b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16e9561d0>
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 33eb3ff4-86a6-4973-94e2-7533f4ff0c7b
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 33eb3ff4-86a6-4973-94e2-7533f4ff0c7b
2024-08-01 15:02:15 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 33eb3ff4-86a6-4973-94e2-7533f4ff0c7b
2024-08-01 15:02:15 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:02:15 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:02:24 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:02:24 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:02:35 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To analyze the total healthcare expenses for each patient based on their claims, medications, and procedures, we will need to sum up the amounts from the 'claims_transactions' table where the TYPE is either 'Medication' or 'Procedure'. We also need to join this with the 'patients' table on the PATIENTID field to group by patient. The query should be optimized to limit results to 50 for performance and accuracy.",     "sql": "SELECT patients.Id, patients.First || ' ' || patients.Last AS PatientName, SUM(claims_transactions.Amount) AS TotalHealthcareExpenses FROM claims_transactions JOIN patients ON claims_transactions.PatientId = patients.Id WHERE claims_transactions.Type IN ('Medication', 'Procedure') GROUP BY patients.Id LIMIT 50;",     "display_type": "response_table" }
2024-08-01 15:02:35 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT patients.Id, patients.First || ' ' || patients.Last AS PatientName, SUM(claims_transactions.Amount) AS TotalHealthcareExpenses FROM claims_transactions JOIN patients ON claims_transactions.PatientId = patients.Id WHERE claims_transactions.Type IN ('Medication', 'Procedure') GROUP BY patients.Id LIMIT 50;
2024-08-01 15:02:35 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT patients.Id, patients.First || ' ' || patients.Last AS PatientName, SUM(claims_transactions.Amount) AS TotalHealthcareExpenses FROM claims_transactions JOIN patients ON claims_transactions.PatientId = patients.Id WHERE claims_transactions.Type IN ('Medication', 'Procedure') GROUP BY patients.Id LIMIT 50;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:02:35 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT patients.Id, patients.First || ' ' || patients.Last AS PatientName, SUM(claims_transactions.Amount) AS TotalHealthcareExpenses FROM claims_transactions JOIN patients ON claims_transactions.PatientId = patients.Id WHERE claims_transactions.Type IN ('Medication', 'Procedure') GROUP BY patients.Id LIMIT 50;]
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x307887760>
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x307887760>
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 15:05:15 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 15:05:16 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 15:05:16 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 15:05:16 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 15:05:16 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 15:06:06 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x167248460>
2024-08-01 15:06:06 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x167248460>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16bf45990>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16bf45990>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16bfec280>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16bfec280>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x12ffc5e40>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x12ffc5e40>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16bff6da0>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16bff6da0>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16c938f10>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16c938f10>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x16aef5ff0>
2024-08-01 15:06:07 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x16aef5ff0>
2024-08-01 15:06:07 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 15:06:07 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 15:06:07 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 15:06:08 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 15:06:08 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16bff6710>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16bff6710>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31fbdd990>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31fbdd990>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31fbdc8e0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31fbdc8e0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31fbde1a0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31fbde1a0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31fbde2f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31fbde2f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31fbde350>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31fbde350>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31fc601f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31fc601f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31fc604f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31fc604f0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31fc60070>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31fc60070>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31fd760e0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31fd760e0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31fd75fc0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31fd75fc0>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31fd4ab00>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31fd4ab00>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31fdda920>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31fdda920>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31fd4ab90>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31fd4ab90>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31fddab30>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31fddab30>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31fddaa70>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31fddaa70>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x308dddf30>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x308dddf30>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x308ddde70>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x308ddde70>
2024-08-01 15:06:10 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 15:06:10 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

108b26ba5abd (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 15:06:10 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 108b26ba5abd, latest revision: 108b26ba5abd
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 15:06:10 | INFO | alembic.runtime.migration | Running upgrade 108b26ba5abd -> 34d5a391887a, New migration
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x30a001a20>
2024-08-01 15:06:10 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x30a001a20>
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 15:06:10 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x30a134d00>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 15:06:10 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x30a134d00>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 15:06:10 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 15:06:10 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 15:06:10 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 15:06:10 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:10 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=76596a1c-28d7-4314-b11a-ad4ac8957d03)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=76596a1c-28d7-4314-b11a-ad4ac8957d03)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310199f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310199f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310199f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=659db20f-f349-4f84-809c-585df85d9c6a)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=659db20f-f349-4f84-809c-585df85d9c6a)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bde1747c-3ca8-4abb-b7e4-7be7da79e2cf)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bde1747c-3ca8-4abb-b7e4-7be7da79e2cf)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31019b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=063e152a-b93a-4abe-8316-1981f4b7d1ed)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=063e152a-b93a-4abe-8316-1981f4b7d1ed)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31019bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31019bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31019bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b47e99d5-ae1e-4f20-b029-a0721fa7a037)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b47e99d5-ae1e-4f20-b029-a0721fa7a037)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102208b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102208b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102208b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=62b09840-245a-4c94-98fb-d4c25f0a4232)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=62b09840-245a-4c94-98fb-d4c25f0a4232)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310221120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310221120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310221120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a2f212bd-5652-4b95-a115-ad77fe72b0c9)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a2f212bd-5652-4b95-a115-ad77fe72b0c9)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102220e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102220e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102220e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a92dc2a4-2351-4814-a62f-3ab302989823)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a92dc2a4-2351-4814-a62f-3ab302989823)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310223490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310223490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x310223490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d313f739-b745-4202-a408-3d003966324a)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d313f739-b745-4202-a408-3d003966324a)
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102223b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102223b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3102223b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fbde0e0> to prefix path /api/v1/awel/trigger
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x3103f0940>
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x3103f0940>
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: llama3.1:8b-instruct-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 15:06:11 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: llama3.1:8b-instruct-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 15:06:11 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: llama3.1:8b-instruct-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 15:06:13 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:13 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:15 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:15 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:15 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:15 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 15:06:15 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x31041f6a0>
2024-08-01 15:06:15 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:06:15 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 15:06:15 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 15:06:15 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 15:06:15 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 15:07:15 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 15:07:15 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 15:07:15 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 15:07:24 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,test,ollama_proxyllm
2024-08-01 15:07:24 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='a894fc64-4fe9-11ef-92d0-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_normal' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa46735e-b45b-461e-afd0-495255d719b8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa46735e-b45b-461e-afd0-495255d719b8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa46735e-b45b-461e-afd0-495255d719b8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: beae7b84-53da-4cb5-8320-96405e987a68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: beae7b84-53da-4cb5-8320-96405e987a68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: beae7b84-53da-4cb5-8320-96405e987a68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='297b67fb9ccabb3324c77ad227bcd3df:09710c0b4523d532', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='297b67fb9ccabb3324c77ad227bcd3df:09710c0b4523d532', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff7533d-8a24-46ac-93ed-c23df8bf5079, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff7533d-8a24-46ac-93ed-c23df8bf5079, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff7533d-8a24-46ac-93ed-c23df8bf5079, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 268c139f-cb2c-44c3-944c-80f21158dbdc
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 268c139f-cb2c-44c3-944c-80f21158dbdc
2024-08-01 15:07:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 268c139f-cb2c-44c3-944c-80f21158dbdc
2024-08-01 15:07:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:07:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:07:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:07:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:02 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,test,ollama_proxyllm
2024-08-01 15:08:02 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='a894fc64-4fe9-11ef-92d0-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_normal' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9dbe5465-4439-4435-bbb7-bf59e3c5030c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9dbe5465-4439-4435-bbb7-bf59e3c5030c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9dbe5465-4439-4435-bbb7-bf59e3c5030c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2046e42-c71f-4df4-8722-37e19fe46cb6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2046e42-c71f-4df4-8722-37e19fe46cb6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2046e42-c71f-4df4-8722-37e19fe46cb6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='Hi', round_index=1), ModelMessage(role='ai', content='How can I assist you today?', round_index=1), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='f4022d3c804ed3d47c3619d2ad8e50f1:a3110f77480e92c1', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='f4022d3c804ed3d47c3619d2ad8e50f1:a3110f77480e92c1', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0b2822fc-8153-430d-b9ce-e8e4f0a3ff28, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0b2822fc-8153-430d-b9ce-e8e4f0a3ff28, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0b2822fc-8153-430d-b9ce-e8e4f0a3ff28, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fb1462a3-6f54-415f-a76d-3afb0fa4ddf0
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fb1462a3-6f54-415f-a76d-3afb0fa4ddf0
2024-08-01 15:08:02 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fb1462a3-6f54-415f-a76d-3afb0fa4ddf0
2024-08-01 15:08:02 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:02 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:17 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:08:17 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:08:17 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3183d0e80>
2024-08-01 15:08:17 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:08:17 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87b1f0b5-7e9d-42f2-92e2-e46c92b82b08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87b1f0b5-7e9d-42f2-92e2-e46c92b82b08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 87b1f0b5-7e9d-42f2-92e2-e46c92b82b08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dad7f93-2a0d-44ec-a0a3-db952d8e8e35, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dad7f93-2a0d-44ec-a0a3-db952d8e8e35, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dad7f93-2a0d-44ec-a0a3-db952d8e8e35, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'providers(Id, ORGANIZATION, NAME, GENDER, SPECIALITY, ADDRESS, CITY, STATE, ZIP, LAT, LON, UTILIZATION)\', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Hi\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='9cadc6933f648c855bc942486c4bfa75:1ae49c4a34e919ca', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='9cadc6933f648c855bc942486c4bfa75:1ae49c4a34e919ca', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ed787963-db4e-4d5f-90e4-a7956238d574, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ed787963-db4e-4d5f-90e4-a7956238d574, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ed787963-db4e-4d5f-90e4-a7956238d574, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 83067838-4d2c-472e-9287-8fa0bf4d0860
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 83067838-4d2c-472e-9287-8fa0bf4d0860
2024-08-01 15:08:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 83067838-4d2c-472e-9287-8fa0bf4d0860
2024-08-01 15:08:20 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:20 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:27 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:27 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:31 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "I'm ready to help you with your question. However, it seems like you haven't asked one yet. Could you please ask a question about the database or its tables?",     "sql": "",     "display_type": "Table" }
2024-08-01 15:08:31 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 15:08:31 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 15:08:31 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 15:08:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:08:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:08:38 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x329e961a0>
2024-08-01 15:08:38 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:08:38 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59f3384c-770a-4824-a2fa-756fee555995, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59f3384c-770a-4824-a2fa-756fee555995, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 59f3384c-770a-4824-a2fa-756fee555995, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef23b63e-dfd3-45f0-b4ba-479f5a0bd515, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef23b63e-dfd3-45f0-b4ba-479f5a0bd515, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef23b63e-dfd3-45f0-b4ba-479f5a0bd515, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'organizations(Id, NAME, ADDRESS, CITY, STATE, ZIP, LAT, LON, PHONE, REVENUE, UTILIZATION), and index keys: sqlite_autoindex_organizations_1(`Id`) \', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you tell me about this database\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='b260bd13134ee26cd0783bb68f9d9973:29c7da7e3ed0e3d4', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='b260bd13134ee26cd0783bb68f9d9973:29c7da7e3ed0e3d4', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 67689410-eab0-4367-8a84-be80ee9beb8c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 67689410-eab0-4367-8a84-be80ee9beb8c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 67689410-eab0-4367-8a84-be80ee9beb8c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 80378221-aaaa-4d76-b7f6-6ef55b408ce3
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 80378221-aaaa-4d76-b7f6-6ef55b408ce3
2024-08-01 15:08:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 80378221-aaaa-4d76-b7f6-6ef55b408ce3
2024-08-01 15:08:39 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:39 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:08:48 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:48 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:08:53 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "This database appears to be a healthcare-related database, containing information about encounters, patients, organizations, payers, claims transactions, and care plans. It includes details such as patient demographics, encounter dates, procedure codes, diagnoses, and payment information. The tables seem to be well-structured, allowing for efficient querying and analysis of the data.",   "sql": "",   "display_type": "Table" }
2024-08-01 15:08:53 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 15:08:53 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 15:08:53 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 15:10:04 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:10:04 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:10:04 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x320d07e80>
2024-08-01 15:10:04 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:10:04 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6e282099-033d-4e9f-90d2-97f4d3f60c8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6e282099-033d-4e9f-90d2-97f4d3f60c8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6e282099-033d-4e9f-90d2-97f4d3f60c8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1f919cea-5bcc-453c-b43a-7905968cb67e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1f919cea-5bcc-453c-b43a-7905968cb67e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1f919cea-5bcc-453c-b43a-7905968cb67e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='971d01ea85d449c704864e58d6563c08:a4e57fdf2ee0c852', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='971d01ea85d449c704864e58d6563c08:a4e57fdf2ee0c852', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 26821357-a747-4b5a-a46a-155d9b6d4982, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 26821357-a747-4b5a-a46a-155d9b6d4982, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 26821357-a747-4b5a-a46a-155d9b6d4982, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 786c9e1d-fb75-44d5-8742-8e2c18fe6e99
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 786c9e1d-fb75-44d5-8742-8e2c18fe6e99
2024-08-01 15:10:04 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 786c9e1d-fb75-44d5-8742-8e2c18fe6e99
2024-08-01 15:10:04 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:10:04 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:10:12 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:10:12 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:10:21 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To answer this question, we need to find out which providers have seen the most patients. We can do this by counting the number of patient visits for each provider in the claims table. However, since the claims table does not directly store the count of visits for each provider, we will have to create a subquery or join with another table that has the required information.",   "sql": "SELECT T2.PROVIDERID, COUNT(T1.PATIENTID) AS TotalVisits FROM claims_transactions T1 INNER JOIN claims T2 ON T1.CLAIMID = T2.Id GROUP BY T2.PROVIDERID ORDER BY TotalVisits DESC LIMIT 50",   "display_type": "response_bar_chart" }
2024-08-01 15:10:21 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT T2.PROVIDERID, COUNT(T1.PATIENTID) AS TotalVisits FROM claims_transactions T1 INNER JOIN claims T2 ON T1.CLAIMID = T2.Id GROUP BY T2.PROVIDERID ORDER BY TotalVisits DESC LIMIT 50
2024-08-01 15:10:21 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT T2.PROVIDERID, COUNT(T1.PATIENTID) AS TotalVisits FROM claims_transactions T1 INNER JOIN claims T2 ON T1.CLAIMID = T2.Id GROUP BY T2.PROVIDERID ORDER BY TotalVisits DESC LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:10:21 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT T2.PROVIDERID, COUNT(T1.PATIENTID) AS TotalVisits FROM claims_transactions T1 INNER JOIN claims T2 ON T1.CLAIMID = T2.Id GROUP BY T2.PROVIDERID ORDER BY TotalVisits DESC LIMIT 50]
2024-08-01 15:11:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with WorkerManager@service, healthy_only: True
2024-08-01 15:11:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with WorkerManager@service, healthy_only: True
2024-08-01 15:11:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: False
2024-08-01 15:11:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: False
2024-08-01 15:13:18 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:13:18 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='How many unique patients are present in the database?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:13:18 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x320dba140>
2024-08-01 15:13:19 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:13:19 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6940101d-f81d-43a2-b0d1-0517456b3331, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6940101d-f81d-43a2-b0d1-0517456b3331, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6940101d-f81d-43a2-b0d1-0517456b3331, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9ced731b-dc5d-45f7-8a7e-702a3e81b5da, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9ced731b-dc5d-45f7-8a7e-702a3e81b5da, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9ced731b-dc5d-45f7-8a7e-702a3e81b5da, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How many unique patients are present in the database?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How many unique patients are present in the database?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='44052c67c0f3bc1afaea5645e288c2be:c3e0711c32718ed9', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='44052c67c0f3bc1afaea5645e288c2be:c3e0711c32718ed9', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc58ef58-ab2e-4112-9240-89fcd85983db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc58ef58-ab2e-4112-9240-89fcd85983db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc58ef58-ab2e-4112-9240-89fcd85983db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0c9a5e5-0e15-4f6c-ba22-f3fbb3d8b8bb
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0c9a5e5-0e15-4f6c-ba22-f3fbb3d8b8bb
2024-08-01 15:13:20 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0c9a5e5-0e15-4f6c-ba22-f3fbb3d8b8bb
2024-08-01 15:13:20 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:13:20 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:13:28 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:13:28 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:13:33 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To find the number of unique patients, we need to select distinct values from the 'PATIENT' column in the 'encounters' table. Since there might be multiple encounters for a patient, using this table will ensure that we get all unique patients.",   "sql": "SELECT COUNT(DISTINCT PATIENT) FROM encounters LIMIT 50",   "display_type": "response_table" }
2024-08-01 15:13:33 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) FROM encounters LIMIT 50
2024-08-01 15:13:33 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) FROM encounters LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:13:33 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT COUNT(DISTINCT PATIENT) FROM encounters LIMIT 50]
2024-08-01 15:14:07 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:14:07 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='What are the top 10 most common reasons for patient encounters?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:14:07 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x320dba8c0>
2024-08-01 15:14:07 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:14:07 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2101dbd1-2ba2-46e6-882d-8809f6fc41ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2101dbd1-2ba2-46e6-882d-8809f6fc41ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2101dbd1-2ba2-46e6-882d-8809f6fc41ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c7440f4d-f05e-40e7-828b-b6aae123382e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c7440f4d-f05e-40e7-828b-b6aae123382e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c7440f4d-f05e-40e7-828b-b6aae123382e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most common reasons for patient encounters?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most common reasons for patient encounters?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='2c0fd35ca5e322ec888761b2c210cceb:acd0f6d1c089687a', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='2c0fd35ca5e322ec888761b2c210cceb:acd0f6d1c089687a', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 200db35e-33f9-47fb-af18-262497aef9df, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 200db35e-33f9-47fb-af18-262497aef9df, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 200db35e-33f9-47fb-af18-262497aef9df, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 7255c72c-6761-4006-acff-5bb3e1f0dd8e
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 7255c72c-6761-4006-acff-5bb3e1f0dd8e
2024-08-01 15:14:09 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 7255c72c-6761-4006-acff-5bb3e1f0dd8e
2024-08-01 15:14:09 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:14:09 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:14:16 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:14:16 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:14:20 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the top 10 most common reasons for patient encounters, we will count the frequency of each reasoncode in the 'encounters' table and return the top 10 results.",     "sql": "SELECT CODE, COUNT(*) AS frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10",     "display_type": "response_table" }
2024-08-01 15:14:20 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) AS frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10
2024-08-01 15:14:20 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) AS frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:14:20 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE, COUNT(*) AS frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10]
2024-08-01 15:14:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:14:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='can you plot last question' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:14:36 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32d5474c0>
2024-08-01 15:14:37 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:14:37 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8a8c935b-5a81-4060-9e2b-943c5b2a522c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8a8c935b-5a81-4060-9e2b-943c5b2a522c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8a8c935b-5a81-4060-9e2b-943c5b2a522c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13ba044a-0275-447f-a7a8-da63d9bbb79c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13ba044a-0275-447f-a7a8-da63d9bbb79c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 13ba044a-0275-447f-a7a8-da63d9bbb79c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'allergies(START, STOP, PATIENT, ENCOUNTER, CODE, SYSTEM, DESCRIPTION, TYPE, CATEGORY, REACTION1, DESCRIPTION1, SEVERITY1, REACTION2, DESCRIPTION2, SEVERITY2)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot last question\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot last question', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='fc1e75d69cd9f14a90678852d7037948:51311595982827ee', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='fc1e75d69cd9f14a90678852d7037948:51311595982827ee', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40f08a23-b5e8-4361-ab7f-6838cbde8eba, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40f08a23-b5e8-4361-ab7f-6838cbde8eba, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40f08a23-b5e8-4361-ab7f-6838cbde8eba, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a59a5b57-d968-484c-82aa-3845d1eee24b
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a59a5b57-d968-484c-82aa-3845d1eee24b
2024-08-01 15:14:38 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a59a5b57-d968-484c-82aa-3845d1eee24b
2024-08-01 15:14:38 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:14:38 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:14:45 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:14:45 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:14:50 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "I'm sorry, but I don't have the ability to retain information about previous questions or maintain a context. Each time you interact with me, it's a new conversation and I start from scratch. If you'd like to ask a new question or plot something specific, please feel free to do so!",   "sql": "",   "display_type": "" }
2024-08-01 15:14:50 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 15:14:50 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 15:14:50 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 15:16:30 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:16:30 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='plot the top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:16:30 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x329ef19c0>
2024-08-01 15:16:30 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:16:30 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40fcd0a7-a838-4a11-b26e-16cf2d8abc2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40fcd0a7-a838-4a11-b26e-16cf2d8abc2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 40fcd0a7-a838-4a11-b26e-16cf2d8abc2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 498f0734-273e-49f9-b0a6-b9e9df7b3a9a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 498f0734-273e-49f9-b0a6-b9e9df7b3a9a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 498f0734-273e-49f9-b0a6-b9e9df7b3a9a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot the top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot the top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='ab169cbf5ac83f93cd36fe19c5b4ad6a:02727856324f2f09', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='ab169cbf5ac83f93cd36fe19c5b4ad6a:02727856324f2f09', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 908642cf-9421-4cdc-aee7-7a502a8b7454, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 908642cf-9421-4cdc-aee7-7a502a8b7454, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 908642cf-9421-4cdc-aee7-7a502a8b7454, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 74bbac97-bd61-4d9d-82e9-d0739370b477
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 74bbac97-bd61-4d9d-82e9-d0739370b477
2024-08-01 15:16:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 74bbac97-bd61-4d9d-82e9-d0739370b477
2024-08-01 15:16:31 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:16:31 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:16:42 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:16:42 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:16:48 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To plot the top 10 most common reasons for patient encounters, we need to first group the 'REASONDESCRIPTION' column in the 'encounters' table by frequency and then select the top 10. We will use the COUNT() function to count the number of occurrences of each reason and the LIMIT clause to get only the top 10 results.",   "sql": "SELECT REASONDESCRIPTION, COUNT(*) as freq FROM encounters GROUP BY REASONDESCRIPTION ORDER BY freq DESC LIMIT 10;",   "display_type": "response_table" }
2024-08-01 15:16:48 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONDESCRIPTION, COUNT(*) as freq FROM encounters GROUP BY REASONDESCRIPTION ORDER BY freq DESC LIMIT 10;
2024-08-01 15:16:48 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONDESCRIPTION, COUNT(*) as freq FROM encounters GROUP BY REASONDESCRIPTION ORDER BY freq DESC LIMIT 10;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:16:48 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT REASONDESCRIPTION, COUNT(*) as freq FROM encounters GROUP BY REASONDESCRIPTION ORDER BY freq DESC LIMIT 10;]
2024-08-01 15:17:23 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:17:23 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='plot pie chart for top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:17:23 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32d8276a0>
2024-08-01 15:17:23 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:17:23 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dec442b-f65c-43f3-90f1-60b7a33f052f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dec442b-f65c-43f3-90f1-60b7a33f052f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dec442b-f65c-43f3-90f1-60b7a33f052f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8af886e8-21d0-4185-89d1-ecc2270aa449, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8af886e8-21d0-4185-89d1-ecc2270aa449, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8af886e8-21d0-4185-89d1-ecc2270aa449, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot pie chart for top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot pie chart for top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='ac2f961eb62c33d7892f8babf38a6437:03678d7f85c4d2aa', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='ac2f961eb62c33d7892f8babf38a6437:03678d7f85c4d2aa', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 604c19d8-027a-43f0-ad24-b9c94f7e6e3e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 604c19d8-027a-43f0-ad24-b9c94f7e6e3e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 604c19d8-027a-43f0-ad24-b9c94f7e6e3e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2f4997ba-9aa5-480f-8e3d-9e711fa6e9b4
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2f4997ba-9aa5-480f-8e3d-9e711fa6e9b4
2024-08-01 15:17:25 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2f4997ba-9aa5-480f-8e3d-9e711fa6e9b4
2024-08-01 15:17:25 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:17:25 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:17:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:17:32 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:17:37 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To plot a pie chart of the top 10 most common reasons for patient encounters, we need to group the data by reason code and count the occurrences. We can then select the top 10 results and use the reason description as the label for each slice of the pie chart.",   "sql": "SELECT CODE, COUNT(*) AS count FROM encounters GROUP BY CODE ORDER BY count DESC LIMIT 10",   "display_type": "response_pie_chart" }
2024-08-01 15:17:37 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) AS count FROM encounters GROUP BY CODE ORDER BY count DESC LIMIT 10
2024-08-01 15:17:37 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) AS count FROM encounters GROUP BY CODE ORDER BY count DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:17:37 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE, COUNT(*) AS count FROM encounters GROUP BY CODE ORDER BY count DESC LIMIT 10]
2024-08-01 15:19:11 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:19:11 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='plot pie chart for top 10 most common patient encounters' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:19:11 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x312a07ac0>
2024-08-01 15:19:11 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:19:11 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: cf650782-f2b4-4b1a-bc9d-c95d762eec95, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: cf650782-f2b4-4b1a-bc9d-c95d762eec95, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: cf650782-f2b4-4b1a-bc9d-c95d762eec95, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 409e4e1f-5564-46c0-b982-f0df031212f8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 409e4e1f-5564-46c0-b982-f0df031212f8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 409e4e1f-5564-46c0-b982-f0df031212f8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot pie chart for top 10 most common patient encounters\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot pie chart for top 10 most common patient encounters', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='875d8417ed15d6e7a148965b3a92a0c5:957149f6136b4063', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='875d8417ed15d6e7a148965b3a92a0c5:957149f6136b4063', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0a1d3b43-5360-4693-8f9f-1364dedfc7e4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0a1d3b43-5360-4693-8f9f-1364dedfc7e4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0a1d3b43-5360-4693-8f9f-1364dedfc7e4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8d3165b8-5083-47fe-b5ba-d5b9d06b9c5c
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8d3165b8-5083-47fe-b5ba-d5b9d06b9c5c
2024-08-01 15:19:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8d3165b8-5083-47fe-b5ba-d5b9d06b9c5c
2024-08-01 15:19:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:19:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:19:19 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:19:19 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:19:25 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To plot a pie chart for the top 10 most common patient encounters, we need to count the occurrences of each encounter type in the 'encounters' table and then select the top 10. We will use the 'COUNT()' function in SQL to achieve this.",   "sql": "SELECT CODE, COUNT(*) as frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10",   "display_type": "response_pie_chart" }
2024-08-01 15:19:25 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) as frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10
2024-08-01 15:19:25 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) as frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:19:25 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE, COUNT(*) as frequency FROM encounters GROUP BY CODE ORDER BY frequency DESC LIMIT 10]
2024-08-01 15:19:51 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:19:51 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='plot pie chart for top 10 most common patient encounters with description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:19:51 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3101bd660>
2024-08-01 15:19:51 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:19:51 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ec513f13-2817-4172-85ab-3f8528cfc4f6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ec513f13-2817-4172-85ab-3f8528cfc4f6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ec513f13-2817-4172-85ab-3f8528cfc4f6, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: faff694b-d306-474d-8070-2867641d01eb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: faff694b-d306-474d-8070-2867641d01eb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: faff694b-d306-474d-8070-2867641d01eb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot pie chart for top 10 most common patient encounters with description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot pie chart for top 10 most common patient encounters with description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='f37a7091b476ab1d62deb680fb8e285f:187635e4f679e6a3', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='f37a7091b476ab1d62deb680fb8e285f:187635e4f679e6a3', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4d098807-09ab-460b-8109-ccd0f3c98f76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4d098807-09ab-460b-8109-ccd0f3c98f76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4d098807-09ab-460b-8109-ccd0f3c98f76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f697b311-d4ed-49c9-8703-690463fff428
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f697b311-d4ed-49c9-8703-690463fff428
2024-08-01 15:19:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id f697b311-d4ed-49c9-8703-690463fff428
2024-08-01 15:19:53 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:19:53 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:20:00 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:20:00 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:20:08 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To plot a pie chart of the top 10 most common patient encounters, we need to count the occurrences of each unique encounter description in the 'encounters' table and then select the top 10. This will require two steps: first grouping by description and counting the occurrences, then ordering by count and selecting the top 10.",   "sql": "SELECT DESCRIPTION FROM ( SELECT T2.DESCRIPTION , COUNT(T1.Id) as frequency FROM claims_transactions AS T1 INNER JOIN encounters AS T2 ON T1.CLAIMID = T2.Id GROUP BY T2.DESCRIPTION ) AS subquery ORDER BY frequency DESC LIMIT 10",   "display_type": "response_pie_chart" }
2024-08-01 15:20:08 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT DESCRIPTION FROM ( SELECT T2.DESCRIPTION , COUNT(T1.Id) as frequency FROM claims_transactions AS T1 INNER JOIN encounters AS T2 ON T1.CLAIMID = T2.Id GROUP BY T2.DESCRIPTION ) AS subquery ORDER BY frequency DESC LIMIT 10
2024-08-01 15:20:08 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT DESCRIPTION FROM ( SELECT T2.DESCRIPTION , COUNT(T1.Id) as frequency FROM claims_transactions AS T1 INNER JOIN encounters AS T2 ON T1.CLAIMID = T2.Id GROUP BY T2.DESCRIPTION ) AS subquery ORDER BY frequency DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:20:08 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT DESCRIPTION FROM ( SELECT T2.DESCRIPTION , COUNT(T1.Id) as frequency FROM claims_transactions AS T1 INNER JOIN encounters AS T2 ON T1.CLAIMID = T2.Id GROUP BY T2.DESCRIPTION ) AS subquery ORDER BY frequency DESC LIMIT 10]
2024-08-01 15:21:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 15:21:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='c6802014-4fe9-11ef-92d0-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:21:52 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x320d6b220>
2024-08-01 15:21:52 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:21:52 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 91c31802-5783-46b9-ad8c-e9f001365a1a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 91c31802-5783-46b9-ad8c-e9f001365a1a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 91c31802-5783-46b9-ad8c-e9f001365a1a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 310b2843-80f0-437d-be0f-661de82089ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 310b2843-80f0-437d-be0f-661de82089ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 310b2843-80f0-437d-be0f-661de82089ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='8f06e2b5ba88db1100d727ff97b70450:8a7ed0d4f08dfb0f', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='8f06e2b5ba88db1100d727ff97b70450:8a7ed0d4f08dfb0f', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 00572439-4bfb-4ded-8295-6b7cfdcd1bd2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 00572439-4bfb-4ded-8295-6b7cfdcd1bd2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 00572439-4bfb-4ded-8295-6b7cfdcd1bd2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c5a400f5-9950-499e-86a2-39f3094bd358
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c5a400f5-9950-499e-86a2-39f3094bd358
2024-08-01 15:21:53 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c5a400f5-9950-499e-86a2-39f3094bd358
2024-08-01 15:21:53 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:21:53 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:22:04 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:22:04 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:22:10 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {   "thoughts": "To analyze the total healthcare expenses for each patient, we need to consider the costs associated with their claims, medications, and procedures. However, the table structure provided does not include a direct link between patients and medications. We can only use the 'claims_transactions' table to calculate the total expenses based on claims.",   "sql": "SELECT PATIENTID, SUM(UNITAMOUNT * TRANSFEROUTID) AS TotalExpenses FROM claims_transactions GROUP BY PATIENTID LIMIT 50;",   "display_type": "response_table" }
2024-08-01 15:22:10 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PATIENTID, SUM(UNITAMOUNT * TRANSFEROUTID) AS TotalExpenses FROM claims_transactions GROUP BY PATIENTID LIMIT 50;
2024-08-01 15:22:10 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PATIENTID, SUM(UNITAMOUNT * TRANSFEROUTID) AS TotalExpenses FROM claims_transactions GROUP BY PATIENTID LIMIT 50;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 15:22:10 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT PATIENTID, SUM(UNITAMOUNT * TRANSFEROUTID) AS TotalExpenses FROM claims_transactions GROUP BY PATIENTID LIMIT 50;]
2024-08-01 15:25:24 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with WorkerManager@service, healthy_only: True
2024-08-01 15:25:24 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with WorkerManager@service, healthy_only: True
2024-08-01 15:25:24 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: False
2024-08-01 15:25:24 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: False
2024-08-01 15:25:54 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_knowledge,test,ollama_proxyllm
2024-08-01 15:25:54 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='3c674d3c-4fec-11ef-92d0-0a065cd3fd91' user_input='Hi' user_name=None chat_mode='chat_knowledge' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:25:54 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:25:54 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search with scores
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 449fe225-7a7f-41b2-bda5-7877a7fbfea1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 449fe225-7a7f-41b2-bda5-7877a7fbfea1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 449fe225-7a7f-41b2-bda5-7877a7fbfea1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b611e771-060d-4af9-bb63-f82853102f51, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b611e771-060d-4af9-bb63-f82853102f51, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b611e771-060d-4af9-bb63-f82853102f51, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content=' Based on the known information below, provide users with professional and concise answers to their questions.\nconstraints:\n    1.Ensure to include original markdown formatting elements such as images, links, tables, or code blocks without alteration in the response if they are present in the provided information.\n        For example, image format should be ![image.png](xxx), link format [xxx](xxx), table format should be represented with |xxx|xxx|xxx|, and code format with xxx.\n    2.If the information available in the knowledge base is insufficient to answer the question, state clearly: "The content provided in the knowledge base is not enough to answer this question," and avoid making up answers.\n    3.When responding, it is best to summarize the points in the order of 1, 2, 3, And displayed in markdwon format.\n            known information: \n            above immediately if it is unable to ship the complete order by\n     the date specified.\n  3. The Purchase Order number and part number, if applicable, must\n     appear on all packages, packing slips, invoices and\n     communications.\n  4. Acceptance of this Purchase Order, in writing, by e-mail or by\n     performance, constitutes acceptance of all the specifications,\n     drawings and the terms and conditions of any existing contract\nNV at 702-495-5010, to schedule delivery if Supplier\'s carrier is\n     other than FedEx or UPS.\n 14. For CDW Logistics Inbound Routing Guide Policies and Procedures\n     contact information, please refer to:\n     https://www.cdw.com/webcontent/inside/service/freight.asp.\n 15. As CDW Logistics is in the business of reselling products, CDW\n     Logistics will provide Supplier with a resale certificate for the\n-------------------------------------------------------------------------------------------------\n \n \n     Purchase Order without incurring any cancellation fees or charges.\n  9. CDW Logistics is committed to equal opportunity in all aspects of\n     employment for its employees and applicants and to providing a\n     work environment that is free from harassment based upon race,\n     color, religion, national origin, gender, age, disability, sexual\nbetween CDW Logistics and Supplier, or if no existing contract\n     then CDW Logistics\' standard Agreement in effect from time to\n     time, and available upon request.\n  5. This Purchase Order expressly limits acceptance to the terms of\n     this Purchase Order and any terms referenced herein.  Additional\n     terms, charges or proposals included by Supplier in accepting or\n     acknowledging this Purchase Order shall not be binding unless\norientation, veteran status or any other factor protected by law.\n     CDW Logistics requires that its suppliers conduct themselves in\n     accordance with these principles and applicable federal, state or\n     local regulations in all dealings with CDW Logistics and its\n     employees.\n 10. This purchase order incorporates and is subject to the equal\n     opportunity clauses set forth in Executive Order 11246,Section 202\n     and at 41 CFR § 60-1.4(a), as applicable, and the provisions of\n            question:\n            Hi,when answering, use the same language as the "user".\n', round_index=0), ModelMessage(role='human', content='Hi', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='499e6e781201145eefe5e3190239dc06:2ef58d9497a56d7f', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='499e6e781201145eefe5e3190239dc06:2ef58d9497a56d7f', chat_mode='chat_knowledge', chat_param=None, extra={}, request_id=None))
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c12afe6a-3b08-49fe-a7bb-c3c181b73396, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c12afe6a-3b08-49fe-a7bb-c3c181b73396, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c12afe6a-3b08-49fe-a7bb-c3c181b73396, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2852abc3-9939-4922-b8f8-6f9f76e778d1
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2852abc3-9939-4922-b8f8-6f9f76e778d1
2024-08-01 15:25:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2852abc3-9939-4922-b8f8-6f9f76e778d1
2024-08-01 15:25:56 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:25:56 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:26:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:26:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:26:16 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_knowledge,test,ollama_proxyllm
2024-08-01 15:26:16 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='3c674d3c-4fec-11ef-92d0-0a065cd3fd91' user_input='what is the po number' user_name=None chat_mode='chat_knowledge' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 15:26:16 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 15:26:16 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search with scores
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ddb6304b-6bd0-40ae-a898-7369db9e9324, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ddb6304b-6bd0-40ae-a898-7369db9e9324, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ddb6304b-6bd0-40ae-a898-7369db9e9324, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c436f710-c806-47e0-b450-2b50d1152236, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c436f710-c806-47e0-b450-2b50d1152236, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c436f710-c806-47e0-b450-2b50d1152236, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content=' Based on the known information below, provide users with professional and concise answers to their questions.\nconstraints:\n    1.Ensure to include original markdown formatting elements such as images, links, tables, or code blocks without alteration in the response if they are present in the provided information.\n        For example, image format should be ![image.png](xxx), link format [xxx](xxx), table format should be represented with |xxx|xxx|xxx|, and code format with xxx.\n    2.If the information available in the knowledge base is insufficient to answer the question, state clearly: "The content provided in the knowledge base is not enough to answer this question," and avoid making up answers.\n    3.When responding, it is best to summarize the points in the order of 1, 2, 3, And displayed in markdwon format.\n            known information: \n            above immediately if it is unable to ship the complete order by\n     the date specified.\n  3. The Purchase Order number and part number, if applicable, must\n     appear on all packages, packing slips, invoices and\n     communications.\n  4. Acceptance of this Purchase Order, in writing, by e-mail or by\n     performance, constitutes acceptance of all the specifications,\n     drawings and the terms and conditions of any existing contract\ndoes not notify CDW Logistics within this time period, CDW\n     Logistics will have the right to deduct the purchase price of the\n     product from the amount owed to Supplier.\n  8. CDW Logistics reserves the right to cancel all or part of this\nNV at 702-495-5010, to schedule delivery if Supplier\'s carrier is\n     other than FedEx or UPS.\n 14. For CDW Logistics Inbound Routing Guide Policies and Procedures\n     contact information, please refer to:\n     https://www.cdw.com/webcontent/inside/service/freight.asp.\n 15. As CDW Logistics is in the business of reselling products, CDW\n     Logistics will provide Supplier with a resale certificate for the\norientation, veteran status or any other factor protected by law.\n     CDW Logistics requires that its suppliers conduct themselves in\n     accordance with these principles and applicable federal, state or\n     local regulations in all dealings with CDW Logistics and its\n     employees.\n 10. This purchase order incorporates and is subject to the equal\n     opportunity clauses set forth in Executive Order 11246,Section 202\n     and at 41 CFR § 60-1.4(a), as applicable, and the provisions of\n-------------------------------------------------------------------------------------------------\n \n \n Supplier Please Note\n --------------------------\n To the extent any of the terms below conflict with an existing\n contract between CDW Logistics, Inc. ("CDW Logistics") and Supplier,\n the terms of the contract will govern.\n  1. All products must be shipped in accordance with routing\n     instructions above.\n  2. Supplier must notify the CDW Logistics\' Purchasing Agent listed\n            question:\n            what is the po number,when answering, use the same language as the "user".\n', round_index=0), ModelMessage(role='human', content='what is the po number', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='ee5f84badc855a261db13ec1b7b2dcf7:f2ef45c9b4506c22', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='ee5f84badc855a261db13ec1b7b2dcf7:f2ef45c9b4506c22', chat_mode='chat_knowledge', chat_param=None, extra={}, request_id=None))
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4dd47c94-ea17-4a1f-9f51-75697b622f09, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4dd47c94-ea17-4a1f-9f51-75697b622f09, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4dd47c94-ea17-4a1f-9f51-75697b622f09, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8b08e44-d40b-4c16-9e27-6d372f4a72a4
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8b08e44-d40b-4c16-9e27-6d372f4a72a4
2024-08-01 15:26:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e8b08e44-d40b-4c16-9e27-6d372f4a72a4
2024-08-01 15:26:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:26:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 15:26:24 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 15:26:24 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:01:57 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 16:01:57 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='2ec6ebce-4ff1-11ef-92d0-0a065cd3fd91' user_input='Create a dashboard to sell this healthcare data to pharma company' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 16:01:57 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x39586a020>
2024-08-01 16:01:58 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 16:01:58 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f1a8fffa-e10b-415f-8441-62ca267f3ac3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f1a8fffa-e10b-415f-8441-62ca267f3ac3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f1a8fffa-e10b-415f-8441-62ca267f3ac3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e523d912-fa56-4eb5-8278-b73516a9f52d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e523d912-fa56-4eb5-8278-b73516a9f52d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e523d912-fa56-4eb5-8278-b73516a9f52d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nCreate a dashboard to sell this healthcare data to pharma company\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='Create a dashboard to sell this healthcare data to pharma company', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='161aef03951509f4a57bd742f0673d40:b01d4c5cd2bc2c86', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='161aef03951509f4a57bd742f0673d40:b01d4c5cd2bc2c86', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c21cd9e7-2baf-47a3-90c1-08710bc2ab8a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c21cd9e7-2baf-47a3-90c1-08710bc2ab8a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c21cd9e7-2baf-47a3-90c1-08710bc2ab8a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fbde1d0>
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bbaf9b41-099a-4c2a-975e-f4182238de09
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bbaf9b41-099a-4c2a-975e-f4182238de09
2024-08-01 16:01:59 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bbaf9b41-099a-4c2a-975e-f4182238de09
2024-08-01 16:01:59 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:01:59 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:02:18 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:02:18 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:02:48 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
Here is the analysis result:

[
    {
        "thoughts": "The goal of this analysis is to create a dashboard that showcases the health trends and patterns in the patient population, which can be valuable for pharmaceutical companies.",
        "showcase": "BarChart",
        "sql": "SELECT\n    p.RACE AS Race,\n    COUNT(DISTINCT p.ID) AS Unique_Patients,\n    COUNT(o.`value`) AS Number_of_Observations\nFROM patients p\nLEFT JOIN observations o ON p.id = o.patient\nGROUP BY p.race;",
        "title": "Patient Demographics and Health Trends"
    },
    {
        "thoughts": "The dashboard will show the top 5 medications prescribed to patients with certain conditions, which can help pharma companies identify potential new markets.",
        "showcase": "Table",
        "sql": "SELECT\n    m.DESCRIPTION AS Medication,\n    COUNT(DISTINCT c.patient) AS Number_of_Patients,\n    COUNT(c.code) AS Number_of_Conditions\nFROM medications m\nLEFT JOIN conditions c ON m.id = c.medicine_id\nGROUP BY m.description ORDER BY Number_of_Patients DESC LIMIT 5;",
        "title": "Top Prescribed Medications by Condition"
    },
    {
        "thoughts": "The dashboard will also show the top 5 procedures performed on patients, which can help pharma companies identify potential new markets.",
        "showcase": "BarChart",
        "sql": "SELECT\n    p.DESCRIPTION AS Procedure,\n    COUNT(DISTINCT c.patient) AS Number_of_Patients,\n    SUM(p.base_cost) AS Total_Cost\nFROM procedures p\nLEFT JOIN conditions c ON p.id = c.procedure_id\nGROUP BY p.description ORDER BY Total_Cost DESC LIMIT 5;",
        "title": "Top Procedures by Cost"
    },
    {
        "thoughts": "The dashboard will also show the top 5 payers for healthcare claims, which can help pharma companies identify potential new markets.",
        "showcase": "PieChart",
        "sql": "SELECT\n    p.name AS Payer,\n    COUNT(c.claim_id) AS Number_of_Claims\nFROM payer_transitions p\nLEFT JOIN claims c ON p.patient = c.patientid\nGROUP BY p.name ORDER BY Number_of_Claims DESC LIMIT 5;",
        "title": "Top Payers for Healthcare Claims"
    }
]
2024-08-01 16:02:48 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
Here is the analysis result:

[
    {
        "thoughts": "The goal of this analysis is to create a dashboard that showcases the health trends and patterns in the patient population, which can be valuable for pharmaceutical companies.",
        "showcase": "BarChart",
        "sql": "SELECT\n    p.RACE AS Race,\n    COUNT(DISTINCT p.ID) AS Unique_Patients,\n    COUNT(o.`value`) AS Number_of_Observations\nFROM patients p\nLEFT JOIN observations o ON p.id = o.patient\nGROUP BY p.race;",
        "title": "Patient Demographics and Health Trends"
    },
    {
        "thoughts": "The dashboard will show the top 5 medications prescribed to patients with certain conditions, which can help pharma companies identify potential new markets.",
        "showcase": "Table",
        "sql": "SELECT\n    m.DESCRIPTION AS Medication,\n    COUNT(DISTINCT c.patient) AS Number_of_Patients,\n    COUNT(c.code) AS Number_of_Conditions\nFROM medications m\nLEFT JOIN conditions c ON m.id = c.medicine_id\nGROUP BY m.description ORDER BY Number_of_Patients DESC LIMIT 5;",
        "title": "Top Prescribed Medications by Condition"
    },
    {
        "thoughts": "The dashboard will also show the top 5 procedures performed on patients, which can help pharma companies identify potential new markets.",
        "showcase": "BarChart",
        "sql": "SELECT\n    p.DESCRIPTION AS Procedure,\n    COUNT(DISTINCT c.patient) AS Number_of_Patients,\n    SUM(p.base_cost) AS Total_Cost\nFROM procedures p\nLEFT JOIN conditions c ON p.id = c.procedure_id\nGROUP BY p.description ORDER BY Total_Cost DESC LIMIT 5;",
        "title": "Top Procedures by Cost"
    },
    {
        "thoughts": "The dashboard will also show the top 5 payers for healthcare claims, which can help pharma companies identify potential new markets.",
        "showcase": "PieChart",
        "sql": "SELECT\n    p.name AS Payer,\n    COUNT(c.claim_id) AS Number_of_Claims\nFROM payer_transitions p\nLEFT JOIN claims c ON p.patient = c.patientid\nGROUP BY p.name ORDER BY Number_of_Claims DESC LIMIT 5;",
        "title": "Top Payers for Healthcare Claims"
    }
]
2024-08-01 16:02:48 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT     p.RACE AS Race,     COUNT(DISTINCT p.ID) AS Unique_Patients,     COUNT(o.`value`) AS Number_of_Observations FROM patients p LEFT JOIN observations o ON p.id = o.patient GROUP BY p.race;]
2024-08-01 16:02:48 | INFO | dbgpt.app.scene.chat_dashboard.data_loader | get_chart_values_by_conn:SELECT     p.RACE AS Race,     COUNT(DISTINCT p.ID) AS Unique_Patients,     COUNT(o.`value`) AS Number_of_Observations FROM patients p LEFT JOIN observations o ON p.id = o.patient GROUP BY p.race;
2024-08-01 16:02:48 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT     m.DESCRIPTION AS Medication,     COUNT(DISTINCT c.patient) AS Number_of_Patients,     COUNT(c.code) AS Number_of_Conditions FROM medications m LEFT JOIN conditions c ON m.id = c.medicine_id GROUP BY m.description ORDER BY Number_of_Patients DESC LIMIT 5;]
2024-08-01 16:02:48 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT     p.DESCRIPTION AS Procedure,     COUNT(DISTINCT c.patient) AS Number_of_Patients,     SUM(p.base_cost) AS Total_Cost FROM procedures p LEFT JOIN conditions c ON p.id = c.procedure_id GROUP BY p.description ORDER BY Total_Cost DESC LIMIT 5;]
2024-08-01 16:02:48 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT     p.name AS Payer,     COUNT(c.claim_id) AS Number_of_Claims FROM payer_transitions p LEFT JOIN claims c ON p.patient = c.patientid GROUP BY p.name ORDER BY Number_of_Claims DESC LIMIT 5;]
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x3958a2830>
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x3958a2830>
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 16:04:12 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 16:04:13 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 16:04:13 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 16:04:13 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 16:04:13 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 16:05:14 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127b48460>
2024-08-01 16:05:14 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127b48460>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x168645960>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x168645960>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1686ec250>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1686ec250>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1277c5e40>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1277c5e40>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1686f7640>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1686f7640>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x169038ee0>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x169038ee0>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x14f5f5fc0>
2024-08-01 16:05:15 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x14f5f5fc0>
2024-08-01 16:05:15 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 16:05:15 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 16:05:15 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 16:05:16 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 16:05:16 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1686f66e0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1686f66e0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31fcdd930>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31fcdd930>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31fcdc880>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31fcdc880>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31fcde140>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31fcde140>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31fcde290>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31fcde290>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31fcde2f0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31fcde2f0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31fd609a0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31fd609a0>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31fd60820>
2024-08-01 16:05:18 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31fd60820>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31fd60b20>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31fd60b20>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31fe7ded0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31fe7ded0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31fe7d7e0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31fe7d7e0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31fe3eaa0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31fe3eaa0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x30abe28c0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x30abe28c0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31fe3eb30>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31fe3eb30>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x30abe2ad0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x30abe2ad0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x30abe2a10>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x30abe2a10>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x30afd9ed0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x30afd9ed0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x30afd9e10>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x30afd9e10>
2024-08-01 16:05:19 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 16:05:19 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

34d5a391887a (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 16:05:19 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 34d5a391887a, latest revision: 34d5a391887a
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 16:05:19 | INFO | alembic.runtime.migration | Running upgrade 34d5a391887a -> e1c9e1f89199, New migration
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x30c201ae0>
2024-08-01 16:05:19 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x30c201ae0>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 16:05:19 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x30c3309a0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 16:05:19 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x30c3309a0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 16:05:19 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 16:05:19 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 16:05:19 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9be4be6c-e296-4436-a488-70131644adf0)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9be4be6c-e296-4436-a488-70131644adf0)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311999f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311999f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311999f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c48214da-6d4b-458a-a485-25fcea712954)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c48214da-6d4b-458a-a485-25fcea712954)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=20b80965-7b4d-4b0a-bf4d-41ee9ca621b7)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=20b80965-7b4d-4b0a-bf4d-41ee9ca621b7)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31199b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f236e389-a9ff-4cf8-829d-98101744b1be)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f236e389-a9ff-4cf8-829d-98101744b1be)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31199bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31199bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31199bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=790f8146-6813-4e52-9b92-c3c61cbd38a6)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=790f8146-6813-4e52-9b92-c3c61cbd38a6)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=371ee521-e2dc-494a-b02f-3f50e9b604af)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=371ee521-e2dc-494a-b02f-3f50e9b604af)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a25120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a25120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a25120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=72900617-7fcf-41b4-9983-5c6a60938a9d)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=72900617-7fcf-41b4-9983-5c6a60938a9d)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a260e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a260e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a260e0>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=0f932179-ed5e-4af4-bac1-a065b2590e22)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=0f932179-ed5e-4af4-bac1-a065b2590e22)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a27490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a27490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a27490>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=efe256f5-f55a-441e-b544-e00defa5ac9a)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=efe256f5-f55a-441e-b544-e00defa5ac9a)
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a263b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a263b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x311a263b0>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31fcde080> to prefix path /api/v1/awel/trigger
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x311cec940>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x311cec940>
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 16:05:19 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 16:05:19 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: codegeex4:9b-all-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 16:05:21 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:21 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:23 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:23 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:23 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:23 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 16:05:23 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x313e4f520>
2024-08-01 16:05:24 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 16:05:24 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 16:05:24 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 16:05:24 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 16:05:24 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 16:05:59 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 16:05:59 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='d4fd25f8-4ff1-11ef-9904-0a065cd3fd91' user_input='Create a dashboard to sell this healthcare data to pharma company' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 16:06:00 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3199f6500>
2024-08-01 16:06:00 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 16:06:00 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6ca15010-aaad-4baf-8f21-8bbcecd33a9c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6ca15010-aaad-4baf-8f21-8bbcecd33a9c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6ca15010-aaad-4baf-8f21-8bbcecd33a9c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f0e5c1cd-024a-4dd0-8661-11c5a4644807, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f0e5c1cd-024a-4dd0-8661-11c5a4644807, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f0e5c1cd-024a-4dd0-8661-11c5a4644807, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nCreate a dashboard to sell this healthcare data to pharma company\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='Create a dashboard to sell this healthcare data to pharma company', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='bcaa67ec8b6c55e4baffeab822d7a03f:efca62f04518f7b2', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='bcaa67ec8b6c55e4baffeab822d7a03f:efca62f04518f7b2', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 98641996-e51b-4144-867a-1650e1032896, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 98641996-e51b-4144-867a-1650e1032896, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 98641996-e51b-4144-867a-1650e1032896, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32068041-f626-4e05-9e02-bce2111fdfde
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32068041-f626-4e05-9e02-bce2111fdfde
2024-08-01 16:06:00 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32068041-f626-4e05-9e02-bce2111fdfde
2024-08-01 16:06:00 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:06:00 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:06:21 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:06:21 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:06:50 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "To understand the distribution of different medical conditions among patients, we should analyze the number of unique patient records associated with each condition code in the 'conditions' table. This will help us identify which conditions are most prevalent and thus potentially interesting for pharmaceutical companies.",
        "showcase": "PieChart",
        "sql": "SELECT CODE AS ConditionCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM conditions GROUP BY CODE ORDER BY PatientCount DESC;",
        "title": "Distribution of Medical Conditions Among Patients"
    },
    {
        "thoughts": "To understand the utilization of different specialties by healthcare providers, we should analyze the number of encounters with each specialty code. This will help us identify which specialties are most active and thus potentially interesting for pharmaceutical companies.",
        "showcase": "BarChart",
        "sql": "SELECT SPECIALITY AS Specialty, COUNT(*) AS EncounterCount FROM providers GROUP BY SPECIALITY ORDER BY EncounterCount DESC;",
        "title": "Utilization of Different Specialties by Providers"
    },
    {
        "thoughts": "To understand the cost associated with different procedures, we should analyze the average base cost for each procedure code. This will help us identify which procedures are most expensive and thus potentially interesting for pharmaceutical companies.",
        "showcase": "LineChart",
        "sql": "SELECT CODE AS ProcedureCode, AVG(BASE_COST) AS AverageBaseCost FROM procedures GROUP BY CODE ORDER BY AverageBaseCost DESC;",
        "title": "Average Base Cost of Different Procedures"
    },
    {
        "thoughts": "To understand the utilization of different devices by patients, we should analyze the number of unique patient records associated with each device code. This will help us identify which devices are most frequently used and thus potentially interesting for pharmaceutical companies.",
        "showcase": "PieChart",
        "sql": "SELECT CODE AS DeviceCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM devices GROUP BY CODE ORDER BY PatientCount DESC;",
        "title": "Distribution of Devices Used by Patients"
    }
]
2024-08-01 16:06:50 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "To understand the distribution of different medical conditions among patients, we should analyze the number of unique patient records associated with each condition code in the 'conditions' table. This will help us identify which conditions are most prevalent and thus potentially interesting for pharmaceutical companies.",
        "showcase": "PieChart",
        "sql": "SELECT CODE AS ConditionCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM conditions GROUP BY CODE ORDER BY PatientCount DESC;",
        "title": "Distribution of Medical Conditions Among Patients"
    },
    {
        "thoughts": "To understand the utilization of different specialties by healthcare providers, we should analyze the number of encounters with each specialty code. This will help us identify which specialties are most active and thus potentially interesting for pharmaceutical companies.",
        "showcase": "BarChart",
        "sql": "SELECT SPECIALITY AS Specialty, COUNT(*) AS EncounterCount FROM providers GROUP BY SPECIALITY ORDER BY EncounterCount DESC;",
        "title": "Utilization of Different Specialties by Providers"
    },
    {
        "thoughts": "To understand the cost associated with different procedures, we should analyze the average base cost for each procedure code. This will help us identify which procedures are most expensive and thus potentially interesting for pharmaceutical companies.",
        "showcase": "LineChart",
        "sql": "SELECT CODE AS ProcedureCode, AVG(BASE_COST) AS AverageBaseCost FROM procedures GROUP BY CODE ORDER BY AverageBaseCost DESC;",
        "title": "Average Base Cost of Different Procedures"
    },
    {
        "thoughts": "To understand the utilization of different devices by patients, we should analyze the number of unique patient records associated with each device code. This will help us identify which devices are most frequently used and thus potentially interesting for pharmaceutical companies.",
        "showcase": "PieChart",
        "sql": "SELECT CODE AS DeviceCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM devices GROUP BY CODE ORDER BY PatientCount DESC;",
        "title": "Distribution of Devices Used by Patients"
    }
]
2024-08-01 16:06:50 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE AS ConditionCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM conditions GROUP BY CODE ORDER BY PatientCount DESC;]
2024-08-01 16:06:50 | INFO | dbgpt.app.scene.chat_dashboard.data_loader | get_chart_values_by_conn:SELECT CODE AS ConditionCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM conditions GROUP BY CODE ORDER BY PatientCount DESC;
2024-08-01 16:06:50 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT SPECIALITY AS Specialty, COUNT(*) AS EncounterCount FROM providers GROUP BY SPECIALITY ORDER BY EncounterCount DESC;]
2024-08-01 16:06:50 | INFO | dbgpt.app.scene.chat_dashboard.data_loader | get_chart_values_by_conn:SELECT SPECIALITY AS Specialty, COUNT(*) AS EncounterCount FROM providers GROUP BY SPECIALITY ORDER BY EncounterCount DESC;
2024-08-01 16:06:50 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE AS ProcedureCode, AVG(BASE_COST) AS AverageBaseCost FROM procedures GROUP BY CODE ORDER BY AverageBaseCost DESC;]
2024-08-01 16:06:50 | INFO | dbgpt.app.scene.chat_dashboard.data_loader | get_chart_values_by_conn:SELECT CODE AS ProcedureCode, AVG(BASE_COST) AS AverageBaseCost FROM procedures GROUP BY CODE ORDER BY AverageBaseCost DESC;
2024-08-01 16:06:50 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CODE AS DeviceCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM devices GROUP BY CODE ORDER BY PatientCount DESC;]
2024-08-01 16:06:50 | INFO | dbgpt.app.scene.chat_dashboard.data_loader | get_chart_values_by_conn:SELECT CODE AS DeviceCode, COUNT(DISTINCT PATIENT) AS PatientCount FROM devices GROUP BY CODE ORDER BY PatientCount DESC;
2024-08-01 16:08:07 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 16:08:07 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='d4fd25f8-4ff1-11ef-9904-0a065cd3fd91' user_input='can you unique patients count to this' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 16:08:07 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x319aa2aa0>
2024-08-01 16:08:07 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 16:08:07 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 74f8cfeb-4de3-4574-aeff-d8235ad02132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 74f8cfeb-4de3-4574-aeff-d8235ad02132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 74f8cfeb-4de3-4574-aeff-d8235ad02132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2bb36f3-5e4b-4918-95e4-e9eb04aa0fe4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2bb36f3-5e4b-4918-95e4-e9eb04aa0fe4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b2bb36f3-5e4b-4918-95e4-e9eb04aa0fe4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\ncan you unique patients count to this\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='can you unique patients count to this', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='e0302432f07fe8f1ed84c854182ffb16:7b5eb7b8339fb72a', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='e0302432f07fe8f1ed84c854182ffb16:7b5eb7b8339fb72a', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 054639df-c1b5-4be8-aa83-780998624c03, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 054639df-c1b5-4be8-aa83-780998624c03, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 054639df-c1b5-4be8-aa83-780998624c03, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 4d36f979-8925-4199-b3f1-30b96aeae5a4
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 4d36f979-8925-4199-b3f1-30b96aeae5a4
2024-08-01 16:08:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 4d36f979-8925-4199-b3f1-30b96aeae5a4
2024-08-01 16:08:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:08:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:08:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:08:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:08:26 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "The analysis aims to determine the total number of unique patients in the dataset.",
        "showcase": "A simple IndicatorValue chart is suitable for displaying a single numerical value like this count.",
        "sql": "SELECT COUNT(DISTINCT PATIENT) AS Unique_Patients FROM patients;",
        "title": "Unique Patient Count"
    }
]
2024-08-01 16:08:26 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "The analysis aims to determine the total number of unique patients in the dataset.",
        "showcase": "A simple IndicatorValue chart is suitable for displaying a single numerical value like this count.",
        "sql": "SELECT COUNT(DISTINCT PATIENT) AS Unique_Patients FROM patients;",
        "title": "Unique Patient Count"
    }
]
2024-08-01 16:08:26 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT COUNT(DISTINCT PATIENT) AS Unique_Patients FROM patients;]
2024-08-01 16:09:15 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 16:09:15 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='d4fd25f8-4ff1-11ef-9904-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\n' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 16:09:15 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x325edfdc0>
2024-08-01 16:09:15 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 16:09:15 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e4a30707-d870-4446-bb2f-37fdfd599126, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e4a30707-d870-4446-bb2f-37fdfd599126, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e4a30707-d870-4446-bb2f-37fdfd599126, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 04dc712e-ae04-4ad5-a413-d789d5a8d6f4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 04dc712e-ae04-4ad5-a413-d789d5a8d6f4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 04dc712e-ae04-4ad5-a413-d789d5a8d6f4, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nAnalyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\n\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\n', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='9687930e202af4b73a36bf6650aaf6ee:9ce89180dd69111d', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='9687930e202af4b73a36bf6650aaf6ee:9ce89180dd69111d', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d563c2e2-600a-44e2-9a2d-e729ddeeb0d9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d563c2e2-600a-44e2-9a2d-e729ddeeb0d9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d563c2e2-600a-44e2-9a2d-e729ddeeb0d9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31fcde170>
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcafd398-ff0b-45a5-a6be-2661b4b37da9
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcafd398-ff0b-45a5-a6be-2661b4b37da9
2024-08-01 16:09:18 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id bcafd398-ff0b-45a5-a6be-2661b4b37da9
2024-08-01 16:09:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:09:18 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 16:09:27 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:09:27 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 16:10:13 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "Calculate the total healthcare expenses for each patient by summing up the amounts from claims, medications, and procedures tables. Group the results by patient.",
        "showcase": "Table",
        "sql": "SELECT patients.Id AS PatientId, (SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST)) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Id;",
        "title": "Total Healthcare Expenses by Patient"
    },
    {
        "thoughts": "To see the trend of healthcare expenses over time for each patient, group the data by month and patient.",
        "showcase": "LineChart",
        "sql": "SELECT strftime('%Y-%m', claims.DATE) AS Month, patients.Id AS PatientId, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS MonthlyHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY Month, PatientId;",
        "title": "Monthly Healthcare Expenses Trend"
    },
    {
        "thoughts": "Compare the total healthcare expenses for each patient based on gender.",
        "showcase": "BarChart",
        "sql": "SELECT patients.Gender, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Gender;",
        "title": "Total Healthcare Expenses by Gender"
    },
    {
        "thoughts": "Analyze the total healthcare expenses for each patient based on their age group.",
        "showcase": "PieChart",
        "sql": "SELECT CASE WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 0 AND 18 THEN 'Under 18' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 19 AND 30 THEN '19-30' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 31 AND 40 THEN '31-40' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 41 AND 50 THEN '41-50' ELSE 'Over 50' END AS AgeGroup, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY AgeGroup;",
        "title": "Total Healthcare Expenses by Age Group"
    }
]
2024-08-01 16:10:13 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
[
    {
        "thoughts": "Calculate the total healthcare expenses for each patient by summing up the amounts from claims, medications, and procedures tables. Group the results by patient.",
        "showcase": "Table",
        "sql": "SELECT patients.Id AS PatientId, (SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST)) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Id;",
        "title": "Total Healthcare Expenses by Patient"
    },
    {
        "thoughts": "To see the trend of healthcare expenses over time for each patient, group the data by month and patient.",
        "showcase": "LineChart",
        "sql": "SELECT strftime('%Y-%m', claims.DATE) AS Month, patients.Id AS PatientId, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS MonthlyHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY Month, PatientId;",
        "title": "Monthly Healthcare Expenses Trend"
    },
    {
        "thoughts": "Compare the total healthcare expenses for each patient based on gender.",
        "showcase": "BarChart",
        "sql": "SELECT patients.Gender, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Gender;",
        "title": "Total Healthcare Expenses by Gender"
    },
    {
        "thoughts": "Analyze the total healthcare expenses for each patient based on their age group.",
        "showcase": "PieChart",
        "sql": "SELECT CASE WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 0 AND 18 THEN 'Under 18' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 19 AND 30 THEN '19-30' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 31 AND 40 THEN '31-40' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 41 AND 50 THEN '41-50' ELSE 'Over 50' END AS AgeGroup, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY AgeGroup;",
        "title": "Total Healthcare Expenses by Age Group"
    }
]
2024-08-01 16:10:13 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT patients.Id AS PatientId, (SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST)) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Id;]
2024-08-01 16:10:13 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT strftime('%Y-%m', claims.DATE) AS Month, patients.Id AS PatientId, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS MonthlyHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY Month, PatientId;]
2024-08-01 16:10:13 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT patients.Gender, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY patients.Gender;]
2024-08-01 16:10:13 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT CASE WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 0 AND 18 THEN 'Under 18' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 19 AND 30 THEN '19-30' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 31 AND 40 THEN '31-40' WHEN (strftime('%Y') - strftime('%Y', patients.BIRTHDATE)) BETWEEN 41 AND 50 THEN '41-50' ELSE 'Over 50' END AS AgeGroup, SUM(claims.AMOUNT_COVERED) + SUM(medications.TOTALCOST) + SUM(procedures.BASE_COST) AS TotalHealthcareExpenses FROM patients JOIN claims ON patients.Id = claims.PATIENTID JOIN medications ON patients.Id = medications.PATIENT JOIN procedures ON patients.Id = procedures.PATIENT GROUP BY AgeGroup;]
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x325e33d00>
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x325e33d00>
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 17:25:03 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 17:25:04 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 17:25:04 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 17:25:04 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 17:25:04 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 17:25:15 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x134a48460>
2024-08-01 17:25:15 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x134a48460>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x168341720>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x168341720>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1683eab00>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1683eab00>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1347c5e40>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1347c5e40>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1685380d0>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1685380d0>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x168538fd0>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x168538fd0>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x15f2ee0b0>
2024-08-01 17:25:16 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x15f2ee0b0>
2024-08-01 17:25:16 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 17:25:16 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 17:25:16 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 17:25:17 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 17:25:17 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1683f67d0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1683f67d0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x35404da20>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x35404da20>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x35404c970>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x35404c970>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x35404e230>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x35404e230>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x35404e380>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x35404e380>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x35404e3e0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x35404e3e0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31cc0ca90>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31cc0ca90>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31cc0c910>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31cc0c910>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31cc0cc10>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31cc0cc10>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x3540ea170>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x3540ea170>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x3540ea050>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x3540ea050>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x35f1ceb90>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x35f1ceb90>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31cfda9b0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31cfda9b0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x35f1cec20>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x35f1cec20>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31cfdabc0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31cfdabc0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31cfdab00>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31cfdab00>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31d2d1fc0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31d2d1fc0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31d2d1f00>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31d2d1f00>
2024-08-01 17:25:20 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 17:25:20 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

e1c9e1f89199 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 17:25:20 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: e1c9e1f89199, latest revision: e1c9e1f89199
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 17:25:20 | INFO | alembic.runtime.migration | Running upgrade e1c9e1f89199 -> 328b754cf1d6, New migration
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x31e429cf0>
2024-08-01 17:25:20 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x31e429cf0>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 17:25:20 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e55ae90>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 17:25:20 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e55ae90>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 17:25:20 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 17:25:20 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 17:25:20 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=47478b07-f00d-4b0a-a6e7-ba4cb1696fcf)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=47478b07-f00d-4b0a-a6e7-ba4cb1696fcf)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea5f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea5f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea5f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fe5f9269-5d61-4657-af32-c4b17610d761)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fe5f9269-5d61-4657-af32-c4b17610d761)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea6c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea6c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea6c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=260abec4-e082-4b02-84d5-56de37c1793d)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=260abec4-e082-4b02-84d5-56de37c1793d)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea75b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea75b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323ea75b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=299bcc41-c334-4cce-b444-e3793cf946b2)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=299bcc41-c334-4cce-b444-e3793cf946b2)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323ea7d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323ea7d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323ea7d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=38975f78-b79e-4a0f-93d2-13321c8b7dca)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=38975f78-b79e-4a0f-93d2-13321c8b7dca)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3240248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3240248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3240248b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1a395075-2757-4183-8688-7e23f81fd057)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1a395075-2757-4183-8688-7e23f81fd057)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9c88a5bd-b7ac-479e-a2b5-59f9bd10383d)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9c88a5bd-b7ac-479e-a2b5-59f9bd10383d)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324025900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3e6e9f4b-aa4e-4b25-8ed0-f21ad0d49939)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3e6e9f4b-aa4e-4b25-8ed0-f21ad0d49939)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=11bdbc16-fcb0-4592-bf6f-539c3865ccfc)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=11bdbc16-fcb0-4592-bf6f-539c3865ccfc)
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324026830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x35404e170> to prefix path /api/v1/awel/trigger
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324193f40>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324193f40>
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: duckdb-nsql:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 17:25:20 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: duckdb-nsql:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 17:25:20 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: duckdb-nsql:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 17:25:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:22 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:24 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:24 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:25 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:25 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 17:25:25 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32624b400>
2024-08-01 17:25:25 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:25:25 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 17:25:25 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 17:25:25 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 17:25:25 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 17:28:23 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:28:23 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:28:23 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32be0dea0>
2024-08-01 17:28:23 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:28:23 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97b1b329-d52e-4da9-83a5-d92cdfe2f60c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97b1b329-d52e-4da9-83a5-d92cdfe2f60c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97b1b329-d52e-4da9-83a5-d92cdfe2f60c, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: abb42ba0-524e-4a69-a9fd-3ca6c1fbe392, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: abb42ba0-524e-4a69-a9fd-3ca6c1fbe392, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: abb42ba0-524e-4a69-a9fd-3ca6c1fbe392, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='9e1440bf4beefefde980acaef44b12f3:9644363d09a660a7', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='9e1440bf4beefefde980acaef44b12f3:9644363d09a660a7', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa36eb10-9c74-4b41-b1de-bdfa4f35adcd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa36eb10-9c74-4b41-b1de-bdfa4f35adcd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: aa36eb10-9c74-4b41-b1de-bdfa4f35adcd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d1cf719a-b334-4bd3-ad67-6ba1a056bcc1
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d1cf719a-b334-4bd3-ad67-6ba1a056bcc1
2024-08-01 17:28:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id d1cf719a-b334-4bd3-ad67-6ba1a056bcc1
2024-08-01 17:28:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:28:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:28:36 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:28:36 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:28:38 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50
2024-08-01 17:28:38 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50
2024-08-01 17:28:38 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50
2024-08-01 17:28:38 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50
2024-08-01 17:28:38 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:28:38 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT PROVIDERID, COUNT(*) FROM claims GROUP BY PROVIDERID ORDER BY COUNT(*) DESC LIMIT 50]
2024-08-01 17:29:22 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 17:29:22 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 17:29:22 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 17:29:55 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:29:55 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='plot the top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:29:55 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3241d5780>
2024-08-01 17:29:55 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:29:55 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8d4e2996-0326-4a5f-ba6d-7ac3f041520f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8d4e2996-0326-4a5f-ba6d-7ac3f041520f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8d4e2996-0326-4a5f-ba6d-7ac3f041520f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f7df72c5-717e-4d69-a9c7-7b087df1f78b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f7df72c5-717e-4d69-a9c7-7b087df1f78b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f7df72c5-717e-4d69-a9c7-7b087df1f78b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    plot the top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='plot the top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='673489fb7828814fce7dd642979930e1:18407f84febeb8d1', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='673489fb7828814fce7dd642979930e1:18407f84febeb8d1', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 407309f1-ef21-4556-8ec7-5328c4a92ee9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 407309f1-ef21-4556-8ec7-5328c4a92ee9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 407309f1-ef21-4556-8ec7-5328c4a92ee9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9ecf8288-acf1-4431-9b6f-617e8ae069f0
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9ecf8288-acf1-4431-9b6f-617e8ae069f0
2024-08-01 17:29:56 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9ecf8288-acf1-4431-9b6f-617e8ae069f0
2024-08-01 17:29:56 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:29:56 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:30:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:30:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:30:09 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10
2024-08-01 17:30:09 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10
2024-08-01 17:30:09 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10
2024-08-01 17:30:09 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10
2024-08-01 17:30:09 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:30:09 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(DISTINCT encounters.Id) AS total_encounters, 
       encounters.REASONCODE, 
       encounters.REASONDESCRIPTION
FROM encounters
GROUP BY encounters.REASONCODE, encounters.REASONDESCRIPTION
ORDER BY total_encounters DESC
LIMIT 10]
2024-08-01 17:30:53 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:30:53 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:30:53 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x33aeb4b80>
2024-08-01 17:30:53 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:30:53 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 439eba2a-9263-4cfd-9eaa-90d32618da3d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 439eba2a-9263-4cfd-9eaa-90d32618da3d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 439eba2a-9263-4cfd-9eaa-90d32618da3d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 12e852ed-e1dd-43fe-876f-f65ba7e5c07f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 12e852ed-e1dd-43fe-876f-f65ba7e5c07f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 12e852ed-e1dd-43fe-876f-f65ba7e5c07f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='0a43fc5a79df49a334694d1cb20eb85b:6bc1a4cae7fd8f46', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='0a43fc5a79df49a334694d1cb20eb85b:6bc1a4cae7fd8f46', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 54a6a141-eaa0-4be8-a981-43b14eb747e1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 54a6a141-eaa0-4be8-a981-43b14eb747e1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 54a6a141-eaa0-4be8-a981-43b14eb747e1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a440013a-0a9c-4a1c-9b2e-68574b3adc31
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a440013a-0a9c-4a1c-9b2e-68574b3adc31
2024-08-01 17:30:54 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a440013a-0a9c-4a1c-9b2e-68574b3adc31
2024-08-01 17:30:54 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:30:54 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:30:59 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:30:59 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:31:01 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:31:01 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:31:01 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:31:01 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:31:01 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:31:01 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT REASONCODE, REASONDESCRIPTION FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10]
2024-08-01 17:32:21 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:32:21 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='How many unique patients are present in the database?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:32:21 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32e3d1de0>
2024-08-01 17:32:21 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:32:21 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd007cb1-bdde-4df2-ac26-3c7bae5bce8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd007cb1-bdde-4df2-ac26-3c7bae5bce8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd007cb1-bdde-4df2-ac26-3c7bae5bce8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4aadd22d-12d5-4366-ac26-997ed6f8dd2d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4aadd22d-12d5-4366-ac26-997ed6f8dd2d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4aadd22d-12d5-4366-ac26-997ed6f8dd2d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How many unique patients are present in the database?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How many unique patients are present in the database?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='3a8e85e35a352eb5ae0278c58073c5e5:1d49381900b302f2', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='3a8e85e35a352eb5ae0278c58073c5e5:1d49381900b302f2', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 86f9d8bf-4fca-4d0f-a73f-2bf9af2946c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 86f9d8bf-4fca-4d0f-a73f-2bf9af2946c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 86f9d8bf-4fca-4d0f-a73f-2bf9af2946c1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 08d63778-161e-4c47-97a9-c13fbc1b6f3e
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 08d63778-161e-4c47-97a9-c13fbc1b6f3e
2024-08-01 17:32:22 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 08d63778-161e-4c47-97a9-c13fbc1b6f3e
2024-08-01 17:32:22 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:32:22 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:32:29 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:32:29 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:32:30 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT PATIENT) FROM encounters;
2024-08-01 17:32:30 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT PATIENT) FROM encounters;
2024-08-01 17:32:30 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(DISTINCT PATIENT) FROM encounters;
2024-08-01 17:32:30 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(DISTINCT PATIENT) FROM encounters;
2024-08-01 17:32:30 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) FROM encounters;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:32:30 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(DISTINCT PATIENT) FROM encounters;]
2024-08-01 17:33:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:33:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nllm\n' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:33:52 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32e3f2260>
2024-08-01 17:33:52 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:33:52 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c27694f5-423b-41e7-8f78-19705b277acc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c27694f5-423b-41e7-8f78-19705b277acc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c27694f5-423b-41e7-8f78-19705b277acc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b9fcea72-2577-4f48-baae-4dde9032cf8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b9fcea72-2577-4f48-baae-4dde9032cf8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b9fcea72-2577-4f48-baae-4dde9032cf8d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nllm\n\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nllm\n', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='589a2e0b015a7ce2c59b22f5de536da6:3cd9928369cc00d5', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='589a2e0b015a7ce2c59b22f5de536da6:3cd9928369cc00d5', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7ffa3919-6e1e-4932-814b-93abadf0eca8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7ffa3919-6e1e-4932-814b-93abadf0eca8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7ffa3919-6e1e-4932-814b-93abadf0eca8, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 41d2fc4c-66b8-47eb-ba2d-669f7f4ae0df
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 41d2fc4c-66b8-47eb-ba2d-669f7f4ae0df
2024-08-01 17:33:52 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 41d2fc4c-66b8-47eb-ba2d-669f7f4ae0df
2024-08-01 17:33:52 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:33:52 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:34:02 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:34:02 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:34:04 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID
2024-08-01 17:34:04 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID
2024-08-01 17:34:04 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID
2024-08-01 17:34:04 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID
2024-08-01 17:34:04 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:34:04 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT PATIENTID, SUM(HEALTHCARE_EXPENSES) FROM claims JOIN patients ON claims.PATIENTID = patients.Id GROUP BY PATIENTID]
2024-08-01 17:36:44 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:36:44 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='What are the most common types of observations recorded?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:36:44 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x33e767a00>
2024-08-01 17:36:44 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:36:44 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4e642be2-122d-4673-b15d-1a21c46f8018, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4e642be2-122d-4673-b15d-1a21c46f8018, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4e642be2-122d-4673-b15d-1a21c46f8018, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c4f5d9df-79e1-427a-a5a1-2aa1fe03b305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c4f5d9df-79e1-427a-a5a1-2aa1fe03b305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c4f5d9df-79e1-427a-a5a1-2aa1fe03b305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'allergies(START, STOP, PATIENT, ENCOUNTER, CODE, SYSTEM, DESCRIPTION, TYPE, CATEGORY, REACTION1, DESCRIPTION1, SEVERITY1, REACTION2, DESCRIPTION2, SEVERITY2)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the most common types of observations recorded?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the most common types of observations recorded?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='fb0c6c1ad8ad70b5f80db1bf2398f592:bbb6c5c821178535', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='fb0c6c1ad8ad70b5f80db1bf2398f592:bbb6c5c821178535', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e5245358-c0dc-43b6-bc06-f4ae46ffe54b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e5245358-c0dc-43b6-bc06-f4ae46ffe54b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e5245358-c0dc-43b6-bc06-f4ae46ffe54b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b99ab71f-5758-43b4-994e-2bb393ce0e34
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b99ab71f-5758-43b4-994e-2bb393ce0e34
2024-08-01 17:36:45 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b99ab71f-5758-43b4-994e-2bb393ce0e34
2024-08-01 17:36:45 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:36:45 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:36:54 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:36:54 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:36:55 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 17:36:55 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 17:36:55 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 17:36:55 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 17:36:55 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:36:55 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT CODE, COUNT(*) FROM observations GROUP BY CODE ORDER BY COUNT(*) DESC LIMIT 1]
2024-08-01 17:44:33 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 17:44:33 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='9a73f23c-4fff-11ef-bda2-0a065cd3fd91' user_input='Create a dashboard to sell this healthcare data to pharma company' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:44:33 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x33aeb61a0>
2024-08-01 17:44:33 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:44:33 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 995aeae8-3a07-4585-8081-1bdfece273ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 995aeae8-3a07-4585-8081-1bdfece273ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 995aeae8-3a07-4585-8081-1bdfece273ea, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dff8e62-cd84-4176-ac95-3d6d21de795b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dff8e62-cd84-4176-ac95-3d6d21de795b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0dff8e62-cd84-4176-ac95-3d6d21de795b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nCreate a dashboard to sell this healthcare data to pharma company\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='Create a dashboard to sell this healthcare data to pharma company', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='6e1dc94e0c7f25d362683878b2651a1e:ad148dde8b9e9b60', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='6e1dc94e0c7f25d362683878b2651a1e:ad148dde8b9e9b60', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a8dabf92-21b0-4c80-9777-9cd85991aa2b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a8dabf92-21b0-4c80-9777-9cd85991aa2b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a8dabf92-21b0-4c80-9777-9cd85991aa2b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0231878-6be6-45a4-9e5f-e4c0cac9c88d
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0231878-6be6-45a4-9e5f-e4c0cac9c88d
2024-08-01 17:44:34 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e0231878-6be6-45a4-9e5f-e4c0cac9c88d
2024-08-01 17:44:34 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:44:34 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:44:49 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:44:49 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:44:50 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM patients WHERE PAYMENTS > 0
2024-08-01 17:44:50 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM patients WHERE PAYMENTS > 0
2024-08-01 17:44:50 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: JSONDecodeError, Expecting value: line 1 column 2 (char 1)
2024-08-01 17:44:50 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 17:45:32 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 17:45:32 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='9a73f23c-4fff-11ef-bda2-0a065cd3fd91' user_input='analyze the trends in this dataset' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:45:32 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32e3d3400>
2024-08-01 17:45:32 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:45:32 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4babe112-8353-4cf2-b998-f0df6c18dfe2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4babe112-8353-4cf2-b998-f0df6c18dfe2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4babe112-8353-4cf2-b998-f0df6c18dfe2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7be9cc1c-d68c-41fa-a581-3f26d9cbc0f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7be9cc1c-d68c-41fa-a581-3f26d9cbc0f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 7be9cc1c-d68c-41fa-a581-3f26d9cbc0f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nanalyze the trends in this dataset\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='analyze the trends in this dataset', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='095308e9e8c650ebc522b2d37b548928:537d55b64114825d', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='095308e9e8c650ebc522b2d37b548928:537d55b64114825d', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5d4771bc-fe59-49b1-841c-8e015445aabb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5d4771bc-fe59-49b1-841c-8e015445aabb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5d4771bc-fe59-49b1-841c-8e015445aabb, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32f4677c-ee8e-4fb5-82d0-f1023739a731
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32f4677c-ee8e-4fb5-82d0-f1023739a731
2024-08-01 17:45:33 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 32f4677c-ee8e-4fb5-82d0-f1023739a731
2024-08-01 17:45:33 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:45:33 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:45:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:45:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:45:43 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT 
    date_trunc('month', enc.date) AS month,
    COUNT(DISTINCT pat.id) AS patient_count
FROM 
    encounters AS enc
JOIN 
    patients AS pat ON enc.patient = pat.id
GROUP BY 
    month
ORDER BY 
    month;
2024-08-01 17:45:43 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT 
    date_trunc('month', enc.date) AS month,
    COUNT(DISTINCT pat.id) AS patient_count
FROM 
    encounters AS enc
JOIN 
    patients AS pat ON enc.patient = pat.id
GROUP BY 
    month
ORDER BY 
    month;
2024-08-01 17:45:43 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: JSONDecodeError, Expecting value: line 1 column 2 (char 1)
2024-08-01 17:45:43 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 17:46:11 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_dashboard,test,ollama_proxyllm
2024-08-01 17:46:11 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='9a73f23c-4fff-11ef-bda2-0a065cd3fd91' user_input='What are the top 10 most common reasons for patient encounters?' user_name=None chat_mode='chat_dashboard' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:46:11 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x326507be0>
2024-08-01 17:46:11 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:46:11 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 975522a6-ad70-4004-aaa7-654d4e6b1428, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 975522a6-ad70-4004-aaa7-654d4e6b1428, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 975522a6-ad70-4004-aaa7-654d4e6b1428, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5101d51e-299c-44e7-86c0-24a4d1c75233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5101d51e-299c-44e7-86c0-24a4d1c75233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5101d51e-299c-44e7-86c0-24a4d1c75233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a data analysis expert, please provide a professional data analysis solution\nAccording to the following table structure definition:\n[\'supplies(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,QUANTITY);\', \'imaging_studies(Id,DATE,PATIENT,ENCOUNTER,SERIES_UID,BODYSITE_CODE,BODYSITE_DESCRIPTION,MODALITY_CODE,MODALITY_DESCRIPTION,INSTANCE_UID,SOP_CODE,SOP_DESCRIPTION,PROCEDURE_CODE);\', \'payers(Id,NAME,ADDRESS,CITY,STATE_HEADQUARTERED,ZIP,PHONE,AMOUNT_COVERED,AMOUNT_UNCOVERED,REVENUE,COVERED_ENCOUNTERS,UNCOVERED_ENCOUNTERS,COVERED_MEDICATIONS,UNCOVERED_MEDICATIONS,COVERED_PROCEDURES,UNCOVERED_PROCEDURES,COVERED_IMMUNIZATIONS,UNCOVERED_IMMUNIZATIONS,UNIQUE_CUSTOMERS,QOLS_AVG,MEMBER_MONTHS);\', \'payer_transitions(PATIENT,MEMBERID,START_YEAR,END_YEAR,PAYER,SECONDARY_PAYER,OWNERSHIP,OWNERNAME);\', \'organizations(Id,NAME,ADDRESS,CITY,STATE,ZIP,LAT,LON,PHONE,REVENUE,UTILIZATION);\', \'allergies(START,STOP,PATIENT,ENCOUNTER,CODE,SYSTEM,DESCRIPTION,TYPE,CATEGORY,REACTION1,DESCRIPTION1,SEVERITY1,REACTION2,DESCRIPTION2,SEVERITY2);\', \'procedures(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,REASONCODE,REASONDESCRIPTION);\', \'claims(Id,PATIENTID,PROVIDERID,PRIMARYPATIENTINSURANCEID,SECONDARYPATIENTINSURANCEID,DEPARTMENTID,PATIENTDEPARTMENTID,DIAGNOSIS1,DIAGNOSIS2,DIAGNOSIS3,DIAGNOSIS4,DIAGNOSIS5,DIAGNOSIS6,DIAGNOSIS7,DIAGNOSIS8,REFERRINGPROVIDERID,APPOINTMENTID,CURRENTILLNESSDATE,SERVICEDATE,SUPERVISINGPROVIDERID,STATUS1,STATUS2,STATUSP,OUTSTANDING1,OUTSTANDING2,OUTSTANDINGP,LASTBILLEDDATE1,LASTBILLEDDATE2,LASTBILLEDDATEP,HEALTHCARECLAIMTYPEID1,HEALTHCARECLAIMTYPEID2);\', \'providers(Id,ORGANIZATION,NAME,GENDER,SPECIALITY,ADDRESS,CITY,STATE,ZIP,LAT,LON,UTILIZATION);\', \'medications(START,STOP,PATIENT,PAYER,ENCOUNTER,CODE,DESCRIPTION,BASE_COST,PAYER_COVERAGE,DISPENSES,TOTALCOST,REASONCODE,REASONDESCRIPTION);\', \'patients(Id,BIRTHDATE,DEATHDATE,SSN,DRIVERS,PASSPORT,PREFIX,FIRST,LAST,SUFFIX,MAIDEN,MARITAL,RACE,ETHNICITY,GENDER,BIRTHPLACE,ADDRESS,CITY,STATE,COUNTY,ZIP,LAT,LON,HEALTHCARE_EXPENSES,HEALTHCARE_COVERAGE);\', \'observations(DATE,PATIENT,ENCOUNTER,CATEGORY,CODE,DESCRIPTION,VALUE,UNITS,TYPE);\', \'devices(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,UDI);\', \'encounters(Id,START,STOP,PATIENT,ORGANIZATION,PROVIDER,PAYER,ENCOUNTERCLASS,CODE,DESCRIPTION,BASE_ENCOUNTER_COST,TOTAL_CLAIM_COST,PAYER_COVERAGE,REASONCODE,REASONDESCRIPTION);\', \'careplans(Id,START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION,REASONCODE,REASONDESCRIPTION);\', \'immunizations(DATE,PATIENT,ENCOUNTER,CODE,DESCRIPTION,BASE_COST);\', \'conditions(START,STOP,PATIENT,ENCOUNTER,CODE,DESCRIPTION);\', \'claims_transactions(ID,CLAIMID,CHARGEID,PATIENTID,TYPE,AMOUNT,METHOD,FROMDATE,TODATE,PLACEOFSERVICE,PROCEDURECODE,MODIFIER1,MODIFIER2,DIAGNOSISREF1,DIAGNOSISREF2,DIAGNOSISREF3,DIAGNOSISREF4,UNITS,DEPARTMENTID,NOTES,UNITAMOUNT,TRANSFEROUTID,TRANSFERTYPE,PAYMENTS,ADJUSTMENTS,TRANSFERS,OUTSTANDING,APPOINTMENTID,LINENOTE,PATIENTINSURANCEID,FEESCHEDULEID,PROVIDERID,SUPERVISINGPROVIDERID);\']\nProvide professional data analysis to support users\' goals:\nWhat are the top 10 most common reasons for patient encounters?\n\nProvide at least 4 and at most 8 dimensions of analysis according to user goals.\nThe output data of the analysis cannot exceed 4 columns, and do not use columns such as pay_status in the SQL where condition for data filtering.\nAccording to the characteristics of the analyzed data, choose the most suitable one from the charts provided below for data display, chart type:\n[\'Table\', \'LineChart\', \'BarChart\', \'PieChart\', \'IndicatorValue\']\n\nPay attention to the length of the output content of the analysis result, do not exceed 4000 tokens\n\nGive the correct sqlite analysis SQL\n1.Do not use unprovided values such as \'paid\'\n2.All queried values must have aliases, such as select count(*) as count from table\n3.If the table structure definition uses the keywords of sqlite as field names, you need to use escape characters, such as select `count` from table\n4.Carefully check the correctness of the SQL, the SQL must be correct, display method and summary of brief analysis thinking, and respond in the following json format:\n"[\\n    {\\n        \\"thoughts\\": \\"Current thinking and value of data analysis\\",\\n        \\"showcase\\": \\"What type of charts to show\\",\\n        \\"sql\\": \\"data analysis SQL\\",\\n        \\"title\\": \\"Data Analysis Title\\"\\n    }\\n]"\nThe important thing is: Please make sure to only return the json string, do not add any other content (for direct processing by the program), and the json can be parsed by Python json.loads\n5. Please use the same language as the "user"\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most common reasons for patient encounters?', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='94b2fed4bd744bc4d82b32ffdd40f234:ec72867c74354204', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='94b2fed4bd744bc4d82b32ffdd40f234:ec72867c74354204', chat_mode='chat_dashboard', chat_param=None, extra={}, request_id=None))
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4a090a41-9f2e-45ea-a2fa-cf2fd329e338, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4a090a41-9f2e-45ea-a2fa-cf2fd329e338, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4a090a41-9f2e-45ea-a2fa-cf2fd329e338, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 171554c7-1f02-425d-8086-c10c856a1152
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 171554c7-1f02-425d-8086-c10c856a1152
2024-08-01 17:46:12 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 171554c7-1f02-425d-8086-c10c856a1152
2024-08-01 17:46:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:46:12 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:46:17 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:46:17 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:46:18 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:46:18 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY REASONCODE ORDER BY COUNT(*) DESC LIMIT 10
2024-08-01 17:46:18 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: JSONDecodeError, Expecting value: line 1 column 2 (char 1)
2024-08-01 17:46:18 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 17:47:33 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 17:47:33 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 17:47:33 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 17:55:56 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:55:56 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='What is the distribution of patients by gender?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:55:56 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x33e767fa0>
2024-08-01 17:55:56 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:55:56 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2656466-fd9f-49dd-a7e4-7c492842326b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2656466-fd9f-49dd-a7e4-7c492842326b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2656466-fd9f-49dd-a7e4-7c492842326b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5157ffe2-73bb-41e0-9152-aa17e43d503b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5157ffe2-73bb-41e0-9152-aa17e43d503b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5157ffe2-73bb-41e0-9152-aa17e43d503b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'providers(Id, ORGANIZATION, NAME, GENDER, SPECIALITY, ADDRESS, CITY, STATE, ZIP, LAT, LON, UTILIZATION)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What is the distribution of patients by gender?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What is the distribution of patients by gender?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='ebce83f144c2668321d9d0f9a3823f35:8d1b51ab0e5821bc', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='ebce83f144c2668321d9d0f9a3823f35:8d1b51ab0e5821bc', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 41b9428a-f5bc-40ad-8e90-b34b20e9e730, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 41b9428a-f5bc-40ad-8e90-b34b20e9e730, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 41b9428a-f5bc-40ad-8e90-b34b20e9e730, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2a223ca9-9322-419a-8509-2e4d2a60c8d0
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2a223ca9-9322-419a-8509-2e4d2a60c8d0
2024-08-01 17:55:58 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 2a223ca9-9322-419a-8509-2e4d2a60c8d0
2024-08-01 17:55:58 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:55:58 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:56:13 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:56:13 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:56:14 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER
2024-08-01 17:56:14 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER
2024-08-01 17:56:14 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER
2024-08-01 17:56:14 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER
2024-08-01 17:56:14 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:56:14 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(DISTINCT Id) FROM patients GROUP BY GENDER]
2024-08-01 17:57:22 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:57:22 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='How many encounters are recorded per patient on average?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:57:22 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32e3941c0>
2024-08-01 17:57:22 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:57:22 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2c61c98a-011b-47b9-a38f-b48f816e3c0a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2c61c98a-011b-47b9-a38f-b48f816e3c0a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 2c61c98a-011b-47b9-a38f-b48f816e3c0a, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c8c9a505-5da8-4989-9f39-1ffb6ac02305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c8c9a505-5da8-4989-9f39-1ffb6ac02305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c8c9a505-5da8-4989-9f39-1ffb6ac02305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How many encounters are recorded per patient on average?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How many encounters are recorded per patient on average?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='0f43a8208313d8d349cf2e5005740aa5:56de7bb4840d1691', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='0f43a8208313d8d349cf2e5005740aa5:56de7bb4840d1691', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0657ea08-1268-402f-9699-f23053e2bd56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0657ea08-1268-402f-9699-f23053e2bd56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 0657ea08-1268-402f-9699-f23053e2bd56, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ed60991b-ec36-4f13-ba34-6d0840ef49f5
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ed60991b-ec36-4f13-ba34-6d0840ef49f5
2024-08-01 17:57:24 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id ed60991b-ec36-4f13-ba34-6d0840ef49f5
2024-08-01 17:57:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:57:24 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:57:33 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:57:33 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:57:34 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY PATIENT
2024-08-01 17:57:34 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY PATIENT
2024-08-01 17:57:34 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(*) FROM encounters GROUP BY PATIENT
2024-08-01 17:57:34 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(*) FROM encounters GROUP BY PATIENT
2024-08-01 17:57:34 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(*) FROM encounters GROUP BY PATIENT, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:57:34 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(*) FROM encounters GROUP BY PATIENT]
2024-08-01 17:58:29 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:58:29 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='What are the top 10 most prescribed medications?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:58:29 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32e30dfc0>
2024-08-01 17:58:29 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:58:29 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 583321d9-b696-49bd-b1b0-cf64ca18adac, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 583321d9-b696-49bd-b1b0-cf64ca18adac, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 583321d9-b696-49bd-b1b0-cf64ca18adac, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 75ae2631-8343-4c58-897d-44edf97e8305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 75ae2631-8343-4c58-897d-44edf97e8305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 75ae2631-8343-4c58-897d-44edf97e8305, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most prescribed medications?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most prescribed medications?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='74ac8ce4b8b39f1e0d62d83f685b90c7:d44e8509decb59c1', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='74ac8ce4b8b39f1e0d62d83f685b90c7:d44e8509decb59c1', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dbba1229-1027-435b-8986-6af6cc244fdf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dbba1229-1027-435b-8986-6af6cc244fdf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dbba1229-1027-435b-8986-6af6cc244fdf, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c72da1b4-0259-4ea6-98c9-bbbc2fb2d754
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c72da1b4-0259-4ea6-98c9-bbbc2fb2d754
2024-08-01 17:58:30 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id c72da1b4-0259-4ea6-98c9-bbbc2fb2d754
2024-08-01 17:58:30 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:58:30 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:58:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:58:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:58:40 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10
2024-08-01 17:58:40 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10
2024-08-01 17:58:40 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10
2024-08-01 17:58:40 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10
2024-08-01 17:58:40 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:58:40 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10]
2024-08-01 17:58:40 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such column: NAME
[SQL:  SELECT NAME FROM medications ORDER BY COUNT DESC LIMIT 10]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-01 17:58:40 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 17:58:40 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 17:58:46 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:58:46 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='What are the top 10 most prescribed medications?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:58:46 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x346774d60>
2024-08-01 17:58:46 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:58:46 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3cf751a9-91c4-41ba-aff2-db794dfd7ef3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3cf751a9-91c4-41ba-aff2-db794dfd7ef3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3cf751a9-91c4-41ba-aff2-db794dfd7ef3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1b8b92dd-68f3-4ca0-9f7b-5e7f4be3b0ca, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1b8b92dd-68f3-4ca0-9f7b-5e7f4be3b0ca, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1b8b92dd-68f3-4ca0-9f7b-5e7f4be3b0ca, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most prescribed medications?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most prescribed medications?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='b1f4e2cb1b296907387aac0c58864d5b:664567b489d1fd40', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='b1f4e2cb1b296907387aac0c58864d5b:664567b489d1fd40', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 372e0796-833c-4ede-b4b8-8cc92e21815f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 372e0796-833c-4ede-b4b8-8cc92e21815f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 372e0796-833c-4ede-b4b8-8cc92e21815f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 888bba5c-d8fe-42a7-8f0b-f83f9ff37a31
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 888bba5c-d8fe-42a7-8f0b-f83f9ff37a31
2024-08-01 17:58:46 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 888bba5c-d8fe-42a7-8f0b-f83f9ff37a31
2024-08-01 17:58:46 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:58:46 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:58:50 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:58:50 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 17:58:52 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31'
2024-08-01 17:58:52 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31'
2024-08-01 17:58:52 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31'
2024-08-01 17:58:52 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31'
2024-08-01 17:58:52 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31', ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 17:58:52 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31']
2024-08-01 17:58:52 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such column: patient_id
[SQL:  SELECT COUNT(DISTINCT patient_id) FROM medications WHERE date BETWEEN '2022-01-01' AND '2022-12-31']
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-01 17:58:52 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 17:58:52 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 17:59:50 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 17:59:50 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='Is there a correlation between patient age and the number of medications prescribed?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 17:59:50 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x3467731c0>
2024-08-01 17:59:50 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 17:59:50 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9a9d16ad-c866-43ad-baa2-9d92f42bc6af, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9a9d16ad-c866-43ad-baa2-9d92f42bc6af, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 9a9d16ad-c866-43ad-baa2-9d92f42bc6af, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b70b3145-782f-4aef-8c7c-bd79bb56c7ff, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b70b3145-782f-4aef-8c7c-bd79bb56c7ff, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b70b3145-782f-4aef-8c7c-bd79bb56c7ff, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Is there a correlation between patient age and the number of medications prescribed?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Is there a correlation between patient age and the number of medications prescribed?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='80c4744807f0cab3b0b66fc20ae91998:6eab7886cd5024e8', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='80c4744807f0cab3b0b66fc20ae91998:6eab7886cd5024e8', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: db861261-e6a7-41bb-8b6b-b6d635b87415, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: db861261-e6a7-41bb-8b6b-b6d635b87415, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: db861261-e6a7-41bb-8b6b-b6d635b87415, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fdbb88db-6289-49cc-9931-98e884472d4d
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fdbb88db-6289-49cc-9931-98e884472d4d
2024-08-01 17:59:51 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id fdbb88db-6289-49cc-9931-98e884472d4d
2024-08-01 17:59:51 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 17:59:51 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:00:00 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:00:00 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:00:03 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE
2024-08-01 18:00:03 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE
2024-08-01 18:00:03 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE
2024-08-01 18:00:03 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE
2024-08-01 18:00:03 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 18:00:03 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE]
2024-08-01 18:00:03 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such table: PATIENT
[SQL:  SELECT PATIENT.AGE, COUNT(*) FROM PATIENT INNER JOIN prescriptions ON PATIENT.PATIENT_ID = prescriptions.PATIENT_ID GROUP BY PATIENT.AGE]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-01 18:00:03 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 18:00:03 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 18:00:31 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 18:00:31 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='How has the number of encounters changed over time?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 18:00:31 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x346dd5480>
2024-08-01 18:00:31 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 18:00:31 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 28fe079d-d5bf-4025-b47d-ce8780e4f010, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 28fe079d-d5bf-4025-b47d-ce8780e4f010, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 28fe079d-d5bf-4025-b47d-ce8780e4f010, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef22953f-3c3c-4882-85fd-56485f447473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef22953f-3c3c-4882-85fd-56485f447473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ef22953f-3c3c-4882-85fd-56485f447473, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How has the number of encounters changed over time?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How has the number of encounters changed over time?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='7ecc71a384706decc680ac541d631e2c:736946ed0c487283', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='7ecc71a384706decc680ac541d631e2c:736946ed0c487283', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 70f079de-ee72-4323-b9b4-accf0a6735f2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 70f079de-ee72-4323-b9b4-accf0a6735f2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 70f079de-ee72-4323-b9b4-accf0a6735f2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8cd750a8-15e4-4d88-bb99-bf514fa40398
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8cd750a8-15e4-4d88-bb99-bf514fa40398
2024-08-01 18:00:32 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 8cd750a8-15e4-4d88-bb99-bf514fa40398
2024-08-01 18:00:32 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:00:32 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:00:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:00:39 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:00:40 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY DATE
2024-08-01 18:00:40 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT COUNT(*) FROM encounters GROUP BY DATE
2024-08-01 18:00:40 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT COUNT(*) FROM encounters GROUP BY DATE
2024-08-01 18:00:40 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT COUNT(*) FROM encounters GROUP BY DATE
2024-08-01 18:00:40 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(*) FROM encounters GROUP BY DATE, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 18:00:40 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT COUNT(*) FROM encounters GROUP BY DATE]
2024-08-01 18:00:40 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such column: DATE
[SQL:  SELECT COUNT(*) FROM encounters GROUP BY DATE]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-01 18:00:40 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 18:00:40 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 18:01:06 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 18:01:06 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='58410adc-4ffd-11ef-bda2-0a065cd3fd91' user_input='What is the most common allergy among patients?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 18:01:06 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x346d3e680>
2024-08-01 18:01:06 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 18:01:06 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a5842269-3d93-49fe-b40d-24bdbf13ec2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a5842269-3d93-49fe-b40d-24bdbf13ec2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: a5842269-3d93-49fe-b40d-24bdbf13ec2f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b95b4d51-a38a-4afd-aa33-e3cee1381bd9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b95b4d51-a38a-4afd-aa33-e3cee1381bd9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b95b4d51-a38a-4afd-aa33-e3cee1381bd9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What is the most common allergy among patients?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What is the most common allergy among patients?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='c2ffe9989626dbfd33f9651b07c8ddce:09d0f8404909644b', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='c2ffe9989626dbfd33f9651b07c8ddce:09d0f8404909644b', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3a3040ed-a5f5-4baf-9479-735c00fc23f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3a3040ed-a5f5-4baf-9479-735c00fc23f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3a3040ed-a5f5-4baf-9479-735c00fc23f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x35404e260>
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 044d21a6-908a-4e7b-8935-415faf63baea
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 044d21a6-908a-4e7b-8935-415faf63baea
2024-08-01 18:01:07 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 044d21a6-908a-4e7b-8935-415faf63baea
2024-08-01 18:01:07 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:01:07 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:01:15 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:01:15 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:01:16 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 18:01:16 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 18:01:16 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 18:01:16 | INFO | dbgpt.datasource.rdbms.base | SQL: SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1
2024-08-01 18:01:16 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-01 18:01:16 | INFO | dbgpt.datasource.rdbms.base | Query[ SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1]
2024-08-01 18:01:16 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such column: ALLERGY
[SQL:  SELECT ALLERGY = 'Common Allergy' FROM patients GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-01 18:01:16 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 18:01:16 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x32e3ebb50>
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x32e3ebb50>
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:10:08 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:10:08 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:10:08 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:10:08 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x346d2c820>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 18:10:08 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x346d2c820>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 18:10:10 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:10:10 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:10:11 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:10:11 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:11:24 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127648490>
2024-08-01 18:11:24 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x127648490>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16cb416c0>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16cb416c0>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16cbeeaa0>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16cbeeaa0>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1273c9e70>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1273c9e70>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16cf38070>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16cf38070>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16cf38f70>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16cf38f70>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x137ae6050>
2024-08-01 18:11:25 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x137ae6050>
2024-08-01 18:11:25 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 18:11:25 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 18:11:25 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 18:11:27 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 18:11:27 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16cbf6770>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16cbf6770>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31c44d9f0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x31c44d9f0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31c44c940>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x31c44c940>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31c44e200>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x31c44e200>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31c44e350>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x31c44e350>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31c44e3b0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x31c44e3b0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31c4d8a60>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x31c4d8a60>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31c4d88e0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x31c4d88e0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31c4d8be0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x31c4d8be0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31c5be140>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x31c5be140>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31c5be020>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x31c5be020>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31c5c6b60>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x31c5c6b60>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31c65a980>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x31c65a980>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31c5c6bf0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x31c5c6bf0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31c65ab90>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x31c65ab90>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31c65aad0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x31c65aad0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31d4d5f90>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31d4d5f90>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31d4d5ed0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31d4d5ed0>
2024-08-01 18:11:29 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 18:11:29 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

328b754cf1d6 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 18:11:29 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 328b754cf1d6, latest revision: 328b754cf1d6
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 18:11:29 | INFO | alembic.runtime.migration | Running upgrade 328b754cf1d6 -> 69e556edd3d0, New migration
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x31e701de0>
2024-08-01 18:11:29 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x31e701de0>
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 18:11:29 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e93afe0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 18:11:29 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e93afe0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 18:11:29 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 18:11:29 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 18:11:29 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 18:11:29 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:29 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=424f5f7e-2724-41ae-a8bb-a08464504462)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=424f5f7e-2724-41ae-a8bb-a08464504462)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a66b0bdf-ffcd-4235-9e2a-bdede3a928fa)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a66b0bdf-ffcd-4235-9e2a-bdede3a928fa)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=eb9f8fe8-358b-4955-91ab-0b372abb3c4a)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=eb9f8fe8-358b-4955-91ab-0b372abb3c4a)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32429f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=6a37357c-4769-4a25-9d85-386af28f0d5f)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=6a37357c-4769-4a25-9d85-386af28f0d5f)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x32429fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x32429fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x32429fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1ac1b42c-0a8d-4da8-b2aa-9b1ead7684a6)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1ac1b42c-0a8d-4da8-b2aa-9b1ead7684a6)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3244288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3244288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3244288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c8f31123-f245-4500-b885-32aa2206cce2)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c8f31123-f245-4500-b885-32aa2206cce2)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=56bedb17-b63c-4657-94cb-da1831b7c6b6)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=56bedb17-b63c-4657-94cb-da1831b7c6b6)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324429900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f5ff24b5-6356-416f-86c9-01210275aee0)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f5ff24b5-6356-416f-86c9-01210275aee0)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a8f796ad-6362-4347-9640-48bfe55f9427)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a8f796ad-6362-4347-9640-48bfe55f9427)
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32442a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x31c44e140> to prefix path /api/v1/awel/trigger
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324597f40>
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324597f40>
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 18:11:30 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 18:11:30 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 18:11:32 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:32 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:34 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:34 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:34 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:34 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 18:11:34 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32664f2e0>
2024-08-01 18:11:34 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 18:11:34 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 18:11:34 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 18:11:34 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 18:11:34 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 18:12:32 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 18:12:32 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:32 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:33 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 18:12:33 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:33 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 18:12:38 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:38 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:40 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 18:12:40 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='87f7ce2c-5003-11ef-b9bb-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 18:12:40 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32bfcbdc0>
2024-08-01 18:12:40 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 18:12:40 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7a45c84-1b68-45f2-b42a-6e0f961eb7fa, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7a45c84-1b68-45f2-b42a-6e0f961eb7fa, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b7a45c84-1b68-45f2-b42a-6e0f961eb7fa, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2ae5bd1-865f-4216-980d-d3658e9a7821, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2ae5bd1-865f-4216-980d-d3658e9a7821, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c2ae5bd1-865f-4216-980d-d3658e9a7821, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'organizations(Id, NAME, ADDRESS, CITY, STATE, ZIP, LAT, LON, PHONE, REVENUE, UTILIZATION), and index keys: sqlite_autoindex_organizations_1(`Id`) \', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you tell me about this database\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='371645ca7f8e2062b8b408950262e4b7:90787bb42e2d3774', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='371645ca7f8e2062b8b408950262e4b7:90787bb42e2d3774', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b090601d-d1e1-4bf9-9ac6-896d4bbba2db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b090601d-d1e1-4bf9-9ac6-896d4bbba2db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b090601d-d1e1-4bf9-9ac6-896d4bbba2db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9558c820-61d4-49c8-882e-e98f2fe381c9
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9558c820-61d4-49c8-882e-e98f2fe381c9
2024-08-01 18:12:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 9558c820-61d4-49c8-882e-e98f2fe381c9
2024-08-01 18:12:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:12:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:12:42 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 18:12:42 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:42 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 18:12:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 18:12:52 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='8fe8760e-5003-11ef-b9bb-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 18:12:52 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32bc25960>
2024-08-01 18:12:52 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 18:12:52 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 18:12:56 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:12:56 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7bfe182-2b49-4cb0-b123-481e34cc8de9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7bfe182-2b49-4cb0-b123-481e34cc8de9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: e7bfe182-2b49-4cb0-b123-481e34cc8de9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d56b6487-a165-40e3-a0cc-5f9c8cc863ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d56b6487-a165-40e3-a0cc-5f9c8cc863ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d56b6487-a165-40e3-a0cc-5f9c8cc863ae, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'organizations(Id, NAME, ADDRESS, CITY, STATE, ZIP, LAT, LON, PHONE, REVENUE, UTILIZATION), and index keys: sqlite_autoindex_organizations_1(`Id`) \', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you tell me about this database\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='f582b867a35c8989c255e2f0491b4d34:002711ead88cbc54', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='f582b867a35c8989c255e2f0491b4d34:002711ead88cbc54', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff9650a-42cd-44d7-b521-b307b86cf501, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff9650a-42cd-44d7-b521-b307b86cf501, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4ff9650a-42cd-44d7-b521-b307b86cf501, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x31c44e230>
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 710a72c7-6e3b-4663-9873-f5a474d1db0f
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 710a72c7-6e3b-4663-9873-f5a474d1db0f
2024-08-01 18:12:57 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 710a72c7-6e3b-4663-9873-f5a474d1db0f
2024-08-01 18:12:57 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:12:57 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 18:12:58 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:12:58 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 18:13:29 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
?"
}
'''

# import libraries
import psycopg2
from dotenv import load_dotenv
import os


def main():
    # read the .env file and get the credentials
    load_dotenv()
    dbname = os.getenv('DBNAME')
    user = os.getenv('USER')
    password = <PASSWORD>('PASSWORD')

    # connect to the database
    try:
        connection = psycopg2.connect(dbname=dbname, user=user, password=password)
        print("Database connection successful")

        cursor = connection.cursor()

        # get the list of tables in the database
        sql = """
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema='public';
        """
        cursor.execute(sql)
        tables = [table[0] for table in cursor.fetchall()]
        print("Tables:", tables)

        # get the column names and data types of each table, then store it as a nested dictionary
        columns = {}
        for table in tables:
            sql = f"""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name='{table}'
                ORDER BY ordinal_position;
            """
            cursor.execute(sql)
            columns[table] = {column[0]: column[1] for column in cursor.fetchall()}
        print("Columns:", columns)

        # get the row count of each table, then store it as a dictionary
        row_counts = {}
        for table in tables:
            sql = f"""
                SELECT COUNT(*) 
                FROM {table};
            """
            cursor.execute(sql)
            row_count = int(cursor.fetchone()[0])
            row_counts[table] = row_count
        print("Row counts:", row_counts)

        # close the connection to the database
        connection.close()
    except Exception as e:
        print(e)


if __name__ == '__main__':
    main()
2024-08-01 18:13:29 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
?"
}
'''

# import libraries
import psycopg2
from dotenv import load_dotenv
import os


def main():
    # read the .env file and get the credentials
    load_dotenv()
    dbname = os.getenv('DBNAME')
    user = os.getenv('USER')
    password = <PASSWORD>('PASSWORD')

    # connect to the database
    try:
        connection = psycopg2.connect(dbname=dbname, user=user, password=password)
        print("Database connection successful")

        cursor = connection.cursor()

        # get the list of tables in the database
        sql = """
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema='public';
        """
        cursor.execute(sql)
        tables = [table[0] for table in cursor.fetchall()]
        print("Tables:", tables)

        # get the column names and data types of each table, then store it as a nested dictionary
        columns = {}
        for table in tables:
            sql = f"""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name='{table}'
                ORDER BY ordinal_position;
            """
            cursor.execute(sql)
            columns[table] = {column[0]: column[1] for column in cursor.fetchall()}
        print("Columns:", columns)

        # get the row count of each table, then store it as a dictionary
        row_counts = {}
        for table in tables:
            sql = f"""
                SELECT COUNT(*) 
                FROM {table};
            """
            cursor.execute(sql)
            row_count = int(cursor.fetchone()[0])
            row_counts[table] = row_count
        print("Row counts:", row_counts)

        # close the connection to the database
        connection.close()
    except Exception as e:
        print(e)


if __name__ == '__main__':
    main()
2024-08-01 18:13:29 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: [table[0] for table in cursor.fetchall()]
2024-08-01 18:13:29 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | json load failed:[table[0] for table in cursor.fetchall()]
2024-08-01 18:13:29 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-01 18:13:29 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-01 18:13:29 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x32ccc65f0>
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x32ccc65f0>
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:23:35 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 18:23:35 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:23:35 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:23:35 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 18:23:35 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 21:20:37 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x11aa48490>
2024-08-01 21:20:37 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x11aa48490>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x13a041780>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x13a041780>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x13a0eeb60>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x13a0eeb60>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x10bcc5e70>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x10bcc5e70>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x13a138130>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x13a138130>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x13a139030>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x13a139030>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x12ad0a110>
2024-08-01 21:20:38 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x12ad0a110>
2024-08-01 21:20:38 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 21:20:38 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 21:20:38 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 21:20:39 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 21:20:39 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x13a0f6830>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x13a0f6830>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16e951a50>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16e951a50>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16e9509a0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16e9509a0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16e952260>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16e952260>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16e9523b0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16e9523b0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16e952410>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16e952410>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16e9d81f0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16e9d81f0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16e9d84f0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16e9d84f0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16e9d8070>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16e9d8070>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x16ebee1a0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x16ebee1a0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x16ebee080>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x16ebee080>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x16ebaebc0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x16ebaebc0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16ec4e9e0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16ec4e9e0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x16ebaec50>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x16ebaec50>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16ec4ebf0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16ec4ebf0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16ec4eb30>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16ec4eb30>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x1717e9ff0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x1717e9ff0>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x1717e9f30>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x1717e9f30>
2024-08-01 21:20:42 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:20:42 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

69e556edd3d0 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/69e556edd3d0_new_migration.py)
328b754cf1d6 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:20:42 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 69e556edd3d0, latest revision: 69e556edd3d0
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:20:42 | INFO | alembic.runtime.migration | Running upgrade 69e556edd3d0 -> e7b5af284887, New migration
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x173201f60>
2024-08-01 21:20:42 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x173201f60>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 21:20:42 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x17333b5b0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 21:20:42 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x17333b5b0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 21:20:42 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 21:20:42 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 21:20:42 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c0bcec2b-8065-4356-8906-b82012ea00ce)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=c0bcec2b-8065-4356-8906-b82012ea00ce)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215a9f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215a9f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215a9f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=cc8f3649-e5af-43b9-ab90-1b363332d054)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=cc8f3649-e5af-43b9-ab90-1b363332d054)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215aac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215aac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215aac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d047affe-98b2-4312-8384-d0c21f0c6085)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d047affe-98b2-4312-8384-d0c21f0c6085)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215ab5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215ab5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3215ab5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e0f580d7-261a-4fef-8b8d-240d80416ba3)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e0f580d7-261a-4fef-8b8d-240d80416ba3)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x3215abd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x3215abd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x3215abd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9cd6c049-f798-47c8-af61-aef549ee3afa)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=9cd6c049-f798-47c8-af61-aef549ee3afa)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=80f99a25-5d1a-4fec-af74-c1ead177db98)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=80f99a25-5d1a-4fec-af74-c1ead177db98)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=343178cf-a42e-49b4-96a0-0723f3bfef8d)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=343178cf-a42e-49b4-96a0-0723f3bfef8d)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=42143c46-8c1d-4a29-a120-56d29b190c63)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=42143c46-8c1d-4a29-a120-56d29b190c63)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bbb80dbb-d5ea-4159-9876-29429a44665a)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=bbb80dbb-d5ea-4159-9876-29429a44665a)
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x32162e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16e9521a0> to prefix path /api/v1/awel/trigger
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x321893eb0>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x321893eb0>
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 21:20:42 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 21:20:42 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:15b
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 21:20:44 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:44 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:46 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:46 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:47 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:47 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:20:47 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32394b3a0>
2024-08-01 21:20:47 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 21:20:47 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 21:20:47 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 21:20:47 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 21:20:47 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x329fc8f70>
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x329fc8f70>
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:47:50 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:47:50 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 21:47:50 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 21:47:50 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 21:47:50 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-01 21:49:34 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x136d48460>
2024-08-01 21:49:34 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x136d48460>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1733456f0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1733456f0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1733eead0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1733eead0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1354c5e40>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1354c5e40>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1735380a0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1735380a0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x173538fa0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x173538fa0>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x16c8e6080>
2024-08-01 21:49:35 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x16c8e6080>
2024-08-01 21:49:35 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-01 21:49:35 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-01 21:49:35 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-01 21:49:36 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-01 21:49:36 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1733f67a0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1733f67a0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x17f151a20>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x17f151a20>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x17f150970>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x17f150970>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x17f152230>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x17f152230>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x17f152380>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x17f152380>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x17f1523e0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x17f1523e0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x17f1d81f0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x17f1d81f0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x17f1d84f0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x17f1d84f0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x17f1d8070>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x17f1d8070>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x17f2f6170>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x17f2f6170>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x17f2f6050>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x17f2f6050>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x17f2b2b90>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x17f2b2b90>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x17fb569b0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x17fb569b0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x17f2b2c20>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x17f2b2c20>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x17fb56bc0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x17fb56bc0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x17fb56b00>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x17fb56b00>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x17d4e5fc0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x17d4e5fc0>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x17d4e5f00>
2024-08-01 21:49:38 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x17d4e5f00>
2024-08-01 21:49:39 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:49:39 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

e7b5af284887 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e7b5af284887_new_migration.py)
69e556edd3d0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/69e556edd3d0_new_migration.py)
328b754cf1d6 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:49:39 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: e7b5af284887, latest revision: e7b5af284887
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-01 21:49:39 | INFO | alembic.runtime.migration | Running upgrade e7b5af284887 -> 315243ff05f0, New migration
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-01 21:49:39 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16c8abb20>
2024-08-01 21:49:39 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16c8abb20>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-01 21:49:39 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x310037910>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 21:49:39 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x310037910>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-01 21:49:39 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 21:49:39 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-01 21:49:39 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=ee8d51f1-8609-4f35-8e7d-590e49f89a6b)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=ee8d51f1-8609-4f35-8e7d-590e49f89a6b)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a57beba-1f3e-4879-b180-91b34cfc2df4)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a57beba-1f3e-4879-b180-91b34cfc2df4)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d972baff-a61c-4ff5-be45-75a6f8509868)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=d972baff-a61c-4ff5-be45-75a6f8509868)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31568f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a91d292-9ae6-4873-b7ac-dc0ca01d83da)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a91d292-9ae6-4873-b7ac-dc0ca01d83da)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31568fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31568fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31568fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=55785e46-0aac-477c-951c-f652dae48b05)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=55785e46-0aac-477c-951c-f652dae48b05)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3157148b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3157148b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3157148b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=46252269-7ff8-4097-ab06-df10b62801a3)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=46252269-7ff8-4097-ab06-df10b62801a3)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e9d92ea4-6d34-478c-b4a1-d28e50a69393)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e9d92ea4-6d34-478c-b4a1-d28e50a69393)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315715900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a18a9e54-2072-4c66-88fa-9f08ba645a05)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a18a9e54-2072-4c66-88fa-9f08ba645a05)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716ef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1aeb4aab-c444-49e7-842d-5dd2e4f309ce)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1aeb4aab-c444-49e7-842d-5dd2e4f309ce)
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x315716830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x17f152170> to prefix path /api/v1/awel/trigger
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x315893f40>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x315893f40>
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 21:49:39 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-01 21:49:39 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: sqlcoder:7b-q8_0
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-01 21:49:41 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:41 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:43 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:43 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:43 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:43 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-01 21:49:43 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x31794f040>
2024-08-01 21:49:44 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 21:49:44 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-01 21:49:44 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-01 21:49:44 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-01 21:49:44 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-01 21:50:00 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-01 21:50:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 21:50:00 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-01 21:50:34 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-01 21:50:34 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='f9c0e908-5021-11ef-b75d-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-01 21:50:34 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x31d63ada0>
2024-08-01 21:50:34 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-01 21:50:34 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 92a4c1cc-6a54-470d-8ca4-75ab2b3f0aa9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 92a4c1cc-6a54-470d-8ca4-75ab2b3f0aa9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 92a4c1cc-6a54-470d-8ca4-75ab2b3f0aa9, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72a84144-e173-44e7-8dcd-19b5404a5e64, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72a84144-e173-44e7-8dcd-19b5404a5e64, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 72a84144-e173-44e7-8dcd-19b5404a5e64, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='3b7d5d23c6fcd6a29b38d96babace0de:0cbb6f362bd29205', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='3b7d5d23c6fcd6a29b38d96babace0de:0cbb6f362bd29205', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dcff02f-6efb-4ddb-8f3e-e3dc143ba5f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dcff02f-6efb-4ddb-8f3e-e3dc143ba5f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1dcff02f-6efb-4ddb-8f3e-e3dc143ba5f1, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x17f152260>
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id feb2fb68-38e2-4395-ad39-c279ed7a729a
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id feb2fb68-38e2-4395-ad39-c279ed7a729a
2024-08-01 21:50:35 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id feb2fb68-38e2-4395-ad39-c279ed7a729a
2024-08-01 21:50:35 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 21:50:35 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-01 21:50:44 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-01 21:50:44 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 12:46:09 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x12f45c460>
2024-08-02 12:46:09 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x12f45c460>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1500bd4e0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1500bd4e0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1500ec280>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1500ec280>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x12d2c5e40>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x12d2c5e40>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1500f7ca0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1500f7ca0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x150138df0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x150138df0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1411eded0>
2024-08-02 12:46:11 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1411eded0>
2024-08-02 12:46:11 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-02 12:46:11 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-02 12:46:11 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-02 12:46:12 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-02 12:46:12 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-02 12:46:14 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1500f64a0>
2024-08-02 12:46:14 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1500f64a0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16f951840>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x16f951840>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16f950790>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x16f950790>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16f952050>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x16f952050>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16f9521a0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x16f9521a0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16f952200>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x16f952200>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16f9e08b0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x16f9e08b0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16f9e0730>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x16f9e0730>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16f9e0a30>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x16f9e0a30>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x16faf9ed0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x16faf9ed0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x16faf9ea0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x16faf9ea0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x16fac69b0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x16fac69b0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16fb0a7d0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x16fb0a7d0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x16fac6a40>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x16fac6a40>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16fb0a9e0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x16fb0a9e0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16fb0a920>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x16fb0a920>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x16cbd5de0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x16cbd5de0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x16cbd5d20>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x16cbd5d20>
2024-08-02 12:46:15 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 12:46:15 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

315243ff05f0 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/315243ff05f0_new_migration.py)
e7b5af284887 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e7b5af284887_new_migration.py)
69e556edd3d0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/69e556edd3d0_new_migration.py)
328b754cf1d6 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 12:46:15 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 315243ff05f0, latest revision: 315243ff05f0
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 12:46:15 | INFO | alembic.runtime.migration | Running upgrade 315243ff05f0 -> 2412acd54f44, New migration
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16f9e37c0>
2024-08-02 12:46:15 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x16f9e37c0>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 12:46:15 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 12:46:15 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 12:46:15 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x16d6ec700>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 12:46:15 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x16d6ec700>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 12:46:15 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=49fcc3b2-d71e-4c68-96c8-65597ab766d9)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=49fcc3b2-d71e-4c68-96c8-65597ab766d9)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324991f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324991f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324991f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=47d31802-a7c1-4e5d-ba84-2d7320c39581)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=47d31802-a7c1-4e5d-ba84-2d7320c39581)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324992c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324992c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324992c20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a6931dc-7719-4df2-b76d-c5c93ab5b4e8)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a6931dc-7719-4df2-b76d-c5c93ab5b4e8)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3249935b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3249935b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x3249935b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=013516ff-638f-457f-a143-a6b5f8dd709a)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=013516ff-638f-457f-a143-a6b5f8dd709a)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x324993d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x324993d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x324993d90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8648d265-76da-4244-9a08-cd6ea225cd57)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8648d265-76da-4244-9a08-cd6ea225cd57)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b25ab8f4-0514-48ca-ac53-3766954a16d2)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b25ab8f4-0514-48ca-ac53-3766954a16d2)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=915a143d-a392-48d5-8348-98c1ef39c612)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=915a143d-a392-48d5-8348-98c1ef39c612)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4b4e6762-2d0b-42fd-ae7e-89a052729172)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4b4e6762-2d0b-42fd-ae7e-89a052729172)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=639fea72-98b5-43a9-ad66-6cce20cf544b)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=639fea72-98b5-43a9-ad66-6cce20cf544b)
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x324a1e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x16f951f90> to prefix path /api/v1/awel/trigger
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324c97f40>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x324c97f40>
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-base-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 12:46:15 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-base-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 12:46:15 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-base-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-02 12:46:17 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:17 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:19 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:19 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:19 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:19 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 12:46:19 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x326d4f3a0>
2024-08-02 12:46:20 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 12:46:20 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-02 12:46:20 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-02 12:46:20 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-02 12:46:20 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-02 12:47:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 12:47:36 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 12:47:36 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32c77ac20>
2024-08-02 12:47:36 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 12:47:36 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 90b7f034-9b79-4552-8b5e-4f1fe7cd0b0d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 90b7f034-9b79-4552-8b5e-4f1fe7cd0b0d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 90b7f034-9b79-4552-8b5e-4f1fe7cd0b0d, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 992eddd3-57ca-4391-ad6d-4e8ba8771663, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 992eddd3-57ca-4391-ad6d-4e8ba8771663, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 992eddd3-57ca-4391-ad6d-4e8ba8771663, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='3c8d4065a7a57e46f9ca2e5cb7d68092:ce8a1f1113be90de', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='3c8d4065a7a57e46f9ca2e5cb7d68092:ce8a1f1113be90de', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6215d846-697b-4f9d-b39e-d316d0b8d85e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6215d846-697b-4f9d-b39e-d316d0b8d85e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 6215d846-697b-4f9d-b39e-d316d0b8d85e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x16f952080>
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 017aa626-f615-4870-a58f-fcc76cb020ed
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 017aa626-f615-4870-a58f-fcc76cb020ed
2024-08-02 12:47:37 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 017aa626-f615-4870-a58f-fcc76cb020ed
2024-08-02 12:47:37 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 12:47:37 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 12:48:10 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 12:48:10 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 12:48:17 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
with certain symptoms?
What we can do is look at the list of symptoms and find out what provider types (such as primary care physicians, specialists, urgent care centers) had a lot more instances of those specific symptoms. This would show us patterns in how people seek treatment for different conditions.
2024-08-02 12:48:17 | INFO | dbgpt.core.interface.output_parser | illegal json processing:
with certain symptoms?
What we can do is look at the list of symptoms and find out what provider types (such as primary care physicians, specialists, urgent care centers) had a lot more instances of those specific symptoms. This would show us patterns in how people seek treatment for different conditions.
2024-08-02 12:48:17 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response:  with certain symptoms?
What we can do is look at the list of symptoms and find out what provider types (such as primary care physicians, specialists, urgent care centers) had a lot more instances of those specific symptoms. This would show us patterns in how people seek treatment for different conditions.
2024-08-02 12:48:17 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | json load failed: with certain symptoms?
What we can do is look at the list of symptoms and find out what provider types (such as primary care physicians, specialists, urgent care centers) had a lot more instances of those specific symptoms. This would show us patterns in how people seek treatment for different conditions.
2024-08-02 12:48:17 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!Can not find sql in response
2024-08-02 12:48:17 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-02 12:48:17 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-02 13:06:17 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x150348460>
2024-08-02 13:06:17 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x150348460>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16a645990>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x16a645990>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16a6ec280>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x16a6ec280>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1500c5e40>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x1500c5e40>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16a6f6da0>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x16a6f6da0>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16a838f10>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x16a838f10>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1695edff0>
2024-08-02 13:06:18 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1695edff0>
2024-08-02 13:06:18 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-02 13:06:18 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-02 13:06:18 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-02 13:06:20 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-02 13:06:20 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16a6f6710>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x16a6f6710>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x32fcdd960>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x32fcdd960>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x32fcdc8b0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x32fcdc8b0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x32fcde170>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x32fcde170>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x32fcde2c0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x32fcde2c0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x32fcde320>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x32fcde320>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x32fd609d0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x32fd609d0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x32fd60850>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x32fd60850>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x32fd60b50>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x32fd60b50>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x32fe760b0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x32fe760b0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x32fe75f90>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x32fe75f90>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x32fe4aad0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x32fe4aad0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x32feda8f0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x32feda8f0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x32fe4ab60>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x32fe4ab60>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x32fedab00>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x32fedab00>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x32fedaa40>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x32fedaa40>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31ceddf00>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x31ceddf00>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31cedde40>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x31cedde40>
2024-08-02 13:06:23 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 13:06:23 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

2412acd54f44 (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2412acd54f44_new_migration.py)
315243ff05f0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/315243ff05f0_new_migration.py)
e7b5af284887 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e7b5af284887_new_migration.py)
69e556edd3d0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/69e556edd3d0_new_migration.py)
328b754cf1d6 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 13:06:23 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: 2412acd54f44, latest revision: 2412acd54f44
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 13:06:23 | INFO | alembic.runtime.migration | Running upgrade 2412acd54f44 -> bb929bd776bb, New migration
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x1695800a0>
2024-08-02 13:06:23 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x1695800a0>
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 13:06:23 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e337730>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 13:06:23 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x31e337730>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 13:06:23 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 13:06:23 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 13:06:23 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 13:06:23 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:23 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=7ca23bb6-f0f3-476e-9a94-30fc8abfca19)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=7ca23bb6-f0f3-476e-9a94-30fc8abfca19)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9df30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fd5b5da3-8db6-4451-84dd-58a650b47925)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fd5b5da3-8db6-4451-84dd-58a650b47925)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9ec20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b17700f4-94d0-4825-b87a-18f45ce0dc38)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=b17700f4-94d0-4825-b87a-18f45ce0dc38)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323a9f5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4f38ebac-0406-4152-b894-40da9ea8be7d)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4f38ebac-0406-4152-b894-40da9ea8be7d)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323a9fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323a9fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x323a9fd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a076a7e-a3e1-4cdc-859d-5ee29722b67b)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=8a076a7e-a3e1-4cdc-859d-5ee29722b67b)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c288b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a6753297-a361-4143-a05f-a52acb7ebad3)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=a6753297-a361-4143-a05f-a52acb7ebad3)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e13d3e70-b794-48b6-a750-c2061560bb0b)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=e13d3e70-b794-48b6-a750-c2061560bb0b)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c29900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3145863c-add4-4ddb-a368-f071a86ae011)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=3145863c-add4-4ddb-a368-f071a86ae011)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2aef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=da76e080-7e2d-4b1b-90ae-f8e0c9eca811)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=da76e080-7e2d-4b1b-90ae-f8e0c9eca811)
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x323c2a830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x32fcde0b0> to prefix path /api/v1/awel/trigger
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x323d93f40>
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x323d93f40>
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 13:06:24 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 13:06:24 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-02 13:06:26 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:26 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:28 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:28 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:28 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:28 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 13:06:28 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x325e52e60>
2024-08-02 13:06:28 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 13:06:28 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-02 13:06:28 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-02 13:06:28 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-02 13:06:28 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-02 13:06:39 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_normal,test,ollama_proxyllm
2024-08-02 13:06:39 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='f4c409be-50a1-11ef-b1ad-0a065cd3fd91' user_input='hi' user_name=None chat_mode='chat_normal' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 38e07ed1-022a-48a4-9b27-90acb9f7a282, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 38e07ed1-022a-48a4-9b27-90acb9f7a282, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 38e07ed1-022a-48a4-9b27-90acb9f7a282, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4c68725e-870b-4c00-a4f6-0760a5b2461e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4c68725e-870b-4c00-a4f6-0760a5b2461e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 4c68725e-870b-4c00-a4f6-0760a5b2461e, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.app.scene.base_chat | payload request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='You are a helpful AI assistant.', round_index=0), ModelMessage(role='human', content='hi', round_index=0)], temperature=0.6, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='204bb3103b117474402956e9b7e462a1:5a12fde34c624d77', context=ModelRequestContext(stream=True, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='204bb3103b117474402956e9b7e462a1:5a12fde34c624d77', chat_mode='chat_normal', chat_param=None, extra={}, request_id=None))
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 826296c2-b967-42ef-bfc6-9569e44af5e0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 826296c2-b967-42ef-bfc6-9569e44af5e0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 826296c2-b967-42ef-bfc6-9569e44af5e0, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5abd12ca-90b0-4475-962f-8cf1d72e1866
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5abd12ca-90b0-4475-962f-8cf1d72e1866
2024-08-02 13:06:40 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5abd12ca-90b0-4475-962f-8cf1d72e1866
2024-08-02 13:06:40 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:06:40 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:07:03 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:07:03 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:07:24 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 13:07:24 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='0d57c484-50a2-11ef-b1ad-0a065cd3fd91' user_input='can you tell me about this database' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 13:07:24 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32f36cd60>
2024-08-02 13:07:24 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 13:07:24 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d23218a1-f535-4db8-bae2-8b6eeb829cfd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d23218a1-f535-4db8-bae2-8b6eeb829cfd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: d23218a1-f535-4db8-bae2-8b6eeb829cfd, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8ae600e2-7133-4435-932e-03381f9ab233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8ae600e2-7133-4435-932e-03381f9ab233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 8ae600e2-7133-4435-932e-03381f9ab233, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'payers(Id, NAME, ADDRESS, CITY, STATE_HEADQUARTERED, ZIP, PHONE, AMOUNT_COVERED, AMOUNT_UNCOVERED, REVENUE, COVERED_ENCOUNTERS, UNCOVERED_ENCOUNTERS, COVERED_MEDICATIONS, UNCOVERED_MEDICATIONS, COVERED_PROCEDURES, UNCOVERED_PROCEDURES, COVERED_IMMUNIZATIONS, UNCOVERED_IMMUNIZATIONS, UNIQUE_CUSTOMERS, QOLS_AVG, MEMBER_MONTHS), and index keys: sqlite_autoindex_payers_1(`Id`) \', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'organizations(Id, NAME, ADDRESS, CITY, STATE, ZIP, LAT, LON, PHONE, REVENUE, UTILIZATION), and index keys: sqlite_autoindex_organizations_1(`Id`) \', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you tell me about this database\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you tell me about this database', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='6ea878aefd19497144db43ee65b71520:2791ab839b8a302c', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='6ea878aefd19497144db43ee65b71520:2791ab839b8a302c', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3288f629-9167-47e0-8855-8e8faa5a2099, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3288f629-9167-47e0-8855-8e8faa5a2099, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3288f629-9167-47e0-8855-8e8faa5a2099, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id aa47d8f3-c5c9-4ecf-a0e7-310cf3fcc3e8
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id aa47d8f3-c5c9-4ecf-a0e7-310cf3fcc3e8
2024-08-02 13:07:31 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id aa47d8f3-c5c9-4ecf-a0e7-310cf3fcc3e8
2024-08-02 13:07:31 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:07:31 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:08:25 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:08:25 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:08:40 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "The user wants an overview of the database, including its structure and purpose. Given the table names, it seems to contain medical data related to encounters, payers, claims transactions, organizations, and careplans.",     "sql": "SELECT TABLE_NAME, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'test'",     "display_type": "response_table" }
2024-08-02 13:08:40 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT TABLE_NAME, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'test'
2024-08-02 13:08:40 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT TABLE_NAME, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'test', ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 13:08:40 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT TABLE_NAME, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'test']
2024-08-02 13:08:40 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such table: INFORMATION_SCHEMA.TABLES
[SQL: SELECT TABLE_NAME, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'test']
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-02 13:08:40 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-02 13:08:40 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-02 13:09:21 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 13:09:21 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='can you plot which providers are seeing most patients' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 13:09:21 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x308049b40>
2024-08-02 13:09:21 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 13:09:21 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3903a33f-299f-4863-8aaf-0902b2483957, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3903a33f-299f-4863-8aaf-0902b2483957, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3903a33f-299f-4863-8aaf-0902b2483957, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 42103601-aefc-4043-acf8-e50cd6157226, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 42103601-aefc-4043-acf8-e50cd6157226, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 42103601-aefc-4043-acf8-e50cd6157226, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    can you plot which providers are seeing most patients\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='can you plot which providers are seeing most patients', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='75195b9b45f4e6e6864940fe61518fcd:7e229999698572c5', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='75195b9b45f4e6e6864940fe61518fcd:7e229999698572c5', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f87b9681-7db7-4d64-a38a-d357fb79889b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f87b9681-7db7-4d64-a38a-d357fb79889b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f87b9681-7db7-4d64-a38a-d357fb79889b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 0b210d78-7e94-4b5e-92b0-402c39433348
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 0b210d78-7e94-4b5e-92b0-402c39433348
2024-08-02 13:09:26 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 0b210d78-7e94-4b5e-92b0-402c39433348
2024-08-02 13:09:26 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:09:26 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 13:10:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:10:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 13:10:28 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "The user wants to visualize which healthcare providers are handling the largest number of patient cases. To achieve this, we need to count the number of claims per provider and then sort them in descending order to identify the top performers.",     "sql": "SELECT PROVIDERID, COUNT(*) AS PatientCount FROM claims GROUP BY PROVIDERID ORDER BY PatientCount DESC LIMIT 50",     "display_type": "response_pie_chart" }
2024-08-02 13:10:28 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROVIDERID, COUNT(*) AS PatientCount FROM claims GROUP BY PROVIDERID ORDER BY PatientCount DESC LIMIT 50
2024-08-02 13:10:28 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROVIDERID, COUNT(*) AS PatientCount FROM claims GROUP BY PROVIDERID ORDER BY PatientCount DESC LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 13:10:28 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT PROVIDERID, COUNT(*) AS PatientCount FROM claims GROUP BY PROVIDERID ORDER BY PatientCount DESC LIMIT 50]
2024-08-02 14:44:35 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 14:44:35 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='top 10 most common reasons for patient encounters with the description' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 14:44:35 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x31dfe8e80>
2024-08-02 14:44:35 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 14:44:35 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fe441add-698a-44d6-a6f2-8c034d98e8db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fe441add-698a-44d6-a6f2-8c034d98e8db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fe441add-698a-44d6-a6f2-8c034d98e8db, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1a145d80-7ece-4a5e-bf66-7f57e3ef853f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1a145d80-7ece-4a5e-bf66-7f57e3ef853f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 1a145d80-7ece-4a5e-bf66-7f57e3ef853f, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'payer_transitions(PATIENT, MEMBERID, START_YEAR, END_YEAR, PAYER, SECONDARY_PAYER, OWNERSHIP, OWNERNAME)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    top 10 most common reasons for patient encounters with the description\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='top 10 most common reasons for patient encounters with the description', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='d9a37988e74622d5f5f5ba2cd08e7c58:b261e7ee9eb944ec', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='d9a37988e74622d5f5f5ba2cd08e7c58:b261e7ee9eb944ec', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3d9c058d-d62c-4ce6-a4a5-2fedbd83bf76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3d9c058d-d62c-4ce6-a4a5-2fedbd83bf76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 3d9c058d-d62c-4ce6-a4a5-2fedbd83bf76, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 6a0b7b67-83ab-44dd-8ad5-cc64da221d48
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 6a0b7b67-83ab-44dd-8ad5-cc64da221d48
2024-08-02 14:44:39 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 6a0b7b67-83ab-44dd-8ad5-cc64da221d48
2024-08-02 14:44:39 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 14:44:39 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 14:45:59 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 14:45:59 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 14:46:15 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the top 10 most common reasons for patient encounters, we need to analyze the 'encounters' table since it contains a column named 'DESCRIPTION' which likely represents the reason for each encounter. We will group by the 'DESCRIPTION' column and count the occurrences.",     "sql": "SELECT DESCRIPTION, COUNT(*) AS occurrence_count FROM encounters GROUP BY DESCRIPTION ORDER BY occurrence_count DESC LIMIT 10",     "display_type": "response_table" }
2024-08-02 14:46:15 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT DESCRIPTION, COUNT(*) AS occurrence_count FROM encounters GROUP BY DESCRIPTION ORDER BY occurrence_count DESC LIMIT 10
2024-08-02 14:46:15 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT DESCRIPTION, COUNT(*) AS occurrence_count FROM encounters GROUP BY DESCRIPTION ORDER BY occurrence_count DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 14:46:15 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT DESCRIPTION, COUNT(*) AS occurrence_count FROM encounters GROUP BY DESCRIPTION ORDER BY occurrence_count DESC LIMIT 10]
2024-08-02 15:00:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 15:00:38 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='How many unique patients are present in the database?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 15:00:38 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x30fee6b00>
2024-08-02 15:00:38 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:00:38 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5f99268d-d084-419a-8227-fe0ddbeab30b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5f99268d-d084-419a-8227-fe0ddbeab30b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 5f99268d-d084-419a-8227-fe0ddbeab30b, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 27c630ef-3b32-4ef1-b531-c52c2d34c429, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 27c630ef-3b32-4ef1-b531-c52c2d34c429, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 27c630ef-3b32-4ef1-b531-c52c2d34c429, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'encounters(Id, START, STOP, PATIENT, ORGANIZATION, PROVIDER, PAYER, ENCOUNTERCLASS, CODE, DESCRIPTION, BASE_ENCOUNTER_COST, TOTAL_CLAIM_COST, PAYER_COVERAGE, REASONCODE, REASONDESCRIPTION), and index keys: sqlite_autoindex_encounters_1(`Id`) \', \'supplies(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, QUANTITY)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    How many unique patients are present in the database?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='How many unique patients are present in the database?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='da5ec7431c5ff99fa1fc3fd285eac7c0:3fdd7385862f02bf', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='da5ec7431c5ff99fa1fc3fd285eac7c0:3fdd7385862f02bf', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 15164f10-9283-4efb-9097-2222988f20d3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 15164f10-9283-4efb-9097-2222988f20d3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 15164f10-9283-4efb-9097-2222988f20d3, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 48982d15-bbba-40ce-9781-a5bfe62aab66
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 48982d15-bbba-40ce-9781-a5bfe62aab66
2024-08-02 15:00:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 48982d15-bbba-40ce-9781-a5bfe62aab66
2024-08-02 15:00:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:00:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:01:48 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:01:48 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:01:55 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find out how many unique patients are present in the database, we need to count distinct patient values from a table that stores patient information. Given the available tables, 'immunizations', 'imaging_studies', 'observations', 'encounters', and 'supplies', only the 'encounters' table directly involves patients.",     "sql": "SELECT COUNT(DISTINCT PATIENT) AS unique_patients FROM encounters",     "display_type": "response_line_chart" }
2024-08-02 15:01:55 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) AS unique_patients FROM encounters
2024-08-02 15:01:55 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT COUNT(DISTINCT PATIENT) AS unique_patients FROM encounters, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 15:01:55 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT COUNT(DISTINCT PATIENT) AS unique_patients FROM encounters]
2024-08-02 15:04:09 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 15:04:09 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 15:04:09 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x332d98e20>
2024-08-02 15:04:09 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:04:09 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 542ca876-a5ab-463e-a8fc-89250e8ddecc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 542ca876-a5ab-463e-a8fc-89250e8ddecc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 542ca876-a5ab-463e-a8fc-89250e8ddecc, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b1bc57c8-1898-4f99-a523-a6a4d918fc79, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b1bc57c8-1898-4f99-a523-a6a4d918fc79, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: b1bc57c8-1898-4f99-a523-a6a4d918fc79, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='Analyze the total healthcare expenses for each patient based on their claims, medications, and procedures.', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='763ecb3773f0866589be78f406495d07:fe35afd14bab5957', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='763ecb3773f0866589be78f406495d07:fe35afd14bab5957', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2351c88-da4c-4c93-add7-e6f654d5d132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2351c88-da4c-4c93-add7-e6f654d5d132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: f2351c88-da4c-4c93-add7-e6f654d5d132, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b6cf9f99-c3f4-4889-ba2a-0270babde8c8
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b6cf9f99-c3f4-4889-ba2a-0270babde8c8
2024-08-02 15:04:13 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id b6cf9f99-c3f4-4889-ba2a-0270babde8c8
2024-08-02 15:04:13 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:04:13 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:05:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:05:20 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:05:38 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To analyze the total healthcare expenses for each patient, we need to aggregate data from multiple tables including claims, patients, and possibly medications or procedures if they are related through other tables. Given the structure of the database, it seems that 'claims' and 'patients' tables will be crucial in this analysis due to their direct relationship via the PATIENTID field.",     "sql": "SELECT p.Id, SUM(c.AMOUNT) AS TotalHealthcareExpenses FROM patients p JOIN claims c ON p.Id = c.PATIENTID GROUP BY p.Id LIMIT 50;",     "display_type": "response_table" }
2024-08-02 15:05:39 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT p.Id, SUM(c.AMOUNT) AS TotalHealthcareExpenses FROM patients p JOIN claims c ON p.Id = c.PATIENTID GROUP BY p.Id LIMIT 50;
2024-08-02 15:05:39 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT p.Id, SUM(c.AMOUNT) AS TotalHealthcareExpenses FROM patients p JOIN claims c ON p.Id = c.PATIENTID GROUP BY p.Id LIMIT 50;, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 15:05:39 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT p.Id, SUM(c.AMOUNT) AS TotalHealthcareExpenses FROM patients p JOIN claims c ON p.Id = c.PATIENTID GROUP BY p.Id LIMIT 50;]
2024-08-02 15:05:39 | ERROR | dbgpt.app.scene.chat_db.auto_execute.out_parser | parse_view_response error!(sqlite3.OperationalError) no such column: c.AMOUNT
[SQL: SELECT p.Id, SUM(c.AMOUNT) AS TotalHealthcareExpenses FROM patients p JOIN claims c ON p.Id = c.PATIENTID GROUP BY p.Id LIMIT 50;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-02 15:05:39 | ERROR | dbgpt.util.retry | Attempt 1 of 1 failed with error: AppActionException, Generate view content failed
2024-08-02 15:05:39 | INFO | dbgpt.util.retry | Retrying... (Attempt 1 of 1)
2024-08-02 15:06:30 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 15:06:30 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='What are the most common types of observations recorded?\n' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 15:06:30 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x332e2b100>
2024-08-02 15:06:31 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:06:32 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 07fcb9b1-f49b-4483-828c-1c685e9e8571, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 07fcb9b1-f49b-4483-828c-1c685e9e8571, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 07fcb9b1-f49b-4483-828c-1c685e9e8571, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97dc3eae-9650-4f04-a9f2-ece59d65b366, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97dc3eae-9650-4f04-a9f2-ece59d65b366, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 97dc3eae-9650-4f04-a9f2-ece59d65b366, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'observations(DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, TYPE)\', \'allergies(START, STOP, PATIENT, ENCOUNTER, CODE, SYSTEM, DESCRIPTION, TYPE, CATEGORY, REACTION1, DESCRIPTION1, SEVERITY1, REACTION2, DESCRIPTION2, SEVERITY2)\', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'careplans(Id, START, STOP, PATIENT, ENCOUNTER, CODE, DESCRIPTION, REASONCODE, REASONDESCRIPTION)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the most common types of observations recorded?\n\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the most common types of observations recorded?\n', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='bd0e10fcf51db47ef25c0b3913dcb862:62960a1c09995d3e', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='bd0e10fcf51db47ef25c0b3913dcb862:62960a1c09995d3e', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: daed4263-9bdc-49d9-8e42-0936e7c7e713, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: daed4263-9bdc-49d9-8e42-0936e7c7e713, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: daed4263-9bdc-49d9-8e42-0936e7c7e713, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5c5f0d36-7004-46ce-bb24-221da5e7ae2e
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5c5f0d36-7004-46ce-bb24-221da5e7ae2e
2024-08-02 15:06:36 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id 5c5f0d36-7004-46ce-bb24-221da5e7ae2e
2024-08-02 15:06:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:06:36 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:07:22 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:07:22 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:07:28 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the most common types of observations recorded, we need to analyze the 'observations' table which contains data related to patient encounters categorized by various attributes like DATE, PATIENT, ENCOUNTER, CATEGORY, CODE, DESCRIPTION, VALUE, UNITS, and TYPE. We will focus on the 'TYPE' column as it likely represents different observation types.",     "sql": "SELECT TYPE, COUNT(*) AS count FROM observations GROUP BY TYPE ORDER BY count DESC LIMIT 50",     "display_type": "response_table" }
2024-08-02 15:07:28 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT TYPE, COUNT(*) AS count FROM observations GROUP BY TYPE ORDER BY count DESC LIMIT 50
2024-08-02 15:07:28 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT TYPE, COUNT(*) AS count FROM observations GROUP BY TYPE ORDER BY count DESC LIMIT 50, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 15:07:28 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT TYPE, COUNT(*) AS count FROM observations GROUP BY TYPE ORDER BY count DESC LIMIT 50]
2024-08-02 15:08:37 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 15:08:37 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='What are the top 10 most prescribed medications?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 15:08:37 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x32f36d420>
2024-08-02 15:08:37 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:08:37 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd3102bf-f9a8-414f-b850-31e92fcadbc2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd3102bf-f9a8-414f-b850-31e92fcadbc2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: fd3102bf-f9a8-414f-b850-31e92fcadbc2, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c832e3e9-e845-48c1-8358-b7fa85902f68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c832e3e9-e845-48c1-8358-b7fa85902f68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: c832e3e9-e845-48c1-8358-b7fa85902f68, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most prescribed medications?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most prescribed medications?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='1b20745c60666bc21b6938ea33d7d7a8:1ff93983376d0bba', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='1b20745c60666bc21b6938ea33d7d7a8:1ff93983376d0bba', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ab662173-caf2-4372-8a9e-a8111d108541, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ab662173-caf2-4372-8a9e-a8111d108541, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: ab662173-caf2-4372-8a9e-a8111d108541, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e31e49af-057e-4f5a-9d2d-21bac0b703ce
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e31e49af-057e-4f5a-9d2d-21bac0b703ce
2024-08-02 15:08:42 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id e31e49af-057e-4f5a-9d2d-21bac0b703ce
2024-08-02 15:08:42 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:08:42 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:09:40 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:09:40 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:09:49 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the top 10 most prescribed medications, we need to analyze the 'claims' table since it contains information about医疗服务和药品处方。我们将查询'claims_transactions'表，因为它包含了具体的药品信息，如PROCEDURECODE（可能是药物代码）。我们需要统计每个药品代码的频率，然后按降序排序并限制结果为前10项。",     "sql": "SELECT PROCEDURECODE, COUNT(*) AS frequency FROM claims_transactions WHERE TYPE = 'medication' GROUP BY PROCEDURECODE ORDER BY frequency DESC LIMIT 10",     "display_type": "response_table" }
2024-08-02 15:09:49 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROCEDURECODE, COUNT(*) AS frequency FROM claims_transactions WHERE TYPE = 'medication' GROUP BY PROCEDURECODE ORDER BY frequency DESC LIMIT 10
2024-08-02 15:09:49 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROCEDURECODE, COUNT(*) AS frequency FROM claims_transactions WHERE TYPE = 'medication' GROUP BY PROCEDURECODE ORDER BY frequency DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 15:09:49 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT PROCEDURECODE, COUNT(*) AS frequency FROM claims_transactions WHERE TYPE = 'medication' GROUP BY PROCEDURECODE ORDER BY frequency DESC LIMIT 10]
2024-08-02 15:14:37 | INFO | dbgpt.app.openapi.api_v1.api_v1 | chat_completions:chat_with_db_execute,test,ollama_proxyllm
2024-08-02 15:14:37 | INFO | dbgpt.app.openapi.api_v1.api_v1 | get_chat_instance:conv_uid='49b1128a-509f-11ef-b174-0a065cd3fd91' user_input='What are the top 10 most prescribed medications?' user_name=None chat_mode='chat_with_db_execute' select_param='test' model_name='ollama_proxyllm' incremental=False sys_code=None
2024-08-02 15:14:37 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x325f02140>
2024-08-02 15:14:37 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:14:37 | INFO | dbgpt.storage.vector_store.chroma_store | ChromaStore similar search
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc55cae7-4bbf-455d-9ef0-b3de2857ac08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc55cae7-4bbf-455d-9ef0-b3de2857ac08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: dc55cae7-4bbf-455d-9ef0-b3de2857ac08, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 29b33b23-77a8-4f81-a424-d7fb499fa4d5, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 29b33b23-77a8-4f81-a424-d7fb499fa4d5, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 29b33b23-77a8-4f81-a424-d7fb499fa4d5, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.app.scene.base_chat | Request: 
ModelRequest(model='ollama_proxyllm', messages=[ModelMessage(role='system', content='\nPlease answer the user\'s question based on the database selected by the user and some of the available table structure definitions of the database.\nDatabase name:\n     test\nTable structure definition:\n     [\'claims(Id, PATIENTID, PROVIDERID, PRIMARYPATIENTINSURANCEID, SECONDARYPATIENTINSURANCEID, DEPARTMENTID, PATIENTDEPARTMENTID, DIAGNOSIS1, DIAGNOSIS2, DIAGNOSIS3, DIAGNOSIS4, DIAGNOSIS5, DIAGNOSIS6, DIAGNOSIS7, DIAGNOSIS8, REFERRINGPROVIDERID, APPOINTMENTID, CURRENTILLNESSDATE, SERVICEDATE, SUPERVISINGPROVIDERID, STATUS1, STATUS2, STATUSP, OUTSTANDING1, OUTSTANDING2, OUTSTANDINGP, LASTBILLEDDATE1, LASTBILLEDDATE2, LASTBILLEDDATEP, HEALTHCARECLAIMTYPEID1, HEALTHCARECLAIMTYPEID2), and index keys: sqlite_autoindex_claims_1(`Id`) \', \'imaging_studies(Id, DATE, PATIENT, ENCOUNTER, SERIES_UID, BODYSITE_CODE, BODYSITE_DESCRIPTION, MODALITY_CODE, MODALITY_DESCRIPTION, INSTANCE_UID, SOP_CODE, SOP_DESCRIPTION, PROCEDURE_CODE)\', \'claims_transactions(ID, CLAIMID, CHARGEID, PATIENTID, TYPE, AMOUNT, METHOD, FROMDATE, TODATE, PLACEOFSERVICE, PROCEDURECODE, MODIFIER1, MODIFIER2, DIAGNOSISREF1, DIAGNOSISREF2, DIAGNOSISREF3, DIAGNOSISREF4, UNITS, DEPARTMENTID, NOTES, UNITAMOUNT, TRANSFEROUTID, TRANSFERTYPE, PAYMENTS, ADJUSTMENTS, TRANSFERS, OUTSTANDING, APPOINTMENTID, LINENOTE, PATIENTINSURANCEID, FEESCHEDULEID, PROVIDERID, SUPERVISINGPROVIDERID)\', \'patients(Id, BIRTHDATE, DEATHDATE, SSN, DRIVERS, PASSPORT, PREFIX, FIRST, LAST, SUFFIX, MAIDEN, MARITAL, RACE, ETHNICITY, GENDER, BIRTHPLACE, ADDRESS, CITY, STATE, COUNTY, ZIP, LAT, LON, HEALTHCARE_EXPENSES, HEALTHCARE_COVERAGE), and index keys: sqlite_autoindex_patients_1(`Id`) \', \'immunizations(DATE, PATIENT, ENCOUNTER, CODE, DESCRIPTION, BASE_COST)\']\n\nConstraint:\n    1.Please understand the user\'s intention based on the user\'s question, and use the given table structure definition to create a grammatically correct sqlite sql. If sql is not required, answer the user\'s question directly.. \n    2.Always limit the query to a maximum of 50 results unless the user specifies in the question the specific number of rows of data he wishes to obtain.\n    3.You can only use the tables provided in the table structure information to generate sql. If you cannot generate sql based on the provided table structure, please say: "The table structure information provided is not enough to generate sql queries." It is prohibited to fabricate information at will.\n    4.Please be careful not to mistake the relationship between tables and columns when generating SQL.\n    5.Please check the correctness of the SQL and ensure that the query performance is optimized under correct conditions.\n    6.Please choose the best one from the display methods given below for data rendering, and put the type name into the name parameter value that returns the required format. If you cannot find the most suitable one, use \'Table\' as the display method. , the available data display methods are as follows: response_line_chart:used to display comparative trend analysis data\nresponse_pie_chart:suitable for scenarios such as proportion and distribution statistics\nresponse_table:suitable for display with many display columns or non-numeric columns\nresponse_scatter_plot:Suitable for exploring relationships between variables, detecting outliers, etc.\nresponse_bubble_chart:Suitable for relationships between multiple variables, highlighting outliers or special situations, etc.\nresponse_donut_chart:Suitable for hierarchical structure representation, category proportion display and highlighting key categories, etc.\nresponse_area_chart:Suitable for visualization of time series data, comparison of multiple groups of data, analysis of data change trends, etc.\nresponse_heatmap:Suitable for visual analysis of time series data, large-scale data sets, distribution of classified data, etc.\n    \nUser Question:\n    What are the top 10 most prescribed medications?\nPlease think step by step and respond according to the following JSON format:\n    "{\\n    \\"thoughts\\": \\"thoughts summary to say to user\\",\\n    \\"sql\\": \\"SQL Query to run\\",\\n    \\"display_type\\": \\"Data display method\\"\\n}"\nEnsure the response is correct json and can be parsed by Python json.loads.\n\n', round_index=0), ModelMessage(role='human', content='What are the top 10 most prescribed medications?', round_index=0)], temperature=0.5, max_new_tokens=1024, stop=None, stop_token_ids=None, context_len=None, echo=False, span_id='06d70e8c01f37241272777e39f035b50:18ba3f482a82d4fc', context=ModelRequestContext(stream=False, cache_enable=False, user_name=None, sys_code=None, conv_uid=None, span_id='06d70e8c01f37241272777e39f035b50:18ba3f482a82d4fc', chat_mode='chat_with_db_execute', chat_param=None, extra={}, request_id=None))
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 280dca94-fc8d-41ef-99fe-137c35c90a49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 280dca94-fc8d-41ef-99fe-137c35c90a49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Begin run workflow from end operator, id: 280dca94-fc8d-41ef-99fe-137c35c90a49, runner: <dbgpt.core.awel.runner.local_runner.DefaultWorkflowRunner object at 0x32fcde1a0>
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 0 result None, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | Skip node name llm_model_cache_node
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.operators.common_operator | branch_input_ctxs 1 result True, is_empty: False
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a643aa29-ac8e-4207-b59c-992f507ce42b
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a643aa29-ac8e-4207-b59c-992f507ce42b
2024-08-02 15:14:41 | INFO | dbgpt.core.awel.runner.local_runner | Skip node name llm_model_cache_node, node id a643aa29-ac8e-4207-b59c-992f507ce42b
2024-08-02 15:14:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:14:41 | INFO | dbgpt.model.adapter.base | Message version is v2
2024-08-02 15:15:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:15:05 | INFO | dbgpt.model.cluster.worker.default_worker | is_first_generate, usage: None
2024-08-02 15:15:33 | INFO | dbgpt.app.scene.chat_db.auto_execute.out_parser | clean prompt response: {     "thoughts": "To find the top 10 most prescribed medications, we need to analyze the 'claims_transactions' table since it contains information about procedures and treatments prescribed by providers. We will focus on the PROCEDURECODE column which likely represents the medication codes. We'll group the results by PROCEDURECODE and count the occurrences of each code, then order them in descending order to find the top 10 medications.",     "sql": "SELECT PROCEDURECODE, COUNT(*) as PrescribedCount FROM claims_transactions GROUP BY PROCEDURECODE ORDER BY PrescribedCount DESC LIMIT 10",     "display_type": "response_table" }
2024-08-02 15:15:33 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROCEDURECODE, COUNT(*) as PrescribedCount FROM claims_transactions GROUP BY PROCEDURECODE ORDER BY PrescribedCount DESC LIMIT 10
2024-08-02 15:15:33 | INFO | dbgpt.datasource.rdbms.base | SQL:SELECT PROCEDURECODE, COUNT(*) as PrescribedCount FROM claims_transactions GROUP BY PROCEDURECODE ORDER BY PrescribedCount DESC LIMIT 10, ttype:Token.Keyword.DML, sql_type:SELECT, table:None
2024-08-02 15:15:33 | INFO | dbgpt.datasource.rdbms.base | Query[SELECT PROCEDURECODE, COUNT(*) as PrescribedCount FROM claims_transactions GROUP BY PROCEDURECODE ORDER BY PrescribedCount DESC LIMIT 10]
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Stop all workers
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x31e36b370>
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._stop_all_worker.<locals>._stop_worker at 0x31e36b370>
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 15:21:42 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 15:21:43 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-02 15:21:43 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-02 15:21:43 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-02 15:21:43 | WARNING | dbgpt.model.cluster.worker.manager | Stop worker, ignored exception from deregister_func: All connection attempts failed
2024-08-02 15:22:27 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x11f648460>
2024-08-02 15:22:27 | INFO | dbgpt.component | Register component with name dbgpt_unified_metadata_db_manager_factory and instance: <dbgpt.storage.metadata.db_factory.UnifiedDBManagerFactory object at 0x11f648460>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1556456f0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_thread_pool_default and instance: <dbgpt.util.executor_utils.DefaultExecutorFactory object at 0x1556456f0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1556eead0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_default_scheduler and instance: <dbgpt.app.initialization.scheduler.DefaultScheduler object at 0x1556eead0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x11f2c5e40>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_model_controller and instance: <dbgpt.model.cluster.controller.controller.ModelControllerAdapter object at 0x11f2c5e40>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1558380a0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_connector_manager and instance: <dbgpt.datasource.manages.connector_manager.ConnectorManager object at 0x1558380a0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x155838fa0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_plugin_hub and instance: <dbgpt.serve.agent.hub.controller.ModulePlugin object at 0x155838fa0>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1535e6080>
2024-08-02 15:22:28 | INFO | dbgpt.component | Register component with name dbgpt_multi_agents and instance: <dbgpt.serve.agent.agents.controller.MultiAgents object at 0x1535e6080>
2024-08-02 15:22:28 | INFO | dbgpt.app.initialization.embedding_component | Register local LocalEmbeddingFactory
2024-08-02 15:22:28 | INFO | dbgpt.model.adapter.embeddings_loader | [EmbeddingsModelWorker] Parameters of device is None, use mps
2024-08-02 15:22:28 | INFO | dbgpt.app.initialization.embedding_component | 

=========================== EmbeddingModelParameters ===========================

model_name: text2vec
model_path: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
device: mps
normalize_embeddings: None
rerank: False
max_length: None

======================================================================


2024-08-02 15:22:29 | INFO | sentence_transformers.SentenceTransformer | Load pretrained SentenceTransformer: /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese
2024-08-02 15:22:29 | WARNING | sentence_transformers.SentenceTransformer | No sentence-transformers model found with name /Users/asif/Desktop/DB-GPT/models/text2vec-large-chinese. Creating a new one with mean pooling.
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1556f67a0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name embedding_factory and instance: <dbgpt.app.initialization.embedding_component.LocalEmbeddingFactory object at 0x1556f67a0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x177c519f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_model_cache_manager and instance: <dbgpt.storage.cache.manager.LocalCacheManager object at 0x177c519f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x177c50940>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_awel_trigger_manager and instance: <dbgpt.core.awel.trigger.trigger_manager.DefaultTriggerManager object at 0x177c50940>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x177c52200>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_awel_dag_manager and instance: <dbgpt.core.awel.dag.dag_manager.DAGManager object at 0x177c52200>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x177c52350>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_resource_manager and instance: <dbgpt.agent.resource.manage.ResourceManager object at 0x177c52350>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x177c523b0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_agent_manager and instance: <dbgpt.agent.core.agent_manage.AgentManager object at 0x177c523b0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x177cd81f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_app_editor_service and instance: <dbgpt.app.openapi.api_v1.editor.service.EditorService object at 0x177cd81f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x177cd84f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt and instance: <dbgpt.serve.prompt.serve.Serve object at 0x177cd84f0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x177cd8070>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_prompt_service and instance: <dbgpt.serve.prompt.service.service.Service object at 0x177cd8070>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x177dfe140>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation and instance: <dbgpt.serve.conversation.serve.Serve object at 0x177dfe140>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x177dfe020>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_conversation_service and instance: <dbgpt.serve.conversation.service.service.Service object at 0x177dfe020>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x177db6b60>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow and instance: <dbgpt.serve.flow.serve.Serve object at 0x177db6b60>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x171b56980>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_dbgpts_loader and instance: <dbgpt.util.dbgpts.loader.DBGPTsLoader object at 0x171b56980>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x177db6bf0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_serve_flow_service and instance: <dbgpt.serve.flow.service.service.Service object at 0x177db6bf0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x171b56b90>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_rag and instance: <dbgpt.serve.rag.serve.Serve object at 0x171b56b90>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x171b56ad0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_rag_service and instance: <dbgpt.serve.rag.service.service.Service object at 0x171b56ad0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x171ed9f90>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_datasource and instance: <dbgpt.serve.datasource.serve.Serve object at 0x171ed9f90>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x171ed9ed0>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_datasource_service and instance: <dbgpt.serve.datasource.service.service.Service object at 0x171ed9ed0>
2024-08-02 15:22:30 | WARNING | dbgpt.util._db_migration_utils | Initialize and upgrade database metadata with alembic, just run this in your development environment, if you deploy this in production environment, please run webserver with --disable_alembic_upgrade(`python dbgpt/app/dbgpt_server.py --disable_alembic_upgrade`).
we suggest you to use `dbgpt db migration` to initialize and upgrade database metadata with alembic, your can run `dbgpt db migration --help` to get more information.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 15:22:30 | INFO | dbgpt.util._db_migration_utils | Migration versions and their file paths:
========================================Migration versions========================================

bb929bd776bb (current): New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/bb929bd776bb_new_migration.py)
2412acd54f44 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2412acd54f44_new_migration.py)
315243ff05f0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/315243ff05f0_new_migration.py)
e7b5af284887 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e7b5af284887_new_migration.py)
69e556edd3d0 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/69e556edd3d0_new_migration.py)
328b754cf1d6 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/328b754cf1d6_new_migration.py)
e1c9e1f89199 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e1c9e1f89199_new_migration.py)
34d5a391887a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/34d5a391887a_new_migration.py)
108b26ba5abd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/108b26ba5abd_new_migration.py)
27d02737b3e2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/27d02737b3e2_new_migration.py)
6b279d6f1476 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6b279d6f1476_new_migration.py)
5125424024bb : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/5125424024bb_new_migration.py)
ecd042d489ac : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ecd042d489ac_new_migration.py)
e778da8eedfe : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e778da8eedfe_new_migration.py)
3391b413a9dc : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3391b413a9dc_new_migration.py)
c688ff9d8bfa : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c688ff9d8bfa_new_migration.py)
150bd201db2c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/150bd201db2c_new_migration.py)
03fb0bfb7c80 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/03fb0bfb7c80_new_migration.py)
f89c56e09c49 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f89c56e09c49_new_migration.py)
90b9e1607d2b : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/90b9e1607d2b_new_migration.py)
efd5b512d63c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/efd5b512d63c_new_migration.py)
23a5aa127af9 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/23a5aa127af9_new_migration.py)
621264f79be2 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/621264f79be2_new_migration.py)
ce0ec6250d17 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ce0ec6250d17_new_migration.py)
9c33fc0c4a84 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9c33fc0c4a84_new_migration.py)
6a96874c0ad1 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/6a96874c0ad1_new_migration.py)
3631f37a6ede : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/3631f37a6ede_new_migration.py)
d6323dc5dcd7 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6323dc5dcd7_new_migration.py)
f3fd6b330e81 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/f3fd6b330e81_new_migration.py)
20f28f8c5f54 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/20f28f8c5f54_new_migration.py)
e6d632bf773c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/e6d632bf773c_new_migration.py)
2b2b79837a0d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2b2b79837a0d_new_migration.py)
a78aa1af83dd : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/a78aa1af83dd_new_migration.py)
1d400ea0f1e4 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/1d400ea0f1e4_new_migration.py)
22f111585a53 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/22f111585a53_new_migration.py)
7612ed1aa81e : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/7612ed1aa81e_new_migration.py)
0707bedb3d28 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/0707bedb3d28_new_migration.py)
59cbe44e66a5 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/59cbe44e66a5_new_migration.py)
c5ccdbb1b19a : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/c5ccdbb1b19a_new_migration.py)
164cf5fd633d : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/164cf5fd633d_new_migration.py)
9938eed5060c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9938eed5060c_new_migration.py)
9026e122f186 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/9026e122f186_new_migration.py)
8e94e14a6e05 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/8e94e14a6e05_new_migration.py)
d6b8c200cc0c : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/d6b8c200cc0c_new_migration.py)
2e7e60e5b62f : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/2e7e60e5b62f_new_migration.py)
ebce9eae2f56 : New migration (Path: /Users/asif/Desktop/DB-GPT/pilot/meta_data/alembic/versions/ebce9eae2f56_new_migration.py)
==========================================================================================
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 15:22:30 | INFO | dbgpt.util._db_migration_utils | alembic migration current revision: bb929bd776bb, latest revision: bb929bd776bb
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Context impl SQLiteImpl.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Will assume non-transactional DDL.
2024-08-02 15:22:30 | INFO | alembic.runtime.migration | Running upgrade bb929bd776bb -> 5abe01af3fb4, New migration
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Register WorkerManager dbgpt_worker_manager_factory
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x1535abb20>
2024-08-02 15:22:30 | INFO | dbgpt.component | Register component with name dbgpt_worker_manager_factory and instance: <dbgpt.model.cluster.worker.manager._DefaultWorkerManagerFactory object at 0x1535abb20>
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Worker params: 

=========================== ModelWorkerParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
host: 0.0.0.0
port: 5670
daemon: False
log_level: None
log_file: dbgpt_model_worker_manager.log
tracer_file: dbgpt_model_worker_manager_tracer.jsonl
tracer_to_open_telemetry: False
otel_exporter_otlp_traces_endpoint: None
otel_exporter_otlp_traces_insecure: None
otel_exporter_otlp_traces_certificate: None
otel_exporter_otlp_traces_headers: None
otel_exporter_otlp_traces_timeout: None
otel_exporter_otlp_traces_compression: None
worker_type: None
model_alias: None
worker_class: None
model_type: huggingface
limit_model_concurrency: 5
standalone: True
register: True
worker_register_host: None
controller_addr: None
send_heartbeat: True
heartbeat_interval: 20
tracer_storage_cls: None

======================================================================


2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Run WorkerManager with standalone mode, controller_addr: http://127.0.0.1:5670
2024-08-02 15:22:30 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x173232bc0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 15:22:30 | WARNING | dbgpt.util.api_utils | Health check failed for http://127.0.0.1:5670, error: HTTPConnectionPool(host='127.0.0.1', port=5670): Max retries exceeded with url: /api/health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x173232bc0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2024-08-02 15:22:30 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 15:22:30 | INFO | dbgpt.model.adapter.model_adapter | Current model ollama_proxyllm use new adapter <OllamaLLMModelAdapter model_name=ollama_proxyllm model_path=ollama_proxyllm>
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.default_worker | model_name: ollama_proxyllm, model_path: ollama_proxyllm, model_param_class: <class 'dbgpt.model.parameter.ProxyModelParameters'>
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.default_worker | [DefaultModelWorker] Parameters of device is None, use mps
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 15:22:30 | INFO | dbgpt.model.cluster.worker.manager | Init empty instances list for ollama_proxyllm@llm
2024-08-02 15:22:30 | INFO | dbgpt.util.dbgpts.loader | Found 0 dbgpts packages from /Users/asif/.dbgpts/packages/6374767bfc89bd86b1d7613ad92e86c9
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_rewrite_example) from mod <module 'unusual_prefix_592afab84e5de9c46157ec2eeeeb0a269dbd3e66_simple_rag_rewrite_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_rewrite_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:30 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_nl_schema_sql_chart_example) from mod <module 'unusual_prefix_3e11d671aac2b483414e1d9c24ae59bd1369f736_simple_nl_schema_sql_chart_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_nl_schema_sql_chart_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_dag_example) from mod <module 'unusual_prefix_bf003943cace27209001ebb4e442559170de2eda_simple_chat_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=simple_dag_example) from mod <module 'unusual_prefix_bab5e005947fb1f9b91c90f5c76b267857176661_simple_dag_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_dag_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_rag_summary_example) from mod <module 'unusual_prefix_b8dc1ac2c926a86c30d947aec0f6dac0a8a4dbb1_simple_rag_summary_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_rag_summary_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_chat_history) from mod <module 'unusual_prefix_3d17da5991749d37ad72ac979cda51f83e5b6ec3_simple_chat_history_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_chat_history_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_generate) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_simple_llm_client_count_token) from mod <module 'unusual_prefix_ea4d50bc0b0103e9046c97b37f7623d6ac2d6185_simple_llm_client_example' from '/Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/simple_llm_client_example.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Importing /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.dag.loader | Found dag DAG(dag_id=dbgpt_awel_data_analyst_assistant) from mod <module 'unusual_prefix_12b82a143120f511a6c265b333c2bc74a70ad7e2_data_analyst_assistant' from '/Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py'> and model file /Users/asif/Desktop/DB-GPT/examples/awel/data_analyst_assistant.py
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=5b4bca72-8922-4780-a5a5-b690a52ceaf6)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=5b4bca72-8922-4780-a5a5-b690a52ceaf6)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x319799f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x319799f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x319799f30>(AWEL_trigger_route__examples_rag_rewrite), endpoint: /examples/rag/rewrite, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/rewrite
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=dc6aee9e-c86b-4702-9990-e4bbcbe226bb)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=dc6aee9e-c86b-4702-9990-e4bbcbe226bb)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979ac20>(AWEL_trigger_route__examples_rag_schema_linking), endpoint: /examples/rag/schema_linking, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/schema_linking
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4a340883-8b10-4c6f-9bb7-b6128628fc67)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=4a340883-8b10-4c6f-9bb7-b6128628fc67)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31979b5b0>(AWEL_trigger_route__examples_simple_chat), endpoint: /examples/simple_chat, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_chat
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=020faa32-08f0-4f84-b7e8-349b18e0e420)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=020faa32-08f0-4f84-b7e8-349b18e0e420)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31979bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31979bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function_get at 0x31979bd90>(AWEL_trigger_route__examples_hello), endpoint: /examples/hello, methods: ['GET']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/hello
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=cbee9c40-c981-4cc5-bacb-aec89cfde2e3)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=cbee9c40-c981-4cc5-bacb-aec89cfde2e3)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981c8b0>(AWEL_trigger_route__examples_rag_summary), endpoint: /examples/rag/summary, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/rag/summary
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=86058b30-8e2e-450d-9216-03d8567c0760)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=86058b30-8e2e-450d-9216-03d8567c0760)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d120>(AWEL_trigger_route__examples_simple_history_multi_round_chat_completions), endpoint: /examples/simple_history/multi_round/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_history/multi_round/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f5aa7887-05eb-43d0-b6b7-aa8367d8728f)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=f5aa7887-05eb-43d0-b6b7-aa8367d8728f)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981d900>(AWEL_trigger_route__examples_simple_client_chat_completions), endpoint: /examples/simple_client/chat/completions, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/chat/completions
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1b7d6728-13d9-4099-a753-02c216e0c504)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=1b7d6728-13d9-4099-a753-02c216e0c504)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981eef0>(AWEL_trigger_route__examples_simple_client_count_token), endpoint: /examples/simple_client/count_token, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/simple_client/count_token
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fb16a214-78bd-410a-bd9c-35379d97ee7e)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Register trigger HttpTrigger(node_id=fb16a214-78bd-410a-bd9c-35379d97ee7e)
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | mount router function <function HttpTrigger._create_route_func.<locals>.create_route_function.<locals>.route_function at 0x31981e830>(AWEL_trigger_route__examples_data_analyst_copilot), endpoint: /examples/data_analyst/copilot, methods: ['POST']
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.http_trigger | Mount http trigger success, path: /api/v1/awel/trigger/examples/data_analyst/copilot
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.core.awel.trigger.trigger_manager | Include router <fastapi.routing.APIRouter object at 0x177c52140> to prefix path /api/v1/awel/trigger
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Begin start all worker, apply_req: None
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x319993f40>
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Apply req: None, apply_func: <function LocalWorkerManager._start_all_worker.<locals>._start_worker at 0x319993f40>
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.manager | Apply to all workers
2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 15:22:31 | INFO | dbgpt.model.cluster.worker.default_worker | Begin load model, model params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================


2024-08-02 15:22:31 | INFO | dbgpt.model.adapter.proxy_adapter | Load model from params: 

=========================== ProxyModelParameters ===========================

model_name: ollama_proxyllm
model_path: ollama_proxyllm
proxy_server_url: http://127.0.0.1:11434
proxy_api_key: n******d
proxy_api_base: None
proxy_api_app_id: None
proxy_api_secret: None
proxy_api_type: None
proxy_api_version: None
http_proxy: None
proxyllm_backend: deepseek-coder-v2:16b-lite-instruct-q5_K_M
model_type: proxy
device: mps
prompt_template: None
max_context_size: 4096
llm_client_class: None

======================================================================

, llm client class: <class 'dbgpt.model.proxy.llms.ollama.OllamaLLMClient'>
2024-08-02 15:22:33 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:33 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:35 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:35 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:35 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:35 | WARNING | dbgpt.util.api_utils | No healthy urls found, selecting randomly
2024-08-02 15:22:35 | INFO | dbgpt.datasource.manages.connect_config_db | Result: <sqlalchemy.engine.cursor.CursorResult object at 0x31ba532e0>
2024-08-02 15:22:35 | INFO | dbgpt.serve.rag.connector | VectorStore:<class 'dbgpt.storage.vector_store.chroma_store.ChromaStore'>
2024-08-02 15:22:35 | INFO | dbgpt.storage.vector_store.chroma_store | Check persist_dir: /Users/asif/Desktop/DB-GPT/pilot/data/test_profile.vectordb
2024-08-02 15:22:35 | INFO | dbgpt.rag.summary.db_summary_client | Vector store name test_profile exist
2024-08-02 15:22:35 | INFO | dbgpt.rag.summary.db_summary_client | initialize db summary profile success...
2024-08-02 15:22:35 | INFO | dbgpt.rag.summary.db_summary_client | db summary embedding success
2024-08-02 15:23:02 | INFO | dbgpt.app.openapi.api_v1.api_v1 | /controller/model/types
2024-08-02 15:23:02 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
2024-08-02 15:23:02 | INFO | dbgpt.model.cluster.controller.controller | Get all instances with None, healthy_only: True
